{"version":3,"file":"ol-custom.js","sources":["node_modules/ol/util.js","node_modules/ol/AssertionError.js","node_modules/ol/events/Event.js","node_modules/ol/ObjectEventType.js","node_modules/ol/Disposable.js","node_modules/ol/array.js","node_modules/ol/functions.js","node_modules/ol/obj.js","node_modules/ol/events/Target.js","node_modules/ol/events/EventType.js","node_modules/ol/events.js","node_modules/ol/Observable.js","node_modules/ol/Object.js","node_modules/ol/CollectionEventType.js","node_modules/ol/Collection.js","node_modules/ol/asserts.js","node_modules/ol/Feature.js","node_modules/ol/geom/GeometryLayout.js","node_modules/ol/geom/GeometryType.js","node_modules/ol/proj/Units.js","node_modules/ol/transform.js","node_modules/ol/extent/Corner.js","node_modules/ol/extent/Relationship.js","node_modules/ol/extent.js","node_modules/ol/proj/Projection.js","node_modules/ol/math.js","node_modules/ol/proj/epsg3857.js","node_modules/ol/proj/epsg4326.js","node_modules/ol/proj/projections.js","node_modules/ol/proj/transforms.js","node_modules/ol/sphere.js","node_modules/ol/string.js","node_modules/ol/coordinate.js","node_modules/ol/proj.js","node_modules/ol/geom/flat/transform.js","node_modules/ol/geom/Geometry.js","node_modules/ol/geom/SimpleGeometry.js","node_modules/ol/geom/flat/closest.js","node_modules/ol/geom/flat/deflate.js","node_modules/ol/geom/flat/simplify.js","node_modules/ol/geom/flat/inflate.js","node_modules/ol/geom/flat/area.js","node_modules/ol/geom/LinearRing.js","node_modules/ol/geom/Point.js","node_modules/ol/geom/flat/contains.js","node_modules/ol/geom/flat/interiorpoint.js","node_modules/ol/geom/flat/segments.js","node_modules/ol/geom/flat/intersectsextent.js","node_modules/ol/geom/flat/reverse.js","node_modules/ol/geom/flat/orient.js","node_modules/ol/geom/Polygon.js","node_modules/ol/render/EventType.js","node_modules/ol/style/Fill.js","node_modules/ol/geom/flat/interpolate.js","node_modules/ol/geom/flat/length.js","node_modules/ol/geom/LineString.js","node_modules/ol/style/Stroke.js","node_modules/ol/ImageState.js","node_modules/ol/size.js","node_modules/ol/style/Image.js","node_modules/ol/color.js","node_modules/ol/colorlike.js","node_modules/ol/has.js","node_modules/ol/dom.js","node_modules/ol/css.js","node_modules/ol/render/canvas.js","node_modules/ol/style/RegularShape.js","node_modules/ol/style/Circle.js","node_modules/ol/style/Style.js","node_modules/ol/style/TextPlacement.js","node_modules/ol/style/Text.js","node_modules/ol/layer/Property.js","node_modules/ol/layer/Base.js","node_modules/ol/source/State.js","node_modules/ol/layer/Layer.js","node_modules/quickselect/index.js","node_modules/rbush/index.js","node_modules/ol/layer/BaseVector.js","node_modules/ol/render/canvas/Instruction.js","node_modules/ol/render/VectorContext.js","node_modules/ol/render/canvas/Builder.js","node_modules/ol/render/canvas/ImageBuilder.js","node_modules/ol/render/canvas/LineStringBuilder.js","node_modules/ol/render/canvas/PolygonBuilder.js","node_modules/ol/geom/flat/straightchunk.js","node_modules/ol/render/canvas/TextBuilder.js","node_modules/ol/render/canvas/BuilderGroup.js","node_modules/ol/renderer/Layer.js","node_modules/ol/render/Event.js","node_modules/ol/renderer/canvas/Layer.js","node_modules/ol/render/canvas/BuilderType.js","node_modules/ol/geom/flat/textpath.js","node_modules/ol/render/canvas/Executor.js","node_modules/ol/render/canvas/ExecutorGroup.js","node_modules/ol/ViewHint.js","node_modules/ol/render/canvas/Immediate.js","node_modules/ol/style/IconAnchorUnits.js","node_modules/ol/style/IconOrigin.js","node_modules/ol/style/IconImageCache.js","node_modules/ol/ImageBase.js","node_modules/ol/Image.js","node_modules/ol/style/IconImage.js","node_modules/ol/style/Icon.js","node_modules/ol/renderer/vector.js","node_modules/ol/renderer/canvas/VectorLayer.js","node_modules/ol/render/canvas/hitdetect.js","node_modules/ol/layer/Vector.js","node_modules/ol/structs/RBush.js","node_modules/ol/source/Source.js","node_modules/ol/source/VectorEventType.js","node_modules/ol/loadingstrategy.js","node_modules/ol/format/FormatType.js","node_modules/ol/featureloader.js","node_modules/ol/source/Vector.js","node_modules/ol/TileState.js","node_modules/ol/easing.js","node_modules/ol/Tile.js","node_modules/ol/ImageTile.js","node_modules/ol/Kinetic.js","node_modules/ol/renderer/Map.js","node_modules/ol/renderer/Composite.js","node_modules/ol/layer/Group.js","node_modules/ol/MapEvent.js","node_modules/ol/MapBrowserEvent.js","node_modules/ol/MapBrowserEventType.js","node_modules/ol/pointer/EventType.js","node_modules/ol/MapBrowserEventHandler.js","node_modules/ol/MapEventType.js","node_modules/ol/MapProperty.js","node_modules/ol/structs/PriorityQueue.js","node_modules/ol/TileQueue.js","node_modules/ol/ViewProperty.js","node_modules/ol/centerconstraint.js","node_modules/ol/resolutionconstraint.js","node_modules/ol/rotationconstraint.js","node_modules/ol/View.js","node_modules/ol/tilegrid/common.js","node_modules/ol/PluggableMap.js","node_modules/ol/control/Control.js","node_modules/ol/control/Attribution.js","node_modules/ol/control/Rotate.js","node_modules/ol/control/Zoom.js","node_modules/ol/control/ScaleLine.js","node_modules/ol/interaction/Property.js","node_modules/ol/interaction/Interaction.js","node_modules/ol/interaction/DoubleClickZoom.js","node_modules/ol/interaction/Pointer.js","node_modules/ol/events/condition.js","node_modules/ol/interaction/DragPan.js","node_modules/ol/interaction/DragRotate.js","node_modules/ol/render/Box.js","node_modules/ol/interaction/DragBox.js","node_modules/ol/interaction/DragZoom.js","node_modules/ol/events/KeyCode.js","node_modules/ol/interaction/KeyboardPan.js","node_modules/ol/interaction/KeyboardZoom.js","node_modules/ol/interaction/MouseWheelZoom.js","node_modules/ol/interaction/PinchRotate.js","node_modules/ol/interaction/PinchZoom.js","node_modules/ol/interaction/DragAndDrop.js","node_modules/ol/interaction/DragRotateAndZoom.js","node_modules/ol/geom/Circle.js","node_modules/ol/geom/MultiLineString.js","node_modules/ol/geom/MultiPoint.js","node_modules/ol/geom/MultiPolygon.js","node_modules/ol/geom/flat/center.js","node_modules/ol/interaction/Draw.js","node_modules/ol/interaction/Extent.js","node_modules/ol/interaction/Modify.js","node_modules/ol/interaction/Select.js","node_modules/ol/interaction/Snap.js","node_modules/ol/interaction/Translate.js","node_modules/ol/interaction.js","node_modules/ol/Map.js","node_modules/ol/control.js","node_modules/ol/structs/LRUCache.js","node_modules/ol/tilecoord.js","node_modules/ol/TileCache.js","node_modules/ol/TileRange.js","node_modules/ol-layerswitcher/dist/ol-layerswitcher.js","node_modules/ol/format/Feature.js","node_modules/ol/format/JSONFeature.js","node_modules/ol/geom/GeometryCollection.js","node_modules/ol/format/GeoJSON.js","node_modules/ol/xml.js","node_modules/ol/format/XMLFeature.js","node_modules/ol/format/xsd.js","node_modules/ol/format/KML.js","node_modules/ol/webgl.js","node_modules/ol/webgl/Buffer.js","node_modules/ol/webgl/ContextEventType.js","node_modules/ol/webgl/PostProcessingPass.js","node_modules/ol/vec/mat4.js","node_modules/ol/webgl/Helper.js","node_modules/ol/renderer/webgl/Layer.js","node_modules/ol/webgl/RenderTarget.js","node_modules/ol/worker/webgl.js","node_modules/ol/renderer/webgl/PointsLayer.js","node_modules/ol/layer/Heatmap.js","node_modules/ol/layer/BaseImage.js","node_modules/ol/renderer/canvas/ImageLayer.js","node_modules/ol/layer/Image.js","node_modules/ol/renderer/canvas/TileLayer.js","node_modules/ol/layer/TileProperty.js","node_modules/ol/source/TileEventType.js","node_modules/ol/tilegrid/TileGrid.js","node_modules/ol/tilegrid.js","node_modules/ol/source/Tile.js","node_modules/ol/tileurlfunction.js","node_modules/ol/source/UrlTile.js","node_modules/ol/reproj.js","node_modules/ol/layer/BaseTile.js","node_modules/ol/layer/Tile.js","node_modules/ol/reproj/Triangulation.js","node_modules/ol/source/common.js","node_modules/ol/reproj/Tile.js","node_modules/ol/reproj/common.js","node_modules/ol/source/TileImage.js","node_modules/ol/style/expressions.js","node_modules/ol/webgl/ShaderBuilder.js","node_modules/ol/layer/WebGLPoints.js","node_modules/ol/source/BingMaps.js","node_modules/ol/net.js","node_modules/ol/source/XYZ.js","node_modules/ol/reproj/Image.js","node_modules/ol/source/Image.js","node_modules/ol/uri.js","node_modules/ol/source/WMSServerType.js","node_modules/ol/source/ImageWMS.js","node_modules/ol/source/OSM.js","node_modules/ol/source/TileWMS.js","main.js"],"sourcesContent":["/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.5.0';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' +\n            path +\n            '/doc/errors/#' +\n            code +\n            ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange',\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @protected\n         */\n        this.disposed = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed) {\n            this.disposed = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + ((high - low) >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) {\n            /* Too low. */\n            low = mid + 1;\n        }\n        else {\n            /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || (opt_strict && res === 0));\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type {ReturnType} */\n    var lastResult;\n    /** @type {Array<any>} */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var i = 1, ii = arguments.length; i < ii; ++i) {\n            var source = arguments[i];\n            if (source !== undefined && source !== null) {\n                for (var key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        output[key] = source[key];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        var values = [];\n        for (var property in object) {\n            values.push(object[property]);\n        }\n        return values;\n    };\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport { VOID } from '../functions.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*=} opt_target Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.eventTarget_ = opt_target;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.pendingRemovals_ = null;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.dispatching_ = null;\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n         */\n        _this.listeners_ = null;\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_ || (this.listeners_ = {});\n        var listenersForType = listeners[type] || (listeners[type] = []);\n        if (listenersForType.indexOf(listener) === -1) {\n            listenersForType.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        /** @type {import(\"./Event.js\").default|Event} */\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.eventTarget_ || this;\n        }\n        var listeners = this.listeners_ && this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            var dispatching = this.dispatching_ || (this.dispatching_ = {});\n            var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n            if (!(type in dispatching)) {\n                dispatching[type] = 0;\n                pendingRemovals[type] = 0;\n            }\n            ++dispatching[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if ('handleEvent' in listeners[i]) {\n                    propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n                }\n                else {\n                    propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n                }\n                if (propagate === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --dispatching[type];\n            if (dispatching[type] === 0) {\n                var pr = pendingRemovals[type];\n                delete pendingRemovals[type];\n                while (pr--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete dispatching[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * Clean up.\n     */\n    Target.prototype.disposeInternal = function () {\n        this.listeners_ && clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return (this.listeners_ && this.listeners_[type]) || undefined;\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        if (!this.listeners_) {\n            return false;\n        }\n        return opt_type\n            ? opt_type in this.listeners_\n            : Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_ && this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~BaseEvent#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~BaseEvent#error\n     * @api\n     */\n    ERROR: 'error',\n    BLUR: 'blur',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    FOCUS: 'focus',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    TOUCHMOVE: 'touchmove',\n    WHEEL: 'wheel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener,\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { listen, listenOnce, unlistenByKey } from './events.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        var key;\n        if (Array.isArray(type)) {\n            var len = type.length;\n            key = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                key[i] = listenOnce(this, type[i], listener);\n            }\n        }\n        else {\n            key = listenOnce(this, /** @type {string} */ (type), listener);\n        }\n        /** @type {Object} */ (listener).ol_key = key;\n        return key;\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        var key = /** @type {Object} */ (listener).ol_key;\n        if (key) {\n            unByKey(key);\n        }\n        else if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport { assign, isEmpty } from './obj.js';\nimport { getUid } from './util.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        _this.values_ = null;\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_ && this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return (this.values_ && Object.keys(this.values_)) || [];\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return (this.values_ && assign({}, this.values_)) || {};\n    };\n    /**\n     * @return {boolean} The object has properties.\n     */\n    BaseObject.prototype.hasProperties = function () {\n        return !!this.values_;\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        var values = this.values_ || (this.values_ = {});\n        if (opt_silent) {\n            values[key] = value;\n        }\n        else {\n            var oldValue = values[key];\n            values[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Apply any properties from another object without triggering events.\n     * @param {BaseObject} source The source object.\n     * @protected\n     */\n    BaseObject.prototype.applyProperties = function (source) {\n        if (!source.values_) {\n            return;\n        }\n        assign(this.values_ || (this.values_ = {}), source.values_);\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (this.values_ && key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (isEmpty(this.values_)) {\n                this.values_ = null;\n            }\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key)\n        ? changeEventTypeCache[key]\n        : (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove',\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {import(\"./CollectionEventType.js\").default} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number=} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport EventType from './events/EventType.js';\nimport { assert } from './asserts.js';\nimport { listen, unlistenByKey } from './events.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        _this.addEventListener(getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_);\n        if (opt_geometryOrProperties) {\n            if (typeof (\n            /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry) === 'function') {\n                var geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.hasProperties() ? this.getProperties() : null);\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {Geometry|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {Geometry|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature to override the layer style.  This can be a\n     * single style object, an array of styles, or a function that takes a\n     * resolution and returns an array of styles. To unset the feature style, call\n     * `setStyle()` without arguments or a falsey value.\n     * @param {import(\"./style/Style.js\").StyleLike=} opt_style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style;\n        this.styleFunction_ = !opt_style\n            ? undefined\n            : createStyleFunction(opt_style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        this.removeEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.geometryName_ = name;\n        this.addEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM',\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle',\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    /**\n     * Degrees\n     * @api\n     */\n    DEGREES: 'degrees',\n    /**\n     * Feet\n     * @api\n     */\n    FEET: 'ft',\n    /**\n     * Meters\n     * @api\n     */\n    METERS: 'm',\n    /**\n     * Pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n    /**\n     * Tile Pixels\n     * @api\n     */\n    TILE_PIXELS: 'tile-pixels',\n    /**\n     * US Feet\n     * @api\n     */\n    USFEET: 'us-ft',\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n    return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16,\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport { assert } from './asserts.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value,\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return (extent1[0] <= extent2[0] &&\n        extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] &&\n        extent2[3] <= extent1[3]);\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return (extent1[0] == extent2[0] &&\n        extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] &&\n        extent1[3] == extent2[3]);\n}\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n    return (Math.abs(extent1[0] - extent2[0]) < tolerance &&\n        Math.abs(extent1[2] - extent2[2]) < tolerance &&\n        Math.abs(extent1[1] - extent2[1]) < tolerance &&\n        Math.abs(extent1[3] - extent2[3]) < tolerance);\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = (resolution * size[0]) / 2;\n    var dy = (resolution * size[1]) / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return (extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1]);\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - (endY - maxY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - (endX - maxX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - (endY - minY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - (endX - minX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n    var coordinates = [];\n    if (opt_stops > 1) {\n        var width = extent[2] - extent[0];\n        var height = extent[3] - extent[1];\n        for (var i = 0; i < opt_stops; ++i) {\n            coordinates.push(extent[0] + (width * i) / opt_stops, extent[1], extent[2], extent[1] + (height * i) / opt_stops, extent[2] - (width * i) / opt_stops, extent[3], extent[0], extent[3] - (height * i) / opt_stops);\n        }\n    }\n    else {\n        coordinates = [\n            extent[0],\n            extent[1],\n            extent[2],\n            extent[1],\n            extent[2],\n            extent[3],\n            extent[0],\n            extent[3],\n        ];\n    }\n    transformFn(coordinates, coordinates, 2);\n    var xs = [];\n    var ys = [];\n    for (var i = 0, l = coordinates.length; i < l; i += 2) {\n        xs.push(coordinates[i]);\n        ys.push(coordinates[i + 1]);\n    }\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n    var projectionExtent = projection.getExtent();\n    var center = getCenter(extent);\n    if (projection.canWrapX() &&\n        (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n        var offset = worldsAway * worldWidth;\n        extent[0] -= offset;\n        extent[2] -= offset;\n    }\n    return extent;\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ =\n            options.worldExtent !== undefined ? options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ =\n            options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n})();\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport var log2 = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var log2;\n    if ('log2' in Math) {\n        // The environment supports the native Math.log2 function, use it…\n        log2 = Math.log2;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        log2 = function (x) {\n            return Math.log(x) * Math.LOG2E;\n        };\n    }\n    return log2;\n})();\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return (angleInRadians * 180) / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return (angleInDegrees * Math.PI) / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport { cosh } from '../math.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport var MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            },\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (HALF_SIZE * input[i]) / 180;\n        var y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n        if (y > MAX_SAFE_Y) {\n            y = MAX_SAFE_Y;\n        }\n        else if (y < -MAX_SAFE_Y) {\n            y = -MAX_SAFE_Y;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (180 * input[i]) / HALF_SIZE;\n        output[i + 1] =\n            (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT,\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return (cache[code] ||\n        cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n        null);\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport { toDegrees, toRadians } from './math.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) *\n            Math.sin(deltaLonBy2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area +=\n            toRadians(x2 - x1) *\n                (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return (area * radius * radius) / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 +\n        Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/string\n */\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n    var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n    var decimal = numberString.indexOf('.');\n    decimal = decimal === -1 ? numberString.length : decimal;\n    return decimal > width\n        ? numberString\n        : new Array(1 + width - decimal).join('0') + numberString;\n}\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n    var s1 = ('' + v1).split('.');\n    var s2 = ('' + v2).split('.');\n    for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n        var n1 = parseInt(s1[i] || '0', 10);\n        var n2 = parseInt(s2[i] || '0', 10);\n        if (n1 > n2) {\n            return 1;\n        }\n        if (n2 > n1) {\n            return -1;\n        }\n    }\n    return 0;\n}\n//# sourceMappingURL=string.js.map","/**\n * @module ol/coordinate\n */\nimport { getWidth } from './extent.js';\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + (r * dx) / d;\n    var y = y0 + (r * dy) / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = dx === 0 && dy === 0\n        ? 0\n        : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - deg * 3600 - min * 60;\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return (deg +\n        '\\u00b0 ' +\n        padNumber(min, 2) +\n        '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) +\n        '\\u2033' +\n        (normalizedDegrees == 0\n            ? ''\n            : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return (degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n            ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n    if (projection.canWrapX()) {\n        var worldWidth = getWidth(projection.getExtent());\n        var worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n        if (worldsAway) {\n            coordinate[0] -= worldsAway * worldWidth;\n        }\n    }\n    return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number=} opt_sourceExtentWidth Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n    var projectionExtent = projection.getExtent();\n    var worldsAway = 0;\n    if (projection.canWrapX() &&\n        (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])) {\n        var sourceExtentWidth = opt_sourceExtentWidth || getWidth(projectionExtent);\n        worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / sourceExtentWidth);\n    }\n    return worldsAway;\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { PROJECTIONS as EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326, } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport { add as addProj, clear as clearProj, get as getProj, } from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc, } from './proj/transforms.js';\nimport { applyTransform, getWidth } from './extent.js';\nimport { clamp, modulo } from './math.js';\nimport { getDistance } from './sphere.js';\nimport { getWorldsAway } from './coordinate.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string'\n        ? getProj(/** @type {string} */ (projectionLike))\n        : /** @type {Projection} */ (projectionLike) || null;\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution =\n                    (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            if (toEPSG4326_1 === identityTransform && units !== Units.DEGREES) {\n                // no transform is available\n                pointResolution = resolution * projection.getMetersPerUnit();\n            }\n            else {\n                var vertices = [\n                    point[0] - resolution / 2,\n                    point[1],\n                    point[0] + resolution / 2,\n                    point[1],\n                    point[0],\n                    point[1] - resolution / 2,\n                    point[0],\n                    point[1] + resolution / 2,\n                ];\n                vertices = toEPSG4326_1(vertices, vertices, 2);\n                var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n                var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n                pointResolution = (width + height) / 2;\n            }\n            var metersPerUnit = opt_units\n                ? METERS_PER_UNIT[opt_units]\n                : projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return /** @type {Projection} */ (projection);\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {?Projection}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n    return function (coord) {\n        var sourceX = coord[0];\n        var sourceY = coord[1];\n        var transformed, worldsAway;\n        if (sourceProj.canWrapX()) {\n            var sourceExtent = sourceProj.getExtent();\n            var sourceExtentWidth = getWidth(sourceExtent);\n            worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n            if (worldsAway) {\n                // Move x to the real world\n                sourceX = sourceX - worldsAway * sourceExtentWidth;\n            }\n            sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n            sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n            transformed = transform([sourceX, sourceY]);\n        }\n        else {\n            transformed = transform(coord);\n        }\n        if (worldsAway && destProj.canWrapX()) {\n            // Move transformed coordinate back to the offset world\n            transformed[0] += worldsAway * getWidth(destProj.getExtent());\n        }\n        return transformed;\n    };\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, create as createTransform, } from '../transform.js';\nimport { createEmpty, createOrUpdateEmpty, getHeight, returnOrUpdate, } from '../extent.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport { memoizeOne } from '../functions.js';\nimport { transform2D } from './flat/transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, opt_transform) {\n            if (!opt_transform) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var clone = this.clone();\n            clone.applyTransform(opt_transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            var extent = this.computeExtent(this.extent_);\n            if (isNaN(extent[0]) || isNaN(extent[1])) {\n                createOrUpdateEmpty(extent);\n            }\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS\n            ? function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            }\n            : getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport { rotate, scale, transform2D, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./GeometryLayout.js\").default}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {import(\"./GeometryLayout.js\").default} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in counter-clockwise radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index +=\n                stride *\n                    Math.max(((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n                        maxDelta) |\n                        0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredDistance, squaredSegmentDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined\n        ? opt_simplifiedFlatCoordinates\n        : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if (dx1 * dy2 == dy1 * dx2 &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LinearRing} Simplified LinearRing.\n     * @protected\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { containsXY, createOrUpdateFromCoordinate } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        point.applyProperties(this);\n        return point;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { linearRingsContainsXY } from './contains.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; offset + stride < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment, } from '../../extent.js';\nimport { forEach as forEachSegment } from './segments.js';\nimport { linearRingContainsExtent, linearRingContainsXY } from './contains.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge === 0 ? undefined : edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0\n            ? (right && isClockwise) || (!right && !isClockwise)\n            : (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { modulo } from '../math.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { offset as sphereOffset } from '../sphere.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        var polygon = new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        polygon.applyProperties(this);\n        return polygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Polygon} Simplified Polygon.\n     * @protected\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [\n        minX,\n        minY,\n        minX,\n        maxY,\n        maxX,\n        maxY,\n        maxX,\n        minY,\n        minX,\n        minY,\n    ];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n        flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n        flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_dimension Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest, opt_dimension) {\n    var o, t;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        o = offset;\n    }\n    else if (n === 2) {\n        o = offset;\n        t = fraction;\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            t =\n                (target - cumulativeLengths[-index - 2]) /\n                    (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            o = offset + (-index - 2) * stride;\n        }\n        else {\n            o = offset + index * stride;\n        }\n    }\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var dest = opt_dest ? opt_dest : new Array(dimension);\n    for (var i = 0; i < dimension; ++i) {\n        dest[i] =\n            o === undefined\n                ? NaN\n                : t === undefined\n                    ? flatCoordinates[o + i]\n                    : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        var lineString = new LineString(this.flatCoordinates.slice(), this.layout);\n        lineString.applyProperties(this);\n        return lineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest, this.stride);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} Simplified LineString.\n     * @protected\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return GeometryType.LINE_STRING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {CanvasLineCap|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {CanvasLineJoin|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth(),\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {CanvasLineCap|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {CanvasLineJoin|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {CanvasLineCap|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {CanvasLineJoin|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = size;\n            opt_size[1] = size;\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\nimport { toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number|import(\"../size.js\").Size} scale\n * @property {Array<number>} displacement\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.displacement_ = options.displacement;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number|import(\"../size.js\").Size} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    ImageStyle.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the displacement of the shape\n     * @return {Array<number>} Shape's center displacement\n     * @api\n     */\n    ImageStyle.prototype.getDisplacement = function () {\n        return this.displacement_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function () {\n        return abstract();\n    };\n    /*\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * */\n    ImageStyle.prototype.getPixelRatio = function (pixelRatio) {\n        return 1;\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale);\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.listenImageChange = function (listener) {\n        abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) {\n        // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) {\n        // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) {\n        // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n    if (NAMED_COLOR_RE_.test(s)) {\n        s = fromNamed(s);\n    }\n    return (HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0);\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' &&\n    typeof OffscreenCanvas !== 'undefined' &&\n    self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = (function () {\n    var passive = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passive = true;\n            },\n        });\n        window.addEventListener('_', null, options);\n        window.removeEventListener('_', null, options);\n    }\n    catch (error) {\n        // passive not supported\n    }\n    return passive;\n})();\n//# sourceMappingURL=has.js.map","import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n    var canvas = opt_canvasPool && opt_canvasPool.length\n        ? opt_canvasPool.shift()\n        : WORKER_OFFSCREEN_CANVAS\n            ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n            : document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nvar fontRegEx = new RegExp([\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n].join(''), 'i');\nvar fontRegExMatchIndex = [\n    'style',\n    'variant',\n    'weight',\n    'size',\n    'lineHeight',\n    'family',\n];\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport var getFontParameters = function (fontSpec) {\n    var match = fontSpec.match(fontRegEx);\n    if (!match) {\n        return null;\n    }\n    var style = /** @type {FontParameters} */ ({\n        lineHeight: 'normal',\n        size: '1.2em',\n        style: 'normal',\n        weight: 'normal',\n        variant: 'normal',\n    });\n    for (var i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n        var value = match[i + 1];\n        if (value !== undefined) {\n            style[fontRegExMatchIndex[i]] = value;\n        }\n    }\n    style.families = style.family.split(/,\\s?/);\n    return style;\n};\n//# sourceMappingURL=css.js.map","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\nimport { toString } from '../transform.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {import(\"../size.js\").Size} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle +\n                    ' ' +\n                    fontWeight +\n                    ' ' +\n                    size +\n                    fontFamily +\n                    ',' +\n                    referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var div;\n    return function (fontSpec) {\n        var height = textHeights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Žg');\n                var lineHeight = isNaN(Number(font.lineHeight))\n                    ? 1.2\n                    : Number(font.lineHeight);\n                height =\n                    lineHeight *\n                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!div) {\n                    div = document.createElement('div');\n                    div.innerHTML = 'M';\n                    div.style.margin = '0 !important';\n                    div.style.padding = '0 !important';\n                    div.style.position = 'absolute !important';\n                    div.style.left = '-99999px !important';\n                }\n                div.style.font = fontSpec;\n                document.body.appendChild(div);\n                height = div.offsetHeight;\n                document.body.removeChild(div);\n            }\n            textHeights[fontSpec] = height;\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = measureTextWidth(font, text);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if ( /** @type {*} */(labelOrImage).contextInstructions) {\n        // label\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else if (scale[0] < 0 || scale[1] < 0) {\n        // flipped image\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n    }\n    else {\n        // if image not flipped translate and scale can be avoided\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nvar createTransformStringCanvas = null;\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n    if (WORKER_OFFSCREEN_CANVAS) {\n        return toString(transform);\n    }\n    else {\n        if (!createTransformStringCanvas) {\n            createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n        }\n        createTransformStringCanvas.style.transform = toString(transform);\n        return createTransformStringCanvas.style.transform;\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../render/canvas.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: options.scale !== undefined ? options.scale : 1,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ =\n            options.radius !== undefined ? options.radius : options.radius1;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @return {HTMLCanvasElement} Image element.\n     */\n    RegularShape.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionCanvas_) {\n            var renderOptions = this.createRenderOptions();\n            this.createHitDetectionCanvas_(renderOptions);\n        }\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        if (!this.canvas_[pixelRatio || 1]) {\n            var renderOptions = this.createRenderOptions();\n            var context = createCanvasContext2D(renderOptions.size * pixelRatio || 1, renderOptions.size * pixelRatio || 1);\n            this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n            this.canvas_[pixelRatio || 1] = context.canvas;\n        }\n        return this.canvas_[pixelRatio || 1];\n    };\n    /*\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * */\n    RegularShape.prototype.getPixelRatio = function (pixelRatio) {\n        return pixelRatio;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @return {import(\"../size.js\").Size} Size.\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.listenImageChange = function (listener) { };\n    /**\n     * Load not yet loaded URI.\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener) { };\n    /**\n     * @returns {RenderOptions}  The render options\n     * @protected\n     */\n    RegularShape.prototype.createRenderOptions = function () {\n        var lineCap = defaultLineCap;\n        var lineJoin = defaultLineJoin;\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        return {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit,\n        };\n    };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render = function () {\n        var renderOptions = this.createRenderOptions();\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.draw_(renderOptions, context, 0, 0, 1);\n        this.canvas_ = {};\n        this.canvas_[1] = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        var size = context.canvas.width;\n        var imageSize = size;\n        var displacement = this.getDisplacement();\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     * @param {number} pixelRatio The pixel ratio.\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y, pixelRatio) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = renderOptions.lineCap;\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionCanvas_ = this.getImage(1);\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            // determine if fill is transparent (or pattern or gradient)\n            var opacity = 0;\n            if (typeof color === 'string') {\n                color = asArray(color);\n            }\n            if (color === null) {\n                opacity = 1;\n            }\n            else if (Array.isArray(color)) {\n                opacity = color.length === 4 ? color[3] : 1;\n            }\n            if (opacity === 0) {\n                // if a transparent fill style is set, create an extra hit-detection image\n                // with a default fill style\n                var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n                this.hitDetectionCanvas_ = context.canvas;\n                this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke,\n            scale: options.scale !== undefined ? options.scale : 1,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            rotateWithView: options.rotateWithView !== undefined ? options.rotateWithView : false,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {CircleStyle} The cloned style.\n     * @api\n     */\n    CircleStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Set the circle radius.\n     *\n     * @param {number} radius Circle radius.\n     * @api\n     */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n        this.render();\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Style\n */\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {import(\"./Image.js\").default}\n         */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex(),\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)',\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25,\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5,\n                }),\n                fill: fill,\n                stroke: stroke,\n            }),\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5],\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2,\n            }),\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width,\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue,\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2,\n                }),\n            }),\n            zIndex: Infinity,\n        }),\n    ];\n    styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line',\n};\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport { toSize } from '../size.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ =\n            options.fill !== undefined\n                ? options.fill\n                : new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ =\n            options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ =\n            options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill\n            ? options.backgroundFill\n            : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke\n            ? options.backgroundStroke\n            : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill()\n                ? this.getBackgroundFill().clone()\n                : undefined,\n            backgroundStroke: this.getBackgroundStroke()\n                ? this.getBackgroundStroke().clone()\n                : undefined,\n            padding: this.getPadding(),\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|import(\"../size.js\").Size|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    Text.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {!Array<number>} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ =\n            properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ ||\n            /** @type {?} */ ({\n                layer: this,\n                managed: opt_managed === undefined ? true : opt_managed,\n            });\n        var zIndex = this.getZIndex();\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex =\n            zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    /**\n     * Clean up.\n     */\n    BaseLayer.prototype.disposeInternal = function () {\n        if (this.state_) {\n            this.state_.layer = null;\n            this.state_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error',\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addEventListener(getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_);\n        var source = options.source\n            ? /** @type {SourceType} */ (options.source)\n            : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../pixel\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    Layer.prototype.getFeatures = function (pixel) {\n        return this.renderer_.getFeatures(pixel);\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerStatesArray = renderEvent.frameState.layerStatesArray;\n                var layerState = this.getLayerState(false);\n                // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n                assert(!layerStatesArray.some(function (arrayLayerState) {\n                    return arrayLayerState.layer === layerState.layer;\n                }), 67);\n                layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    /**\n     * Clean up.\n     */\n    Layer.prototype.disposeInternal = function () {\n        this.setSource(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution ||\n        resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction, } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder',\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ =\n            options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ =\n            options.renderBuffer !== undefined ? options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ =\n            options.updateWhileAnimating !== undefined\n                ? options.updateWhileAnimating\n                : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ =\n            options.updateWhileInteracting !== undefined\n                ? options.updateWhileInteracting\n                : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n     * that resolves with an array of features. The array will either contain the topmost feature\n     * when a hit was detected, or it will be empty.\n     *\n     * The hit detection algorithm used for this method is optimized for performance, but is less\n     * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n     * is not considered, and icons are only represented by their bounding box instead of the exact\n     * image.\n     *\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n     * @api\n     */\n    BaseVectorLayer.prototype.getFeatures = function (pixel) {\n        return _super.prototype.getFeatures.call(this, pixel);\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    BaseVectorLayer.prototype.renderDeclutter = function (frameState) {\n        if (!frameState.declutterTree) {\n            frameState.declutterTree = new RBush(9);\n        }\n        /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If set to `null`, the layer has no style (a `null` style),\n     * so only features that have their own styles will be rendered in the layer. Call\n     * `setStyle()` without arguments to reset to the default style. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {(import(\"../style/Style.js\").StyleLike|null)=} opt_style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n        this.styleFunction_ =\n            opt_style === null ? undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12,\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText=} opt_declutterImageWithText Shared data for combined decluttering with a text style.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterImageWithText) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText=} opt_declutterImageWithText Shared data for combined decluttering with an image style.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterImageWithText) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, containsCoordinate, coordinateRelationship, } from '../../extent.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../canvas.js';\nimport { equals, reverseSubArray } from '../../array.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray, } from '../../geom/flat/inflate.js';\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1\n            ? dashArray\n            : dashArray.map(function (dash) {\n                return dash * pixelRatio;\n            });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} stride Stride.\n     * @protected\n     * @return {number} My end\n     */\n    CanvasBuilder.prototype.appendFlatPointCoordinates = function (flatCoordinates, stride) {\n        var extent = this.getBufferedMaxExtent();\n        var tmpCoord = this.tmpCoordinate_;\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            tmpCoord[0] = flatCoordinates[i];\n            tmpCoord[1] = flatCoordinates[i + 1];\n            if (containsCoordinate(extent, tmpCoord)) {\n                coordinates[myEnd++] = tmpCoord[0];\n                coordinates[myEnd++] = tmpCoord[1];\n            }\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatLineCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    coordinates[myEnd++] = lastXCoord;\n                    coordinates[myEnd++] = lastYCoord;\n                    skipped = false;\n                }\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            coordinates[myEnd++] = lastXCoord;\n            coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(geometry, feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEndss,\n                geometry,\n                renderer,\n                inflateMultiCoordinatesArray,\n            ]);\n        }\n        else if (type == GeometryType.POLYGON ||\n            type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates =\n                type == GeometryType.POLYGON\n                    ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n                    : geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnds,\n                geometry,\n                renderer,\n                inflateCoordinatesArray,\n            ]);\n        }\n        else if (type == GeometryType.LINE_STRING ||\n            type == GeometryType.CIRCLE) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnd,\n                geometry,\n                renderer,\n                inflateCoordinates,\n            ]);\n        }\n        else if (type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n            if (builderEnd > builderBegin) {\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    renderer,\n                    inflateCoordinates,\n                ]);\n            }\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnd,\n                geometry,\n                renderer,\n            ]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\n        this.beginGeometryInstruction1_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates,\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap =\n                strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash.slice()\n                : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset\n                ? strokeStyleLineDashOffset\n                : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin =\n                strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth =\n                strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit =\n                strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth * this.pixelRatio,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            this.applyPixelRatio(state.lineDash),\n            state.lineDashOffset * this.pixelRatio,\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash &&\n                !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.imagePixelRatio_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        /**\n         * Data shared with a text builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(pointGeometry, feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(multiPointGeometry, feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.imagePixelRatio_ = undefined;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @param {Object=} opt_sharedData Shared data.\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, opt_sharedData) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage();\n        var image = imageStyle.getImage(this.pixelRatio);\n        var origin = imageStyle.getOrigin();\n        this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScaleArray();\n        this.width_ = size[0];\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, strokeInstruction, } from './Instruction.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [\n            CanvasInstruction.MOVE_TO_LINE_TO,\n            myBegin,\n            myEnd,\n        ];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(lineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(multiLineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, \n            /** @type {number} */ (ends[i]), stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, closePathInstruction, fillInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport { snap } from '../../geom/flat/simplify.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle !== undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [\n                CanvasInstruction.MOVE_TO_LINE_TO,\n                myBegin,\n                myEnd,\n            ];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(circleGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(polygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, \n        /** @type {Array<number>} */ (ends), stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(multiPolygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultPadding, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, registerFont, } from '../canvas.js';\nimport { getUid } from '../../util.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n    'left': 0,\n    'end': 0,\n    'center': 0.5,\n    'right': 1,\n    'start': 1,\n    'top': 0,\n    'middle': 0.5,\n    'hanging': 0.2,\n    'alphabetic': 0.8,\n    'ideographic': 0.8,\n    'bottom': 1,\n};\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        /**\n         * Data shared with an image builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var coordinates = this.coordinates;\n        var begin = coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var stride = geometry.getStride();\n        if (textState.placement === TextPlacement.LINE &&\n            (geometryType == GeometryType.LINE_STRING ||\n                geometryType == GeometryType.MULTI_LINE_STRING ||\n                geometryType == GeometryType.POLYGON ||\n                geometryType == GeometryType.MULTI_POLYGON)) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n                    .getEnds()\n                    .slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                ends = [];\n                for (var i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (var i = flatOffset; i < flatEnd; i += stride) {\n                    coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                var end = coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = textState.overflow ? null : [];\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    stride = 2;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (var i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    if (flatCoordinates.length === 0) {\n                        return;\n                    }\n                    stride = 2;\n                    break;\n                default:\n            }\n            var end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n            if (end === begin) {\n                return;\n            }\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            // adjust padding for negative scale\n            var padding = textState.padding;\n            if (padding != defaultPadding &&\n                (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n                var p0 = textState.padding[0];\n                var p1 = textState.padding[1];\n                var p2 = textState.padding[2];\n                var p3 = textState.padding[3];\n                if (textState.scale[0] < 0) {\n                    p1 = -p1;\n                    p3 = -p3;\n                }\n                if (textState.scale[1] < 0) {\n                    p0 = -p0;\n                    p2 = -p2;\n                }\n                padding = [p0, p1, p2, p3];\n            }\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [1, 1],\n                NaN,\n                this.declutterImageWithText_,\n                padding == defaultPadding\n                    ? defaultPadding\n                    : padding.map(function (p) {\n                        return p * pixelRatio_1;\n                    }),\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            var scale = 1 / pixelRatio_1;\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [scale, scale],\n                NaN,\n                this.declutterImageWithText_,\n                padding,\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash,\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale,\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle,\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var strokeWidth = strokeState\n            ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n            : 0;\n        this.instructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            pixelRatio,\n            offsetY,\n            strokeKey,\n            strokeWidth * pixelRatio,\n            text,\n            textKey,\n            1,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            1,\n            offsetY,\n            strokeKey,\n            strokeWidth,\n            text,\n            textKey,\n            1 / pixelRatio,\n        ]);\n    };\n    /**\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @param {Object=} opt_sharedData Shared data.\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, opt_sharedData) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = null;\n                this.textFillState_ = fillState;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                    this.textFillState_ = fillState;\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = null;\n                this.textStrokeState_ = strokeState;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                    this.textStrokeState_ = strokeState;\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            registerFont(font);\n            var textScale = textStyle.getScaleArray();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline =\n                textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? [1, 1] : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ =\n                textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState\n                ? (typeof strokeState.strokeStyle == 'string'\n                    ? strokeState.strokeStyle\n                    : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap +\n                    strokeState.lineDashOffset +\n                    '|' +\n                    strokeState.lineWidth +\n                    strokeState.lineJoin +\n                    strokeState.miterLimit +\n                    '[' +\n                    strokeState.lineDash.join() +\n                    ']'\n                : '';\n            this.textKey_ =\n                textState.font +\n                    textState.scale +\n                    (textState.textAlign || '?') +\n                    (textState.textBaseline || '?');\n            this.fillKey_ = fillState\n                ? typeof fillState.fillStyle == 'string'\n                    ? fillState.fillStyle\n                    : '|' + getUid(fillState.fillStyle)\n                : '';\n        }\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder,\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @protected\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        /**\n         * @type {import(\"../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n        return undefined;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }.bind(this));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Not available when the event is dispatched by the map. Only available\n         * when a Canvas renderer is used, null otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { containsCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target &&\n            target.style.opacity === '' &&\n            target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context &&\n            (context.canvas.width === 0 ||\n                context.canvas.style.transform === transform)) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.left = '0';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / resolution;\n        var sy = -sx;\n        var dx2 = -center[0] + offsetX;\n        var dy2 = -center[1];\n        return composeTransform(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var layer = this.getLayer();\n        var layerExtent = layer.getExtent();\n        if (layerExtent) {\n            var renderCoordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n            /** get only data inside of the layer extent */\n            if (!containsCoordinate(layerExtent, renderCoordinate)) {\n                return null;\n            }\n        }\n        var data;\n        try {\n            var x = Math.round(renderPixel[0]);\n            var y = Math.round(renderPixel[1]);\n            var newCanvas = document.createElement('canvas');\n            var newContext = newCanvas.getContext('2d');\n            newCanvas.width = 1;\n            newCanvas.height = 1;\n            newContext.clearRect(0, 0, 1, 1);\n            newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n            data = newContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text',\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\nimport { rotate } from './transform.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache, rotation) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var x1 = 0;\n    var y1 = 0;\n    var segmentLength = 0;\n    var segmentM = 0;\n    function advance() {\n        x1 = x2;\n        y1 = y2;\n        offset += stride;\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        segmentM += segmentLength;\n        segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n    do {\n        advance();\n    } while (offset < end - stride && segmentM + segmentLength < startM);\n    var interpolate = (startM - segmentM) / segmentLength;\n    var beginX = lerp(x1, x2, interpolate);\n    var beginY = lerp(y1, y2, interpolate);\n    var startOffset = offset - stride;\n    var startLength = segmentM;\n    var endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n    while (offset < end - stride && segmentM + segmentLength < endM) {\n        advance();\n    }\n    interpolate = (endM - segmentM) / segmentLength;\n    var endX = lerp(x1, x2, interpolate);\n    var endY = lerp(y1, y2, interpolate);\n    // Keep text upright\n    var reverse;\n    if (rotation) {\n        var flat = [beginX, beginY, endX, endY];\n        rotate(flat, 0, 4, 2, rotation, flat, flat);\n        reverse = flat[0] > flat[2];\n    }\n    else {\n        reverse = beginX > endX;\n    }\n    var PI = Math.PI;\n    var result = [];\n    var singleSegment = startOffset + stride === offset;\n    offset = startOffset;\n    segmentLength = 0;\n    segmentM = startLength;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    // All on the same segment\n    if (singleSegment) {\n        advance();\n        var previousAngle_1 = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            previousAngle_1 += previousAngle_1 > 0 ? -PI : PI;\n        }\n        var x = (endX + beginX) / 2;\n        var y = (endY + beginY) / 2;\n        result[0] = [x, y, (endM - startM) / 2, previousAngle_1, text];\n        return result;\n    }\n    var previousAngle;\n    for (var i = 0, ii = text.length; i < ii;) {\n        advance();\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -PI : PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        previousAngle = angle;\n        var iStart = i;\n        var charLength = 0;\n        for (; i < ii; ++i) {\n            var index = reverse ? ii - i - 1 : i;\n            var len = scale * measureAndCacheTextWidth(font, text[index], cache);\n            if (offset + stride < end &&\n                segmentM + segmentLength < startM + charLength + len / 2) {\n                break;\n            }\n            charLength += len;\n        }\n        if (i === iStart) {\n            continue;\n        }\n        var chars = reverse\n            ? text.substring(ii - iStart, ii - i)\n            : text.substring(iStart, i);\n        interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        result.push([x, y, charLength / 2, angle, chars]);\n        startM += charLength;\n    }\n    return result;\n}\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../../has.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, setFromArray as transformSetFromArray, } from '../../transform.js';\nimport { createEmpty, createOrUpdate, intersects } from '../../extent.js';\nimport { defaultPadding, defaultTextBaseline, drawImageOrLabel, } from '../canvas.js';\nimport { defaultTextAlign, measureAndCacheTextWidth, measureTextHeight, measureTextWidths, } from '../canvas.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { equals } from '../../array.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @typedef {Object} BBox\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {*} value\n */\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX\n * @property {number} drawImageY\n * @property {number} drawImageW\n * @property {number} drawImageH\n * @property {number} originX\n * @property {number} originY\n * @property {Array<number>} scale\n * @property {BBox} declutterBox\n * @property {import(\"../../transform.js\").Transform} canvasTransform\n */\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n    return replayImageOrLabelArgs[3].declutterBox;\n}\nvar rtlRegEx = new RegExp(\n/* eslint-disable prettier/prettier */\n'[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n    ']'\n/* eslint-enable prettier/prettier */\n);\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n    if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n        align = align === 'start' ? 'left' : 'right';\n    }\n    return TEXT_ALIGN[align];\n}\nvar Executor = /** @class */ (function () {\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n     * @param {import(\"../../size.js\").Size} renderBuffer Render buffer (width/height) in pixels.\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions, renderBuffer) {\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.alignFill_;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        this.renderBuffer_ = renderBuffer;\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        this.widths_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../canvas.js\").Label>}\n         */\n        this.labels_ = {};\n    }\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {import(\"../canvas.js\").Label} Label.\n     */\n    Executor.prototype.createLabel = function (text, textKey, fillKey, strokeKey) {\n        var key = text + textKey + fillKey + strokeKey;\n        if (this.labels_[key]) {\n            return this.labels_[key];\n        }\n        var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n        var fillState = fillKey ? this.fillStates[fillKey] : null;\n        var textState = this.textStates[textKey];\n        var pixelRatio = this.pixelRatio;\n        var scale = [\n            textState.scale[0] * pixelRatio,\n            textState.scale[1] * pixelRatio,\n        ];\n        var align = horizontalTextAlign(text, textState.textAlign || defaultTextAlign);\n        var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var lines = text.split('\\n');\n        var numLines = lines.length;\n        var widths = [];\n        var width = measureTextWidths(textState.font, lines, widths);\n        var lineHeight = measureTextHeight(textState.font);\n        var height = lineHeight * numLines;\n        var renderWidth = width + strokeWidth;\n        var contextInstructions = [];\n        // make canvas 2 pixels wider to account for italic text width measurement errors\n        var w = (renderWidth + 2) * scale[0];\n        var h = (height + strokeWidth) * scale[1];\n        /** @type {import(\"../canvas.js\").Label} */\n        var label = {\n            width: w < 0 ? Math.floor(w) : Math.ceil(w),\n            height: h < 0 ? Math.floor(h) : Math.ceil(h),\n            contextInstructions: contextInstructions,\n        };\n        if (scale[0] != 1 || scale[1] != 1) {\n            contextInstructions.push('scale', scale);\n        }\n        contextInstructions.push('font', textState.font);\n        if (strokeKey) {\n            contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n            contextInstructions.push('lineWidth', strokeWidth);\n            contextInstructions.push('lineCap', strokeState.lineCap);\n            contextInstructions.push('lineJoin', strokeState.lineJoin);\n            contextInstructions.push('miterLimit', strokeState.miterLimit);\n            // eslint-disable-next-line\n            var Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n            if (Context.prototype.setLineDash) {\n                contextInstructions.push('setLineDash', [strokeState.lineDash]);\n                contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n            }\n        }\n        if (fillKey) {\n            contextInstructions.push('fillStyle', fillState.fillStyle);\n        }\n        contextInstructions.push('textBaseline', 'middle');\n        contextInstructions.push('textAlign', 'center');\n        var leftRight = 0.5 - align;\n        var x = align * renderWidth + leftRight * strokeWidth;\n        var i;\n        if (strokeKey) {\n            for (i = 0; i < numLines; ++i) {\n                contextInstructions.push('strokeText', [\n                    lines[i],\n                    x + leftRight * widths[i],\n                    0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n                ]);\n            }\n        }\n        if (fillKey) {\n            for (i = 0; i < numLines; ++i) {\n                contextInstructions.push('fillText', [\n                    lines[i],\n                    x + leftRight * widths[i],\n                    0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n                ]);\n            }\n        }\n        this.labels_[key] = label;\n        return label;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, \n            /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @private\n     * @param {number} sheetWidth Width of the sprite sheet.\n     * @param {number} sheetHeight Height of the sprite sheet.\n     * @param {number} centerX X.\n     * @param {number} centerY Y.\n     * @param {number} width Width.\n     * @param {number} height Height.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {import(\"../../size.js\").Size} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {Array<number>} padding Padding.\n     * @param {boolean} fillStroke Background fill or stroke.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n     */\n    Executor.prototype.calculateImageOrLabelDimensions_ = function (sheetWidth, sheetHeight, centerX, centerY, width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, fillStroke, feature) {\n        anchorX *= scale[0];\n        anchorY *= scale[1];\n        var x = centerX - anchorX;\n        var y = centerY - anchorY;\n        var w = width + originX > sheetWidth ? sheetWidth - originX : width;\n        var h = height + originY > sheetHeight ? sheetHeight - originY : height;\n        var boxW = padding[3] + w * scale[0] + padding[1];\n        var boxH = padding[0] + h * scale[1] + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = boxX;\n            p4[0] = boxX;\n            p1[1] = boxY;\n            p2[1] = boxY;\n            p2[0] = boxX + boxW;\n            p3[0] = p2[0];\n            p3[1] = boxY + boxH;\n            p4[1] = p3[1];\n        }\n        var transform;\n        if (rotation !== 0) {\n            transform = composeTransform(createTransform(), centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(transform, p1);\n            applyTransform(transform, p2);\n            applyTransform(transform, p3);\n            applyTransform(transform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(Math.min(boxX, boxX + boxW), Math.min(boxY, boxY + boxH), Math.max(boxX, boxX + boxW), Math.max(boxY, boxY + boxH), tmpExtent);\n        }\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        return {\n            drawImageX: x,\n            drawImageY: y,\n            drawImageW: w,\n            drawImageH: h,\n            originX: originX,\n            originY: originY,\n            declutterBox: {\n                minX: tmpExtent[0],\n                minY: tmpExtent[1],\n                maxX: tmpExtent[2],\n                maxY: tmpExtent[3],\n                value: feature,\n            },\n            canvasTransform: transform,\n            scale: scale,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n     * @param {ImageOrLabelDimensions} dimensions Dimensions.\n     * @param {number} opacity Opacity.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     * @return {boolean} The image or label was rendered.\n     */\n    Executor.prototype.replayImageOrLabel_ = function (context, contextScale, imageOrLabel, dimensions, opacity, fillInstruction, strokeInstruction) {\n        var fillStroke = !!(fillInstruction || strokeInstruction);\n        var box = dimensions.declutterBox;\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction\n            ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n            : 0;\n        var intersects = box.minX - strokePadding <= canvas.width / contextScale &&\n            box.maxX + strokePadding >= 0 &&\n            box.minY - strokePadding <= canvas.height / contextScale &&\n            box.maxY + strokePadding >= 0;\n        if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImageOrLabel(context, dimensions.canvasTransform, opacity, imageOrLabel, dimensions.originX, dimensions.originY, dimensions.drawImageW, dimensions.drawImageH, dimensions.drawImageX, dimensions.drawImageY, dimensions.scale);\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context['strokeStyle'] = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawLabelWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.createLabel(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = horizontalTextAlign(text, textState.textAlign || defaultTextAlign);\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        // Remove the 2 pixels we added in createLabel() for the anchor\n        var width = label.width / pixelRatio - 2 * textState.scale[0];\n        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = (baseline * label.height) / pixelRatio +\n            2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {FeatureCallback<T>=} opt_featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check\n     *     features that intersect this extent.\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, contextScale, transform, instructions, snapToPixel, opt_featureCallback, opt_hitExtent, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, image, text, textKey, strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation,\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y, currentGeometry;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    currentGeometry = instruction[3];\n                    if (!feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined &&\n                        !intersects(opt_hitExtent, currentGeometry.getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = NaN;\n                        prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    var height = /** @type {number} */ (instruction[6]);\n                    var opacity = /** @type {number} */ (instruction[7]);\n                    var originX = /** @type {number} */ (instruction[8]);\n                    var originY = /** @type {number} */ (instruction[9]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[10]);\n                    var rotation = /** @type {number} */ (instruction[11]);\n                    var scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n                    var width = /** @type {number} */ (instruction[13]);\n                    var declutterImageWithText = /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = labelWithAnchor.label;\n                        instruction[3] = image;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        instruction[4] = anchorX;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        instruction[5] = anchorY;\n                        height = image.height;\n                        instruction[6] = height;\n                        width = image.width;\n                        instruction[13] = width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = false;\n                        backgroundStroke = false;\n                    }\n                    if (rotateWithView && viewRotationFromTransform) {\n                        // Canvas is expected to be rotated to reverse view rotation.\n                        rotation += viewRotation;\n                    }\n                    else if (!rotateWithView && !viewRotationFromTransform) {\n                        // Canvas is not rotated, images need to be rotated back to be north-up.\n                        rotation -= viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths &&\n                            geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        var dimensions = this.calculateImageOrLabelDimensions_(image.width, image.height, pixelCoordinates[d], pixelCoordinates[d + 1], width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, backgroundFill || backgroundStroke, feature);\n                        /** @type {ReplayImageOrLabelArgs} */\n                        var args = [\n                            context,\n                            contextScale,\n                            image,\n                            dimensions,\n                            opacity,\n                            backgroundFill\n                                ? /** @type {Array<*>} */ (lastFillInstruction)\n                                : null,\n                            backgroundStroke\n                                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                                : null,\n                        ];\n                        var imageArgs = void 0;\n                        var imageDeclutterBox = void 0;\n                        if (opt_declutterTree && declutterImageWithText) {\n                            if (!declutterImageWithText[d]) {\n                                // We now have the image for an image+text combination.\n                                declutterImageWithText[d] = args;\n                                // Don't render anything for now, wait for the text.\n                                continue;\n                            }\n                            imageArgs = declutterImageWithText[d];\n                            delete declutterImageWithText[d];\n                            imageDeclutterBox = getDeclutterBox(imageArgs);\n                            if (opt_declutterTree.collides(imageDeclutterBox)) {\n                                continue;\n                            }\n                        }\n                        if (opt_declutterTree &&\n                            opt_declutterTree.collides(dimensions.declutterBox)) {\n                            continue;\n                        }\n                        if (imageArgs) {\n                            // We now have image and text for an image+text combination.\n                            if (opt_declutterTree) {\n                                opt_declutterTree.insert(imageDeclutterBox);\n                            }\n                            // Render the image before we render the text.\n                            this.replayImageOrLabel_.apply(this, imageArgs);\n                        }\n                        if (opt_declutterTree) {\n                            opt_declutterTree.insert(dimensions.declutterBox);\n                        }\n                        this.replayImageOrLabel_.apply(this, args);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    var overflow = /** @type {number} */ (instruction[4]);\n                    fillKey = /** @type {string} */ (instruction[5]);\n                    var maxAngle = /** @type {number} */ (instruction[6]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[7]);\n                    var offsetY = /** @type {number} */ (instruction[8]);\n                    strokeKey = /** @type {string} */ (instruction[9]);\n                    var strokeWidth = /** @type {number} */ (instruction[10]);\n                    text = /** @type {string} */ (instruction[11]);\n                    textKey = /** @type {string} */ (instruction[12]);\n                    var pixelRatioScale = [\n                        /** @type {number} */ (instruction[13]),\n                        /** @type {number} */ (instruction[13]),\n                    ];\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = [\n                        textState.scale[0] * measurePixelRatio,\n                        textState.scale[1] * measurePixelRatio,\n                    ];\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = {};\n                        this.widths_[font] = cachedWidths;\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = Math.abs(textScale[0]) *\n                        measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, Math.abs(textScale[0]), measureAndCacheTextWidth, font, cachedWidths, viewRotationFromTransform ? 0 : this.viewRotation_);\n                        drawChars: if (parts) {\n                            /** @type {Array<ReplayImageOrLabelArgs>} */\n                            var replayImageOrLabelArgs = [];\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, '', strokeKey);\n                                    anchorX =\n                                        /** @type {number} */ (part[2]) +\n                                            (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                                    anchorY =\n                                        baseline * label.height +\n                                            ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                                                textScale[0] -\n                                            offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (opt_declutterTree) {\n                                opt_declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n                            }\n                            for (var i_1 = 0, ii_1 = replayImageOrLabelArgs.length; i_1 < ii_1; ++i_1) {\n                                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i_1]);\n                            }\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (opt_featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = opt_featureCallback(feature, currentGeometry);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     */\n    Executor.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, contextScale, transform, this.instructions, snapToPixel, undefined, undefined, opt_declutterTree);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {FeatureCallback<T>=} opt_featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check\n     *     features that intersect this extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, 1, transform, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}());\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { isEmpty } from '../../obj.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT,\n];\nvar ExecutorGroup = /** @class */ (function () {\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n         */\n        this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        this.hitDetectionContext_ = null;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        this.hitDetectionTransform_ = createTransform();\n        this.createExecutors_(allInstructions);\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                executors = {};\n                this.executorsByZIndex_[zIndex] = executors;\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            var renderBuffer = [this.renderBuffer_ || 0, this.renderBuffer_ || 0];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions, renderBuffer);\n            }\n        }\n    };\n    /**\n     * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        var newContext = !this.hitDetectionContext_;\n        if (newContext) {\n            this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n        }\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize ||\n            context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else if (!newContext) {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var indexes = getPixelIndexArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function featureCallback(feature, geometry) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize)\n                .data;\n            for (var i_1 = 0, ii = indexes.length; i_1 < ii; i_1++) {\n                if (imageData[indexes[i_1]] > 0) {\n                    if (!declutteredFeatures ||\n                        (builderType !== BuilderType.IMAGE &&\n                            builderType !== BuilderType.TEXT) ||\n                        declutteredFeatures.indexOf(feature) !== -1) {\n                        var idx = (indexes[i_1] - 3) / 4;\n                        var x = hitTolerance - (idx % contextSize);\n                        var y = hitTolerance - ((idx / contextSize) | 0);\n                        var result_1 = callback(feature, geometry, x * x + y * y);\n                        if (result_1) {\n                            return result_1;\n                        }\n                    }\n                    context.clearRect(0, 0, contextSize, contextSize);\n                    break;\n                }\n            }\n            return undefined;\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<import(\"./BuilderType.js\").default>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     */\n    ExecutorGroup.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        if (opt_declutterTree) {\n            zs.reverse();\n        }\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    replay.execute(context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree);\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}());\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nvar circlePixelIndexArrayCache = {};\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n    if (circlePixelIndexArrayCache[radius] !== undefined) {\n        return circlePixelIndexArrayCache[radius];\n    }\n    var size = radius * 2 + 1;\n    var maxDistanceSq = radius * radius;\n    var distances = new Array(maxDistanceSq + 1);\n    for (var i = 0; i <= radius; ++i) {\n        for (var j = 0; j <= radius; ++j) {\n            var distanceSq = i * i + j * j;\n            if (distanceSq > maxDistanceSq) {\n                break;\n            }\n            var distance = distances[distanceSq];\n            if (!distance) {\n                distance = [];\n                distances[distanceSq] = distance;\n            }\n            distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n            if (i > 0) {\n                distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n            }\n            if (j > 0) {\n                distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n                if (i > 0) {\n                    distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n                }\n            }\n        }\n    }\n    var pixelIndex = [];\n    for (var i = 0, ii = distances.length; i < ii; ++i) {\n        if (distances[i]) {\n            pixelIndex.push.apply(pixelIndex, distances[i]);\n        }\n    }\n    circlePixelIndexArrayCache[radius] = pixelIndex;\n    return pixelIndex;\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1,\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {number=} opt_squaredTolerance Optional squared tolerance for simplification.\n     * @param {import(\"../../proj.js\").TransformFunction=} opt_userTransform Transform from user to view projection.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.squaredTolerance_ = opt_squaredTolerance;\n        /**\n         * @private\n         * @type {import(\"../../proj.js\").TransformFunction}\n         */\n        _this.userTransform_ = opt_userTransform;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.imageScale_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.textScale_ = [0, 0];\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 ||\n                this.imageScale_[0] != 1 ||\n                this.imageScale_[1] != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n                context.translate(centerX, centerY);\n                context.scale(this.imageScale_[0], this.imageScale_[1]);\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n            }\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 ||\n                this.textScale_[0] != 1 ||\n                this.textScale_[1] != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n                context.translate(x, y);\n                context.scale(this.textScale_[0], this.textScale_[1]);\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, 0, 0);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, 0, 0);\n                }\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, x, y);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, x, y);\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n        this.transform_ = transform;\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(\n                /** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(\n                /** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(\n                /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(\n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(\n                /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(\n                /** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, \n            /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle,\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = fillState.fillStyle;\n                context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle,\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = strokeState.lineCap;\n                context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash((contextStrokeState.lineDash = strokeState.lineDash));\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = strokeState.lineJoin;\n                context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = strokeState.lineWidth;\n                context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = strokeState.miterLimit;\n                context.miterLimit = strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = strokeState.strokeStyle;\n                context.strokeStyle = strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign\n            ? textState.textAlign\n            : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline,\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = textState.font;\n                context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle),\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined\n                    ? strokeStyleLineCap\n                    : defaultLineCap,\n                lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n                lineDashOffset: strokeStyleLineDashOffset\n                    ? strokeStyleLineDashOffset\n                    : defaultLineDashOffset,\n                lineJoin: strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin,\n                lineWidth: this.pixelRatio_ *\n                    (strokeStyleWidth !== undefined\n                        ? strokeStyleWidth\n                        : defaultLineWidth),\n                miterLimit: strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle),\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        if (!imageStyle) {\n            this.image_ = null;\n        }\n        else {\n            var imageSize = imageStyle.getSize();\n            if (!imageSize) {\n                this.image_ = null;\n            }\n            else {\n                var imageAnchor = imageStyle.getAnchor();\n                // FIXME pixel ratio\n                var imageImage = imageStyle.getImage(1);\n                var imageOrigin = imageStyle.getOrigin();\n                var imageScale = imageStyle.getScaleArray();\n                this.imageAnchorX_ = imageAnchor[0];\n                this.imageAnchorY_ = imageAnchor[1];\n                this.imageHeight_ = imageSize[1];\n                this.image_ = imageImage;\n                this.imageOpacity_ = imageStyle.getOpacity();\n                this.imageOriginX_ = imageOrigin[0];\n                this.imageOriginY_ = imageOrigin[1];\n                this.imageRotateWithView_ = imageStyle.getRotateWithView();\n                this.imageRotation_ = imageStyle.getRotation();\n                this.imageScale_ = [\n                    this.pixelRatio_ * imageScale[0],\n                    this.pixelRatio_ * imageScale[1],\n                ];\n                this.imageWidth_ = imageSize[0];\n            }\n        }\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle),\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined\n                        ? textStrokeStyleLineCap\n                        : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash\n                        ? textStrokeStyleLineDash\n                        : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset\n                        ? textStrokeStyleLineDashOffset\n                        : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined\n                        ? textStrokeStyleLineJoin\n                        : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined\n                        ? textStrokeStyleWidth\n                        : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined\n                        ? textStrokeStyleMiterLimit\n                        : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle),\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScaleArray();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ? textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined\n                    ? textTextBaseline\n                    : defaultTextBaseline,\n            };\n            this.text_ = textText !== undefined ? textText : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n            this.textRotateWithView_ =\n                textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = [\n                this.pixelRatio_ * textScale[0],\n                this.pixelRatio_ * textScale[1],\n            ];\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Anchor is a fraction\n     * @api\n     */\n    FRACTION: 'fraction',\n    /**\n     * Anchor is in pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Origin is at bottom left\n     * @api\n     */\n    BOTTOM_LEFT: 'bottom-left',\n    /**\n     * Origin is at bottom right\n     * @api\n     */\n    BOTTOM_RIGHT: 'bottom-right',\n    /**\n     * Origin is at top left\n     * @api\n     */\n    TOP_LEFT: 'top-left',\n    /**\n     * Origin is at top right\n     * @api\n     */\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n         * @type {!Object<string, import(\"./IconImage.js\").default>}\n         * @private\n         */\n        this.cache_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        this.cacheSize_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {import(\"./IconImage.js\").default} Icon image.\n     */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n     */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n     * Set the cache size of the icon cache. Default is `32`. Change this value when\n     * your map uses more than 32 different icon images and you are not caching icon\n     * styles on the application level.\n     * @param {number} maxCacheSize Cache max size.\n     * @api\n     */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise\n            .then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        })\n            .catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' &&\n                    error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler),\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { asString } from '../color.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar taintedTestContext = null;\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            if (!taintedTestContext) {\n                taintedTestContext = createCanvasContext2D(1, 1);\n            }\n            taintedTestContext.drawImage(this.image_, 0, 0);\n            try {\n                taintedTestContext.getImageData(0, 0, 1, 1);\n                this.tainted_ = false;\n            }\n            catch (e) {\n                taintedTestContext = null;\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        else {\n            this.size_ = [this.image_.width, this.image_.height];\n        }\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Image or Canvas element.\n     */\n    IconImage.prototype.getPixelRatio = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? pixelRatio : 1;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function (pixelRatio) {\n        if (!this.color_ || this.canvas_[pixelRatio]) {\n            return;\n        }\n        var canvas = document.createElement('canvas');\n        this.canvas_[pixelRatio] = canvas;\n        canvas.width = Math.ceil(this.image_.width * pixelRatio);\n        canvas.height = Math.ceil(this.image_.height * pixelRatio);\n        var ctx = canvas.getContext('2d');\n        ctx.scale(pixelRatio, pixelRatio);\n        ctx.drawImage(this.image_, 0, 0);\n        ctx.globalCompositeOperation = 'multiply';\n        // Internet Explorer 11 does not support the multiply operation.\n        // If the canvas is tainted in Internet Explorer this still produces\n        // a solid color image with the shape of the icon.\n        if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n            ctx.fillStyle = asString(this.color_);\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            ctx.globalCompositeOperation = 'destination-in';\n            ctx.drawImage(this.image_, 0, 0);\n        }\n        else {\n            var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n            var data = imgData.data;\n            var r = this.color_[0] / 255.0;\n            var g = this.color_[1] / 255.0;\n            var b = this.color_[2] / 255.0;\n            var a = this.color_[3];\n            for (var i = 0, ii = data.length; i < ii; i += 4) {\n                data[i] *= r;\n                data[i + 1] *= g;\n                data[i + 2] *= b;\n                data[i + 3] *= a;\n            }\n            ctx.putImageData(imgData, 0, 0);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { get as getIconImage } from './IconImage.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            rotateWithView: rotateWithView,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ =\n            options.anchorOrigin !== undefined\n                ? options.anchorOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ =\n            options.anchorXUnits !== undefined\n                ? options.anchorXUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ =\n            options.anchorYUnits !== undefined\n                ? options.anchorYUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, \n        /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ =\n            options.offsetOrigin !== undefined\n                ? options.offsetOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            crossOrigin: this.crossOrigin_,\n            color: this.color_ && this.color_.slice\n                ? this.color_.slice()\n                : this.color_ || undefined,\n            src: this.getSrc(),\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n        });\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        if (this.normalizedAnchor_) {\n            return this.normalizedAnchor_;\n        }\n        var anchor = this.anchor_;\n        var size = this.getSize();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n            if (!size) {\n                return null;\n            }\n            anchor = this.anchor_.slice();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[0] *= size[0];\n            }\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[1] *= size[1];\n            }\n        }\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n            if (!size) {\n                return null;\n            }\n            if (anchor === this.anchor_) {\n                anchor = this.anchor_.slice();\n            }\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[0] = -anchor[0] + size[0];\n            }\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[1] = -anchor[1] + size[1];\n            }\n        }\n        this.normalizedAnchor_ = anchor;\n        return this.normalizedAnchor_;\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * Get the pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} The pixel ration of the image.\n     * @api\n     */\n    Icon.prototype.getPixelRatio = function (pixelRatio) {\n        return this.iconImage_.getPixelRatio(pixelRatio);\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    Icon.prototype.getHitDetectionImageSize = function () {\n        return this.getImageSize();\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    Icon.prototype.getHitDetectionImage = function () {\n        return this.iconImage_.getHitDetectionImage();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        var displacement = this.getDisplacement();\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        offset[0] += displacement[0];\n        offset[1] += displacement[1];\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.listenImageChange = function (listener) {\n        this.iconImage_.addEventListener(EventType.CHANGE, listener);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.unlistenImageChange = function (listener) {\n        this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport { getUid } from '../util.js';\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry,\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform, opt_declutterBuilderGroup) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (opt_declutterBuilderGroup) {\n        builderGroup = opt_declutterBuilderGroup;\n        declutterImageWithText =\n            imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n    }\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (opt_declutterBuilderGroup) {\n        builderGroup = opt_declutterBuilderGroup;\n        declutterImageWithText =\n            imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n    }\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport { apply, makeInverse, makeScale, toString as transformToString, } from '../../transform.js';\nimport { buffer, containsExtent, createEmpty, getWidth, intersects as intersectsExtent, wrapX as wrapExtentX, } from '../../extent.js';\nimport { createHitDetectionImageData, hitDetect, } from '../../render/canvas/hitdetect.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature, } from '../vector.js';\nimport { fromUserExtent, getTransformFromProjections, getUserProjection, toUserExtent, } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { wrapX as wrapCoordinateX } from '../../coordinate.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @type {boolean}\n         */\n        _this.animatingOrInteracting_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @type {ImageData}\n         */\n        _this.hitDetectionImageData_ = null;\n        /**\n         * @type {Array<import(\"../../Feature.js\").default>}\n         */\n        _this.renderedFeatures_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRotation_;\n        /**\n         * @private\n         * @type {import(\"../../coordinate\").Coordinate}\n         */\n        _this.renderedCenter_ = null;\n        /**\n         * @private\n         * @type {import(\"../../proj/Projection\").default}\n         */\n        _this.renderedProjection_ = null;\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        /**\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        /**\n         * Clipping to be performed by `renderFrame()`\n         * @type {boolean}\n         */\n        _this.clipping = true;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasVectorLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        if (opacity < 1) {\n            target = null;\n        }\n        _super.prototype.useContainer.call(this, target, transform, opacity);\n    };\n    /**\n     * @param {ExecutorGroup} executorGroup Executor group.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     */\n    CanvasVectorLayerRenderer.prototype.renderWorlds = function (executorGroup, frameState, opt_declutterTree) {\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var center = viewState.center;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        var pixelRatio = frameState.pixelRatio;\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var context = this.context;\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        var multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n        var worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n        var endWorld = multiWorld\n            ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n            : 1;\n        var world = multiWorld\n            ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n            : 0;\n        do {\n            var transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, world * worldWidth);\n            executorGroup.execute(context, 1, transform, rotation, snapToPixel, undefined, opt_declutterTree);\n        } while (++world < endWorld);\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CanvasVectorLayerRenderer.prototype.renderDeclutter = function (frameState) {\n        if (this.declutterExecutorGroup) {\n            this.renderWorlds(this.declutterExecutorGroup, frameState, frameState.declutterTree);\n        }\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var pixelRatio = frameState.pixelRatio;\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = transformToString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        var declutterExecutorGroup = this.declutterExecutorGroup;\n        if ((!replayGroup || replayGroup.isEmpty()) &&\n            (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())) {\n            if (!this.containerReused && canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return this.container;\n        }\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        if (layerState.extent && this.clipping) {\n            var layerExtent = fromUserExtent(layerState.extent, projection);\n            clipped =\n                !containsExtent(layerExtent, frameState.extent) &&\n                    intersectsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        this.renderWorlds(replayGroup, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        var container = this.container;\n        if (opacity !== parseFloat(container.style.opacity)) {\n            container.style.opacity = opacity === 1 ? '' : String(opacity);\n        }\n        if (this.renderedRotation_ !== viewState.rotation) {\n            this.renderedRotation_ = viewState.rotation;\n            this.hitDetectionImageData_ = null;\n        }\n        return this.container;\n    };\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n     */\n    CanvasVectorLayerRenderer.prototype.getFeatures = function (pixel) {\n        return new Promise(\n        /**\n         * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (resolve) {\n            if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n                var size = [this.context.canvas.width, this.context.canvas.height];\n                apply(this.pixelTransform, size);\n                var center = this.renderedCenter_;\n                var resolution = this.renderedResolution_;\n                var rotation = this.renderedRotation_;\n                var projection = this.renderedProjection_;\n                var extent = this.renderedExtent_;\n                var layer = this.getLayer();\n                var transforms = [];\n                var width = size[0] / 2;\n                var height = size[1] / 2;\n                transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, 0).slice());\n                var source = layer.getSource();\n                var projectionExtent = projection.getExtent();\n                if (source.getWrapX() &&\n                    projection.canWrapX() &&\n                    !containsExtent(projectionExtent, extent)) {\n                    var startX = extent[0];\n                    var worldWidth = getWidth(projectionExtent);\n                    var world = 0;\n                    var offsetX = void 0;\n                    while (startX < projectionExtent[0]) {\n                        --world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n                        startX += worldWidth;\n                    }\n                    world = 0;\n                    startX = extent[2];\n                    while (startX > projectionExtent[2]) {\n                        ++world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n                        startX -= worldWidth;\n                    }\n                }\n                this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms, this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n            }\n            resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n        }.bind(this));\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        var _this = this;\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        var resolution = frameState.viewState.resolution;\n        var rotation = frameState.viewState.rotation;\n        var layer = this.getLayer();\n        /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n        var features = {};\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @param {number} distanceSq The squared distance to the click position\n         * @return {T|undefined} Callback result.\n         */\n        var featureCallback = function (feature, geometry, distanceSq) {\n            var key = getUid(feature);\n            var match = features[key];\n            if (!match) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    return callback(feature, layer, geometry);\n                }\n                matches.push((features[key] = {\n                    feature: feature,\n                    layer: layer,\n                    geometry: geometry,\n                    distanceSq: distanceSq,\n                    callback: callback,\n                }));\n            }\n            else if (match !== true && distanceSq < match.distanceSq) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    matches.splice(matches.lastIndexOf(match), 1);\n                    return callback(feature, layer, geometry);\n                }\n                match.geometry = geometry;\n                match.distanceSq = distanceSq;\n            }\n            return undefined;\n        };\n        var result;\n        var executorGroups = [this.replayGroup_];\n        if (this.declutterExecutorGroup) {\n            executorGroups.push(this.declutterExecutorGroup);\n        }\n        executorGroups.some(function (executorGroup) {\n            return (result = executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, featureCallback, executorGroup === _this.declutterExecutorGroup\n                ? frameState.declutterTree.all().map(function (item) { return item.value; })\n                : null));\n        });\n        return result;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = this.getLayer();\n        var vectorSource = vectorLayer.getSource();\n        if (!vectorSource) {\n            return false;\n        }\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if ((!this.dirty_ && !updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            this.animatingOrInteracting_ = true;\n            return true;\n        }\n        this.animatingOrInteracting_ = false;\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var center = viewState.center.slice();\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var loadExtents = [extent.slice()];\n        var projectionExtent = projection.getExtent();\n        if (vectorSource.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n            wrapCoordinateX(center, projection);\n            var loadExtent = wrapExtentX(loadExtents[0], projection);\n            // If the extent crosses the date line, we load data for both edges of the worlds\n            if (loadExtent[0] < projectionExtent[0] &&\n                loadExtent[2] < projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] + worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] + worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n            else if (loadExtent[0] > projectionExtent[0] &&\n                loadExtent[2] > projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] - worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] - worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        var declutterBuilderGroup;\n        if (this.getLayer().getDeclutter()) {\n            declutterBuilderGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        }\n        var userProjection = getUserProjection();\n        var userTransform;\n        if (userProjection) {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(toUserExtent(loadExtents[i], projection), resolution, userProjection);\n            }\n            userTransform = getTransformFromProjections(userProjection, projection);\n        }\n        else {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n            }\n        }\n        var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n        var render = \n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform, declutterBuilderGroup);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        var userExtent = toUserExtent(extent, projection);\n        /** @type {Array<import(\"../../Feature.js\").default>} */\n        var features = vectorSource.getFeaturesInExtent(userExtent);\n        if (vectorLayerRenderOrder) {\n            features.sort(vectorLayerRenderOrder);\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            render(features[i]);\n        }\n        this.renderedFeatures_ = features;\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        if (declutterBuilderGroup) {\n            this.declutterExecutorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), declutterBuilderGroup.finish(), vectorLayer.getRenderBuffer());\n        }\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.renderedCenter_ = center;\n        this.renderedProjection_ = projection;\n        this.replayGroup_ = executorGroup;\n        this.hitDetectionImageData_ = null;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} squaredTolerance Squared render tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @param {import(\"../../proj.js\").TransformFunction=} opt_transform Transform from user to view projection.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_transform, opt_declutterBuilderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading =\n                    renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/render/canvas/hitdetect\n */\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport { Icon } from '../../style.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { intersects } from '../../extent.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {\n    var width = size[0] / 2;\n    var height = size[1] / 2;\n    var context = createCanvasContext2D(width, height);\n    context.imageSmoothingEnabled = false;\n    var canvas = context.canvas;\n    var renderer = new CanvasImmediateRenderer(context, 0.5, extent, null, rotation);\n    var featureCount = features.length;\n    // Stretch hit detection index to use the whole available color range\n    var indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n    var featuresByZIndex = {};\n    for (var i = 1; i <= featureCount; ++i) {\n        var feature = features[i - 1];\n        var featureStyleFunction = feature.getStyleFunction() || styleFunction;\n        if (!styleFunction) {\n            continue;\n        }\n        var styles = featureStyleFunction(feature, resolution);\n        if (!styles) {\n            continue;\n        }\n        if (!Array.isArray(styles)) {\n            styles = [styles];\n        }\n        var index = i * indexFactor;\n        var color = '#' + ('000000' + index.toString(16)).slice(-6);\n        for (var j = 0, jj = styles.length; j < jj; ++j) {\n            var originalStyle = styles[j];\n            var style = originalStyle.clone();\n            var fill = style.getFill();\n            if (fill) {\n                fill.setColor(color);\n            }\n            var stroke = style.getStroke();\n            if (stroke) {\n                stroke.setColor(color);\n            }\n            style.setText(undefined);\n            var image = originalStyle.getImage();\n            if (image) {\n                var imgSize = image.getImageSize();\n                if (!imgSize) {\n                    continue;\n                }\n                var canvas_1 = document.createElement('canvas');\n                canvas_1.width = imgSize[0];\n                canvas_1.height = imgSize[1];\n                var imgContext = canvas_1.getContext('2d', { alpha: false });\n                imgContext.fillStyle = color;\n                var img = imgContext.canvas;\n                imgContext.fillRect(0, 0, img.width, img.height);\n                var width_1 = imgSize ? imgSize[0] : img.width;\n                var height_1 = imgSize ? imgSize[1] : img.height;\n                var iconContext = createCanvasContext2D(width_1, height_1);\n                iconContext.drawImage(img, 0, 0);\n                style.setImage(new Icon({\n                    img: img,\n                    imgSize: imgSize,\n                    anchor: image.getAnchor(),\n                    anchorXUnits: IconAnchorUnits.PIXELS,\n                    anchorYUnits: IconAnchorUnits.PIXELS,\n                    offset: image.getOrigin(),\n                    size: image.getSize(),\n                    opacity: image.getOpacity(),\n                    scale: image.getScale(),\n                    rotation: image.getRotation(),\n                    rotateWithView: image.getRotateWithView(),\n                }));\n            }\n            var zIndex = Number(style.getZIndex());\n            var byGeometryType = featuresByZIndex[zIndex];\n            if (!byGeometryType) {\n                byGeometryType = {};\n                featuresByZIndex[zIndex] = byGeometryType;\n                byGeometryType[GeometryType.POLYGON] = [];\n                byGeometryType[GeometryType.CIRCLE] = [];\n                byGeometryType[GeometryType.LINE_STRING] = [];\n                byGeometryType[GeometryType.POINT] = [];\n            }\n            var geometry = style.getGeometryFunction()(feature);\n            if (geometry && intersects(extent, geometry.getExtent())) {\n                byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);\n            }\n        }\n    }\n    var zIndexKeys = Object.keys(featuresByZIndex)\n        .map(Number)\n        .sort(numberSafeCompareFunction);\n    for (var i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n        var byGeometryType = featuresByZIndex[zIndexKeys[i]];\n        for (var type in byGeometryType) {\n            var geomAndStyle = byGeometryType[type];\n            for (var j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n                renderer.setStyle(geomAndStyle[j + 1]);\n                for (var k = 0, kk = transforms.length; k < kk; ++k) {\n                    renderer.setTransform(transforms[k]);\n                    renderer.drawGeometry(geomAndStyle[j]);\n                }\n            }\n        }\n    }\n    return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n    var resultFeatures = [];\n    if (imageData) {\n        var index = (Math.round(pixel[0] / 2) + Math.round(pixel[1] / 2) * imageData.width) *\n            4;\n        var r = imageData.data[index];\n        var g = imageData.data[index + 1];\n        var b = imageData.data[index + 2];\n        var i = b + 256 * (g + 256 * r);\n        var indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n        if (i && i % indexFactor === 0) {\n            resultFeatures.push(features[i / indexFactor - 1]);\n        }\n    }\n    return resultFeatures;\n}\n//# sourceMappingURL=hitdetect.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {import(\"./BaseVector.js\").Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value,\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value,\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ =\n            options.attributionsCollapsible !== undefined\n                ? options.attributionsCollapsible\n                : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {import(\"./State.js\").default}\n         */\n        _this.state_ =\n            options.state !== undefined ? options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {import(\"./State.js\").default} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    Source.prototype.getContextOptions = function () {\n        return undefined;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {import(\"./State.js\").default} state State.\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature',\n    /**\n     * Triggered when features starts loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n     * @api\n     */\n    FEATURESLOADSTART: 'featuresloadstart',\n    /**\n     * Triggered when features finishes loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n     * @api\n     */\n    FEATURESLOADEND: 'featuresloadend',\n    /**\n     * Triggered if feature loading results in an error.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n     * @api\n     */\n    FEATURESLOADERROR: 'featuresloaderror',\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml',\n};\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport { VOID } from './functions.js';\n/**\n *\n * @type {boolean}\n * @private\n */\nvar withCredentials = false;\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection and success and failure callbacks as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(url, format, extent, resolution, projection, success, failure) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n    if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n    }\n    xhr.withCredentials = withCredentials;\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    xhr.onload = function (event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n            var type = format.getType();\n            /** @type {Document|Node|Object|string|undefined} */\n            var source = void 0;\n            if (type == FormatType.JSON || type == FormatType.TEXT) {\n                source = xhr.responseText;\n            }\n            else if (type == FormatType.XML) {\n                source = xhr.responseXML;\n                if (!source) {\n                    source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                }\n            }\n            else if (type == FormatType.ARRAY_BUFFER) {\n                source = /** @type {ArrayBuffer} */ (xhr.response);\n            }\n            if (source) {\n                success(\n                /** @type {Array<import(\"./Feature.js\").default>} */\n                (format.readFeatures(source, {\n                    extent: extent,\n                    featureProjection: projection,\n                })), format.readProjection(source));\n            }\n            else {\n                failure();\n            }\n        }\n        else {\n            failure();\n        }\n    };\n    /**\n     * @private\n     */\n    xhr.onerror = failure;\n    xhr.send();\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @param {function(): void=} success Success\n     *      Function called when loading succeeded.\n     * @param {function(): void=} failure Failure\n     *      Function called when loading failed.\n     * @this {import(\"./source/Vector\").default}\n     */\n    return function (extent, resolution, projection, success, failure) {\n        var source = /** @type {import(\"./source/Vector\").default} */ (this);\n        loadFeaturesXhr(url, format, extent, resolution, projection, \n        /**\n         * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n         * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n         * projection.\n         */\n        function (features, dataProjection) {\n            if (success !== undefined) {\n                success(features);\n            }\n            source.addFeatures(features);\n        }, \n        /* FIXME handle error */ failure ? failure : VOID);\n    };\n}\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n    withCredentials = xhrWithCredentials;\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { extend } from '../array.js';\nimport { getUid } from '../util.js';\nimport { getValues, isEmpty } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { xhr } from '../featureloader.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>=} opt_feature Feature.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>=} opt_features Features.\n     */\n    function VectorSourceEvent(type, opt_feature, opt_features) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        /**\n         * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n         * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, \n            /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ =\n            options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features by uid (using getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.uidIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this),\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        if (valid) {\n            assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n            this.uidIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        this.addEventListener(VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        this.addEventListener(VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        collection.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        collection.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.uidIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * When `useSpatialIndex` is set to false, this method will return all\n     * features.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.getInExtent(extent);\n        }\n        else if (this.featuresCollection_) {\n            return this.featuresCollection_.getArray();\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     */\n    VectorSource.prototype.getFeatureByUid = function (uid) {\n        var feature = this.uidIndex_[uid];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (this.idIndex_[sid] !== feature) {\n                this.removeFromIdIndex_(feature);\n                this.idIndex_[sid] = feature;\n            }\n        }\n        else {\n            this.removeFromIdIndex_(feature);\n            this.uidIndex_[featureKey] = feature;\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.uidIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADSTART));\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection, function (features) {\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADEND, undefined, features));\n                }.bind(this_1), function () {\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADERROR));\n                }.bind(this_1));\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        delete this.uidIndex_[featureKey];\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport { abstract } from './util.js';\nimport { easeIn } from './easing.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {import(\"./TileState.js\").default}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ =\n            options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Called by the tile cache when the tile is removed from the cache due to expiry\n     */\n    Tile.prototype.release = function () { };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {import(\"./TileState.js\").default} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        if (this.state !== TileState.ERROR && this.state > state) {\n            throw new Error('Tile load sequence violation');\n        }\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + 1000 / 60; // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        _this.key = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport { TRUE } from '../functions.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { getWidth } from '../extent.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { inView } from '../layer/Layer.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature\n * @property {import(\"../layer/Layer.js\").default} layer\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} distanceSq\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback\n * @template T\n */\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n            return callback.call(thisArg, feature, managed ? layer : null, geometry);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = wrapX(coordinate.slice(), projection);\n        var offsets = [[0, 0]];\n        if (projection.canWrapX() && checkWrapped) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            offsets.push([-worldWidth, 0], [worldWidth, 0]);\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var matches = /** @type {Array<HitMatch<T>>} */ ([]);\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = layerState.layer;\n                if (layer.hasRenderer() &&\n                    inView(layerState, viewState) &&\n                    layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    if (layerRenderer && source) {\n                        var coordinates = source.getWrapX()\n                            ? translatedCoordinate\n                            : coordinate;\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, matches);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        if (matches.length === 0) {\n            return undefined;\n        }\n        var order = 1 / matches.length;\n        matches.forEach(function (m, i) { return (m.distanceSq += i * order); });\n        matches.sort(function (a, b) { return a.distanceSq - b.distanceSq; });\n        matches.some(function (m) {\n            return (result = m.callback(m.feature, m.layer, m.geometry));\n        });\n        return result;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { checkedFonts } from '../render/canvas.js';\nimport { inView } from '../layer/Layer.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.fontChangeListenerKey_);\n        this.element_.parentNode.removeChild(this.element_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        /**\n         * @type {Array<import(\"../layer/BaseVector.js\").default>}\n         */\n        var declutterLayers = [];\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            frameState.layerIndex = i;\n            if (!inView(layerState, viewState) ||\n                (layerState.sourceState != SourceState.READY &&\n                    layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                previousElement = element;\n            }\n            if ('getDeclutter' in layer) {\n                declutterLayers.push(layer);\n            }\n        }\n        for (var i = declutterLayers.length - 1; i >= 0; --i) {\n            declutterLayers[i].renderDeclutter(frameState);\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() &&\n                inView(layerState, viewState) &&\n                layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign, clear } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { getIntersection } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers',\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        _this.addEventListener(getChangeEventType(Property.LAYERS), _this.handleLayersChanged_);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof ( /** @type {?} */(layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {EVENT} originalEvent Original event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, originalEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {EVENT}\n         * @api\n         */\n        _this.originalEvent = originalEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {?import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {?import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport { DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { listen, unlistenByKey } from './events.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n         * @type {boolean}\n         */\n        _this.emulateClicks_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance\n            ? moveTolerance * DEVICE_PIXEL_RATIO\n            : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.originalPointerMoveEvent_;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        /**\n         * @private\n         */\n        _this.boundHandleTouchMove_ = _this.handleTouchMove_.bind(_this);\n        _this.element_.addEventListener(EventType.TOUCHMOVE, _this.boundHandleTouchMove_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(\n            /** @this {MapBrowserEventHandler} */\n            function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (this.emulateClicks_ &&\n            !newEvent.propagationStopped &&\n            !this.dragging_ &&\n            this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.emulateClicks_ = this.activePointers_ === 0;\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            var doc = this.map_.getOwnerDocument();\n            this.dragListenerKeys_.push(listen(doc, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n            if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n                this.dragListenerKeys_.push(listen(this.element_.getRootNode(), MapBrowserEventType.POINTERUP, this.handlePointerUp_, this));\n            }\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        this.originalPointerMoveEvent_ = pointerEvent;\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * Flexible handling of a `touch-action: none` css equivalent: because calling\n     * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n     * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n     * when an interaction (currently `DragPan` handles the event.\n     * @param {TouchEvent} event Event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handleTouchMove_ = function (event) {\n        // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n        // may not be initialized yet when we get here on a platform without native pointer events.\n        if (!this.originalPointerMoveEvent_ ||\n            this.originalPointerMoveEvent_.defaultPrevented) {\n            event.preventDefault();\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return (this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) >\n                this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_);\n    };\n    /**\n     * Clean up.\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend',\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view',\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < count >> 1) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex]\n                ? rIndex\n                : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @param {Array} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if ((tile.hifi && state === TileState.LOADED) ||\n            state === TileState.ERROR ||\n            state === TileState.EMPTY) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading &&\n            newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n        return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n        return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels between\n    // the center of the tile and the center of the viewport.  The factor of 65536\n    // means that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var center = frameState.viewState.center;\n    var deltaX = tileCenter[0] - center[0];\n    var deltaY = tileCenter[1] - center[1];\n    return (65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution);\n}\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation',\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @param {Array<number>=} opt_centerShift Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n            var shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n            var minX = extent[0] + viewWidth / 2 + shiftX;\n            var maxX = extent[2] - viewWidth / 2 + shiftX;\n            var minY = extent[1] + viewHeight / 2 + shiftY;\n            var maxY = extent[3] - viewHeight / 2 + shiftY;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = (maxX + minX) / 2;\n                maxX = minX;\n            }\n            if (minY > maxY) {\n                minY = (maxY + minY) / 2;\n                maxY = minY;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x +=\n                    -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y +=\n                    -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { clamp } from './math.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { linearFindNearest } from './array.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize, showFullExtent) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    if (showFullExtent) {\n        return Math.min(resolution, Math.max(xResolution, yResolution));\n    }\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *=\n        Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n            1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /=\n            Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n                ratio +\n                1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n                return resolutions[z + 1];\n            }\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var tolerance = 1e-9;\n            var minZoomLevel = Math.ceil(Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);\n            var offset = -direction * (0.5 - tolerance) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var cappedZoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = (2 * Math.PI) / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, createProjection, fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent, } from './proj.js';\nimport { VOID } from './functions.js';\nimport { add as addCoordinate, equals as coordinatesEqual, rotate as rotateCoordinate, } from './coordinate.js';\nimport { assert } from './asserts.js';\nimport { assign } from './obj.js';\nimport { none as centerNone, createExtent } from './centerconstraint.js';\nimport { clamp, modulo } from './math.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\nimport { createSnapToN, createSnapToZero, disable, none as rotationNone, } from './rotationconstraint.js';\nimport { createSnapToPower, createSnapToResolutions, } from './resolutionconstraint.js';\nimport { easeOut } from './easing.js';\nimport { equals } from './coordinate.js';\nimport { getCenter, getForViewAndSize, getHeight, getWidth, isEmpty, } from './extent.js';\nimport { inAndOut } from './easing.js';\nimport { linearFindNearest } from './array.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean):void} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./size.js\").Size}\n         */\n        _this.viewportSize_ = [100, 100];\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.cancelAnchor_ = undefined;\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * Padding (in css pixels).\n         * If the map viewport is partially covered with other content (overlays) along\n         * its edges, this setting allows to shift the center of the viewport away from that\n         * content. The order of the values in the array is top, right, bottom, left.\n         * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n         * @type {Array<number>|undefined}\n         * @api\n         */\n        this.padding = options.padding;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint,\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 &&\n            typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback,\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        var anchor;\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n            if (!anchor) {\n                for (var j = 0, jj = series.length; j < jj; ++j) {\n                    var animation = series[j];\n                    if (!animation.complete) {\n                        anchor = animation.anchor;\n                        break;\n                    }\n                }\n            }\n        }\n        this.animations_.length = 0;\n        this.cancelAnchor_ = anchor;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1\n                        ? animation.targetResolution\n                        : animation.sourceResolution +\n                            progress *\n                                (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getViewportSize_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined &&\n                    animation.targetRotation !== undefined) {\n                    var rotation = progress === 1\n                        ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                            Math.PI\n                        : animation.sourceRotation +\n                            progress *\n                                (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] -\n                (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n            var y = anchor[1] -\n                (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * Returns the current viewport size.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getViewportSize_ = function (opt_rotation) {\n        var size = this.viewportSize_;\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            return [\n                Math.abs(w * Math.cos(opt_rotation)) +\n                    Math.abs(h * Math.sin(opt_rotation)),\n                Math.abs(w * Math.sin(opt_rotation)) +\n                    Math.abs(h * Math.cos(opt_rotation)),\n            ];\n        }\n        else {\n            return size;\n        }\n    };\n    /**\n     * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n     * to avoid performance hit and layout reflow.\n     * This should be done on map size change.\n     * Note: the constraints are not resolved during an animation to avoid stopping it\n     * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n     */\n    View.prototype.setViewportSize = function (opt_size) {\n        this.viewportSize_ = Array.isArray(opt_size)\n            ? opt_size.slice()\n            : [100, 100];\n        if (!this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @return {boolean} Resolution constraint is set\n     */\n    View.prototype.getConstrainResolution = function () {\n        return this.options_.constrainResolution;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n     * of the map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided,\n     * the map's last known viewport size will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var logPower = Math.log(opt_power || 2);\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / logPower;\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = Math.log(maxResolution / resolution) / logPower / max;\n            return value;\n        });\n    };\n    /**\n     * Returns the size of the viewport minus padding.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n     */\n    View.prototype.getViewportSizeMinusPadding_ = function (opt_rotation) {\n        var size = this.getViewportSize_(opt_rotation);\n        var padding = this.padding;\n        if (padding) {\n            size = [\n                size[0] - padding[1] - padding[3],\n                size[1] - padding[0] - padding[2],\n            ];\n        }\n        return size;\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var padding = this.padding;\n        if (padding) {\n            var reducedSize = this.getViewportSizeMinusPadding_();\n            center = calculateCenterOn(center, this.getViewportSize_(), [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n        }\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom(),\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return (this.resolutions_[baseLevel] /\n                Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1)));\n        }\n        else {\n            return (this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_));\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) ||\n            typeof ( /** @type {?} */(geometryOrExtent).getSimplifiedGeometry) ===\n                'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n                    .clone()\n                    .transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, opt_options);\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions=} opt_options Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getViewportSizeMinusPadding_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution)\n            ? minResolution\n            : Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n        centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = this.getConstrainedCenter([centerX, centerY], resolution);\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: center,\n                duration: options.duration,\n                easing: options.easing,\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        this.setCenterInternal(calculateCenterOn(coordinate, size, position, this.getResolution(), this.getRotation()));\n    };\n    /**\n     * Calculates the shift between map and viewport center.\n     * @param {import(\"./coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {import(\"./size.js\").Size} size Size.\n     * @return {Array<number>|undefined} Center shift.\n     */\n    View.prototype.calculateCenterShift = function (center, resolution, rotation, size) {\n        var centerShift;\n        var padding = this.padding;\n        if (padding && center) {\n            var reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n            var shiftedCenter = calculateCenterOn(center, size, [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n            centerShift = [\n                center[0] - shiftedCenter[0],\n                center[1] - shiftedCenter[1],\n            ];\n        }\n        return centerShift;\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getViewportSize_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {import(\"./ViewHint.js\").default} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) ||\n            !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n        this.cancelAnchor_ = undefined;\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, false, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (duration === 0 && !this.cancelAnchor_) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        var anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n        this.cancelAnchor_ = undefined;\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: anchor,\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined\n            ? options.smoothExtentConstraint\n            : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ? options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined\n        ? options.smoothResolutionConstraint\n        : true;\n    var showFullExtent = options.showFullExtent !== undefined ? options.showFullExtent : false;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution =\n            resolutions[maxZoom] !== undefined\n                ? resolutions[maxZoom]\n                : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent\n            ? // use an extent that can fit the whole world if need be\n                (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n            : Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution /\n            Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom =\n            minZoom +\n                Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    return {\n        constraint: resolutionConstraint,\n        maxResolution: maxResolution,\n        minResolution: minResolution,\n        minZoom: minZoom,\n        zoomFactor: zoomFactor,\n    };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ? options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n    // calculate rotated position\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n    return [centerX, centerY];\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, { getTilePriority } from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { DEVICE_PIXEL_RATIO, IMAGE_DECODE, PASSIVE_EVENT_LISTENERS, } from './has.js';\nimport { TRUE } from './functions.js';\nimport { apply as applyTransform, create as createTransform, } from './transform.js';\nimport { assert } from './asserts.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty, } from './extent.js';\nimport { fromUserCoordinate, toUserCoordinate } from './proj.js';\nimport { hasArea } from './size.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { removeNode } from './dom.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {import(\"rbush\").default} declutterTree\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ =\n            options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ =\n            options.pixelRatio !== undefined\n                ? options.pixelRatio\n                : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = /** @this {PluggableMap} */ function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className =\n            'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.style.pointerEvents = 'none';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.moveTolerance_ = options.moveTolerance;\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {undefined|function(Event): void}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        function (control) {\n            control.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        function (interaction) {\n            interaction.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(\n            /** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * Clean up.\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || {};\n        var hitTolerance = options.hitTolerance !== undefined ? options.hitTolerance : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {UIEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = \n        //FIXME Are we really calling this with a TouchEvent anywhere?\n        'changedTouches' in event\n            ? /** @type {TouchEvent} */ (event).changedTouches[0]\n            : /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top,\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string'\n                ? document.getElementById(target)\n                : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return /** @type {View} */ (this.get(MapProperty.VIEW));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @return {!Document} The document where the map is displayed.\n     */\n    PluggableMap.prototype.getOwnerDocument = function () {\n        return this.getTargetElement()\n            ? this.getTargetElement().ownerDocument\n            : document;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n    };\n    /**\n     * @param {UIEvent} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n        var eventType = originalEvent.type;\n        if (eventType === PointerEventType.POINTERDOWN ||\n            eventType === EventType.WHEEL ||\n            eventType === EventType.KEYDOWN) {\n            var doc = this.getOwnerDocument();\n            var rootNode = this.viewport_.getRootNode\n                ? this.viewport_.getRootNode()\n                : doc;\n            var target = 'host' in rootNode // ShadowRoot\n                ? /** @type {ShadowRoot} */ (rootNode).elementFromPoint(originalEvent.clientX, originalEvent.clientY)\n                : /** @type {Node} */ (originalEvent.target);\n            if (\n            // Abort if the target is a child of the container for elements whose events are not meant\n            // to be handled by map interactions.\n            this.overlayContainerStopEvent_.contains(target) ||\n                // Abort if the event target is a child of the container that is no longer in the page.\n                // It's possible for the target to no longer be in the page if it has been removed in an\n                // event listener, this might happen in a Control that recreates it's content based on\n                // user interaction either manually or via a render in something like https://reactjs.org/\n                !(rootNode === doc ? doc.documentElement : rootNode).contains(target)) {\n                return;\n            }\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            var interactionsArray = this.getInteractions().getArray().slice();\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (interaction.getMap() !== this ||\n                    !interaction.getActive() ||\n                    !this.getTargetElement()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont || mapBrowserEvent.propagationStopped) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState &&\n            this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n            !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() &&\n            !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView() && !this.getView().getAnimating()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.mapBrowserEventHandler_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n            this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n            this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n            this.mapBrowserEventHandler_.dispose();\n            this.mapBrowserEventHandler_ = null;\n            removeNode(this.viewport_);\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderTimeoutHandle_ = undefined;\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, this.moveTolerance_);\n            for (var key in MapBrowserEventType) {\n                this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], this.handleMapBrowserEvent.bind(this));\n            }\n            this.viewport_.addEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_, false);\n            this.viewport_.addEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n            var keyboardEventTarget = !this.keyboardEventTarget_\n                ? targetElement\n                : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this),\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.updateViewportSize_();\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this),\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var _this = this;\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterTree: null,\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {},\n            };\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        if (!this.postRenderTimeoutHandle_) {\n            this.postRenderTimeoutHandle_ = setTimeout(function () {\n                _this.postRenderTimeoutHandle_ = undefined;\n                _this.handlePostRender();\n            }, 0);\n        }\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth']),\n            ]);\n        }\n        this.updateViewportSize_();\n    };\n    /**\n     * Recomputes the viewport size and save it on the view object (if any)\n     * @private\n     */\n    PluggableMap.prototype.updateViewportSize_ = function () {\n        var view = this.getView();\n        if (view) {\n            var size = undefined;\n            var computedStyle = getComputedStyle(this.viewport_);\n            if (computedStyle.width && computedStyle.height) {\n                size = [\n                    parseInt(computedStyle.width, 10),\n                    parseInt(computedStyle.height, 10),\n                ];\n            }\n            view.setViewportSize(size);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget =\n            typeof options.keyboardEventTarget === 'string'\n                ? document.getElementById(options.keyboardEventTarget)\n                : options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers &&\n        typeof ( /** @type {?} */(options.layers).getLayers) === 'function'\n        ? /** @type {LayerGroup} */ (options.layers)\n        : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] =\n        options.view !== undefined ? options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.controls).getArray) === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.interactions).getArray) ===\n                'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.overlays).getArray) === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values,\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport { VOID } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { removeNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        var element = options.element;\n        if (element && !options.target && !element.style.pointerEvents) {\n            element.style.pointerEvents = 'auto';\n        }\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = element ? element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_\n                ? this.target_\n                : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * Renders the control.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @api\n     */\n    Control.prototype.render = function (mapEvent) { };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ =\n            typeof target === 'string' ? document.getElementById(target) : target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { equals } from '../array.js';\nimport { inView } from '../layer/Layer.js';\nimport { removeChildren, replaceNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ =\n            options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.userCollapsed_ = _this.collapsed_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ =\n            options.collapsible !== undefined ? options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var expandClassName = options.expandClassName !== undefined\n            ? options.expandClassName\n            : className + '-expand';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        var collapseClassName = options.collapseClassName !== undefined\n            ? options.collapseClassName\n            : className + '-collpase';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n            _this.collapseLabel_.className = collapseClassName;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n            _this.label_.className = expandClassName;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className +\n            ' ' +\n            CLASS_UNSELECTABLE +\n            ' ' +\n            CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var collapsible = true;\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            collapsible =\n                collapsible && source.getAttributionsCollapsible() !== false;\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        if (!this.overrideCollapsible_) {\n            this.setCollapsible(collapsible);\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n        this.userCollapsed_ = this.collapsed_;\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (this.userCollapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        this.userCollapsed_ = collapsed;\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Update the attribution element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Attribution.prototype.render = function (mapEvent) {\n        this.updateElement_(mapEvent.frameState);\n    };\n    return Attribution;\n}(Control));\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        var compassClassName = options.compassClassName !== undefined\n            ? options.compassClassName\n            : 'ol-compass';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = compassClassName;\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add(compassClassName);\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var rotation = view.getRotation();\n        if (rotation !== undefined) {\n            if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    /**\n     * Update the rotate control element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Rotate.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            return;\n        }\n        var rotation = frameState.viewState.rotation;\n        if (rotation != this.rotation_) {\n            var transform = 'rotate(' + rotation + 'rad)';\n            if (this.autoHide_) {\n                var contains = this.element.classList.contains(CLASS_HIDDEN);\n                if (!contains && rotation === 0) {\n                    this.element.classList.add(CLASS_HIDDEN);\n                }\n                else if (contains && rotation !== 0) {\n                    this.element.classList.remove(CLASS_HIDDEN);\n                }\n            }\n            this.label_.style.transform = transform;\n        }\n        this.rotation_ = rotation;\n    };\n    return Rotate;\n}(Control));\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInClassName = options.zoomInClassName !== undefined\n            ? options.zoomInClassName\n            : className + '-in';\n        var zoomOutClassName = options.zoomOutClassName !== undefined\n            ? options.zoomOutClassName\n            : className + '-out';\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined\n            ? options.zoomOutTipLabel\n            : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = zoomInClassName;\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string'\n            ? document.createTextNode(zoomInLabel)\n            : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = zoomOutClassName;\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string'\n            ? document.createTextNode(zoomOutLabel)\n            : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport ProjUnits from '../proj/Units.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { METERS_PER_UNIT, getPointResolution } from '../proj.js';\nimport { assert } from '../asserts.js';\nimport { getChangeEventType } from '../Object.js';\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n    DEGREES: 'degrees',\n    IMPERIAL: 'imperial',\n    NAUTICAL: 'nautical',\n    METRIC: 'metric',\n    US: 'us',\n};\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n/**\n * @const\n * @type {number}\n */\nvar DEFAULT_DPI = 25.4 / 0.28;\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {import(\"./ScaleLine.js\").Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nvar ScaleLine = /** @class */ (function (_super) {\n    __extends(ScaleLine, _super);\n    /**\n     * @param {Options=} opt_options Scale line options.\n     */\n    function ScaleLine(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var className = options.className !== undefined\n            ? options.className\n            : options.bar\n                ? 'ol-scale-bar'\n                : 'ol-scale-line';\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.innerElement_ = document.createElement('div');\n        _this.innerElement_.className = className + '-inner';\n        _this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n        _this.element.appendChild(_this.innerElement_);\n        /**\n         * @private\n         * @type {?import(\"../View.js\").State}\n         */\n        _this.viewState_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = false;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderedWidth_ = undefined;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.renderedHTML_ = '';\n        _this.addEventListener(getChangeEventType(UNITS_PROP), _this.handleUnitsChanged_);\n        _this.setUnits(options.units || Units.METRIC);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBar_ = options.bar || false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.scaleBarSteps_ = options.steps || 4;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBarText_ = options.text || false;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.dpi_ = options.dpi || undefined;\n        return _this;\n    }\n    /**\n     * Return the units to use in the scale line.\n     * @return {import(\"./ScaleLine.js\").Units} The units\n     * to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.getUnits = function () {\n        return this.get(UNITS_PROP);\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.handleUnitsChanged_ = function () {\n        this.updateElement_();\n    };\n    /**\n     * Set the units to use in the scale line.\n     * @param {import(\"./ScaleLine.js\").Units} units The units to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.setUnits = function (units) {\n        this.set(UNITS_PROP, units);\n    };\n    /**\n     * Specify the dpi of output device such as printer.\n     * @param {number|undefined} dpi The dpi of output device.\n     * @api\n     */\n    ScaleLine.prototype.setDpi = function (dpi) {\n        this.dpi_ = dpi;\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.updateElement_ = function () {\n        var viewState = this.viewState_;\n        if (!viewState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var center = viewState.center;\n        var projection = viewState.projection;\n        var units = this.getUnits();\n        var pointResolutionUnits = units == Units.DEGREES ? ProjUnits.DEGREES : ProjUnits.METERS;\n        var pointResolution = getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n        var minWidth = (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n        var nominalCount = minWidth * pointResolution;\n        var suffix = '';\n        if (units == Units.DEGREES) {\n            var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n            nominalCount *= metersPerDegree;\n            if (nominalCount < metersPerDegree / 60) {\n                suffix = '\\u2033'; // seconds\n                pointResolution *= 3600;\n            }\n            else if (nominalCount < metersPerDegree) {\n                suffix = '\\u2032'; // minutes\n                pointResolution *= 60;\n            }\n            else {\n                suffix = '\\u00b0'; // degrees\n            }\n        }\n        else if (units == Units.IMPERIAL) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution /= 0.0254;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.3048;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.344;\n            }\n        }\n        else if (units == Units.NAUTICAL) {\n            pointResolution /= 1852;\n            suffix = 'nm';\n        }\n        else if (units == Units.METRIC) {\n            if (nominalCount < 0.001) {\n                suffix = 'μm';\n                pointResolution *= 1000000;\n            }\n            else if (nominalCount < 1) {\n                suffix = 'mm';\n                pointResolution *= 1000;\n            }\n            else if (nominalCount < 1000) {\n                suffix = 'm';\n            }\n            else {\n                suffix = 'km';\n                pointResolution /= 1000;\n            }\n        }\n        else if (units == Units.US) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution *= 39.37;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.30480061;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.3472;\n            }\n        }\n        else {\n            assert(false, 33); // Invalid units\n        }\n        var i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n        var count, width, decimalCount;\n        while (true) {\n            decimalCount = Math.floor(i / 3);\n            var decimal = Math.pow(10, decimalCount);\n            count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n            width = Math.round(count / pointResolution);\n            if (isNaN(width)) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n                return;\n            }\n            else if (width >= minWidth) {\n                break;\n            }\n            ++i;\n        }\n        var html;\n        if (this.scaleBar_) {\n            html = this.createScaleBar(width, count, suffix);\n        }\n        else {\n            html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n        }\n        if (this.renderedHTML_ != html) {\n            this.innerElement_.innerHTML = html;\n            this.renderedHTML_ = html;\n        }\n        if (this.renderedWidth_ != width) {\n            this.innerElement_.style.width = width + 'px';\n            this.renderedWidth_ = width;\n        }\n        if (!this.renderedVisible_) {\n            this.element.style.display = '';\n            this.renderedVisible_ = true;\n        }\n    };\n    /**\n     * @private\n     * @param {number} width The current width of the scalebar.\n     * @param {number} scale The current scale.\n     * @param {string} suffix The suffix to append to the scale text.\n     * @returns {string} The stringified HTML of the scalebar.\n     */\n    ScaleLine.prototype.createScaleBar = function (width, scale, suffix) {\n        var mapScale = '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n        var scaleSteps = [];\n        var stepWidth = width / this.scaleBarSteps_;\n        var backgroundColor = '#ffffff';\n        for (var i = 0; i < this.scaleBarSteps_; i++) {\n            if (i === 0) {\n                // create the first marker at position 0\n                scaleSteps.push(this.createMarker('absolute', i));\n            }\n            scaleSteps.push('<div>' +\n                '<div ' +\n                'class=\"ol-scale-singlebar\" ' +\n                'style=' +\n                '\"width: ' +\n                stepWidth +\n                'px;' +\n                'background-color: ' +\n                backgroundColor +\n                ';\"' +\n                '>' +\n                '</div>' +\n                this.createMarker('relative', i) +\n                /*render text every second step, except when only 2 steps */\n                (i % 2 === 0 || this.scaleBarSteps_ === 2\n                    ? this.createStepText(i, width, false, scale, suffix)\n                    : '') +\n                '</div>');\n            if (i === this.scaleBarSteps_ - 1) {\n                {\n                    /*render text at the end */\n                }\n                scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n            }\n            // switch colors of steps between black and white\n            if (backgroundColor === '#ffffff') {\n                backgroundColor = '#000000';\n            }\n            else {\n                backgroundColor = '#ffffff';\n            }\n        }\n        var scaleBarText;\n        if (this.scaleBarText_) {\n            scaleBarText =\n                '<div ' +\n                    'class=\"ol-scale-text\" ' +\n                    'style=\"width: ' +\n                    width +\n                    'px;\">' +\n                    mapScale +\n                    '</div>';\n        }\n        else {\n            scaleBarText = '';\n        }\n        var container = '<div ' +\n            'style=\"display: flex;\">' +\n            scaleBarText +\n            scaleSteps.join('') +\n            '</div>';\n        return container;\n    };\n    /**\n     * Creates a marker at given position\n     * @param {string} position - The position, absolute or relative\n     * @param {number} i - The iterator\n     * @returns {string} The stringified div containing the marker\n     */\n    ScaleLine.prototype.createMarker = function (position, i) {\n        var top = position === 'absolute' ? 3 : -10;\n        return ('<div ' +\n            'class=\"ol-scale-step-marker\" ' +\n            'style=\"position: ' +\n            position +\n            ';' +\n            'top: ' +\n            top +\n            'px;\"' +\n            '></div>');\n    };\n    /**\n     * Creates the label for a marker marker at given position\n     * @param {number} i - The iterator\n     * @param {number} width - The width the scalebar will currently use\n     * @param {boolean} isLast - Flag indicating if we add the last step text\n     * @param {number} scale - The current scale for the whole scalebar\n     * @param {string} suffix - The suffix for the scale\n     * @returns {string} The stringified div containing the step text\n     */\n    ScaleLine.prototype.createStepText = function (i, width, isLast, scale, suffix) {\n        var length = i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n        var lengthString = length + (i === 0 ? '' : ' ' + suffix);\n        var margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n        var minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n        return ('<div ' +\n            'class=\"ol-scale-step-text\" ' +\n            'style=\"' +\n            'margin-left: ' +\n            margin +\n            'px;' +\n            'text-align: ' +\n            (i === 0 ? 'left' : 'center') +\n            '; ' +\n            'min-width: ' +\n            minWidth +\n            'px;' +\n            'left: ' +\n            (isLast ? width + 'px' : 'unset') +\n            ';\"' +\n            '>' +\n            lengthString +\n            '</div>');\n    };\n    /**\n     * Returns the appropriate scale for the given resolution and units.\n     * @return {number} The appropriate scale.\n     */\n    ScaleLine.prototype.getScaleForResolution = function () {\n        var resolution = getPointResolution(this.viewState_.projection, this.viewState_.resolution, this.viewState_.center);\n        var dpi = this.dpi_ || DEFAULT_DPI;\n        var mpu = this.viewState_.projection.getMetersPerUnit();\n        var inchesPerMeter = 1000 / 25.4;\n        return parseFloat(resolution.toString()) * mpu * inchesPerMeter * dpi;\n    };\n    /**\n     * Update the scale line element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    ScaleLine.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            this.viewState_ = null;\n        }\n        else {\n            this.viewState_ = frameState.viewState;\n        }\n        this.updateElement_();\n    };\n    return ScaleLine;\n}(Control));\nexport default ScaleLine;\n//# sourceMappingURL=ScaleLine.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport { easeOut, linear } from '../easing.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions=} opt_options Options.\n     */\n    function Interaction(opt_options) {\n        var _this = _super.call(this) || this;\n        if (opt_options && opt_options.handleEvent) {\n            _this.handleEvent = opt_options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenterInternal();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animateInternal({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center),\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut,\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n     * doubleclick) and eventually zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    DoubleClickZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n            var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n            var map = mapBrowserEvent.map;\n            var anchor = mapBrowserEvent.coordinate;\n            var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, anchor, this.duration_);\n            browserEvent.preventDefault();\n            stopEvent = true;\n        }\n        return !stopEvent;\n    };\n    return DoubleClickZoom;\n}(Interaction));\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, PointerEvent>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<PointerEvent>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Returns the current number of pointers involved in the interaction,\n     * e.g. `2` when two fingers are used.\n     * @return {number} The number of pointers.\n     * @api\n     */\n    PointerInteraction.prototype.getPointerCount = function () {\n        return this.targetPointers.length;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n                // prevent page scrolling during dragging\n                mapBrowserEvent.originalEvent.preventDefault();\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence =\n                    handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.originalEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return (type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP);\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { MAC, WEBKIT } from '../has.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n    var conditions = arguments;\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} All conditions passed.\n     */\n    return function (event) {\n        var pass = true;\n        for (var i = 0, ii = conditions.length; i < ii; ++i) {\n            pass = pass && conditions[i](event);\n            if (!pass) {\n                break;\n            }\n        }\n        return pass;\n    };\n}\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement().contains(document.activeElement);\n};\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport var focusWithTabindex = function (event) {\n    return event.map.getTargetElement().hasAttribute('tabindex')\n        ? focus(event)\n        : true;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    var tagName = /** @type {Element} */ (originalEvent.target).tagName;\n    return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { all, focusWithTabindex, noModifierKeys, primaryAction, } from '../events/condition.js';\nimport { easeOut } from '../easing.js';\nimport { rotate as rotateCoordinate, scale as scaleCoordinate, } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        var condition = options.condition\n            ? options.condition\n            : all(noModifierKeys, primaryAction);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1],\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenterInternal(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n        mapBrowserEvent.originalEvent.preventDefault();\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = view.getCenterInternal();\n                var centerpx = map.getPixelFromCoordinateInternal(center);\n                var dest = map.getCoordinateFromPixelInternal([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle),\n                ]);\n                view.animateInternal({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut,\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { altShiftKeysOnly, mouseActionButton, mouseOnly, } from '../events/condition.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotationInternal(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.style.pointerEvents = 'auto';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = 'inherit';\n            style.top = 'inherit';\n            style.width = 'inherit';\n            style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]],\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport { mouseActionButton } from '../events/condition.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend',\n    /**\n     * Triggered upon drag box canceled.\n     * @event DragBoxEvent#boxcancel\n     * @api\n     */\n    BOXCANCEL: 'boxcancel',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\nexport { DragBoxEvent };\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        if (options.onBoxEnd) {\n            _this.onBoxEnd = options.onBoxEnd;\n        }\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : mouseActionButton;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition\n            ? options.boxEndCondition\n            : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.box_.setMap(null);\n        var completeBox = this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel);\n        if (completeBox) {\n            this.onBoxEnd(mapBrowserEvent);\n        }\n        this.dispatchEvent(new DragBoxEvent(completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL, mapBrowserEvent.coordinate, mapBrowserEvent));\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragBox.prototype.onBoxEnd = function (event) { };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter, } from '../extent.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragZoom.prototype.onBoxEnd = function (event) {\n        var map = this.getMap();\n        var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n        var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n        var extent = this.getGeometry().getExtent();\n        if (this.out_) {\n            var mapExtent = view.calculateExtentInternal(size);\n            var boxPixelExtent = createOrUpdateFromCoordinates([\n                map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n                map.getPixelFromCoordinateInternal(getTopRight(extent)),\n            ]);\n            var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n            scaleFromCenter(mapExtent, 1 / factor);\n            extent = mapExtent;\n        }\n        var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n        var center = view.getConstrainedCenter(getCenter(extent), resolution);\n        view.animateInternal({\n            resolution: resolution,\n            center: center,\n            duration: this.duration_,\n            easing: easeOut,\n        });\n    };\n    return DragZoom;\n}(DragBox));\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { pan } from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport { rotate as rotateCoordinate } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return (noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent));\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ =\n            options.condition !== undefined\n                ? options.condition\n                : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ =\n            options.pixelDelta !== undefined ? options.pixelDelta : 128;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n     * pressed).\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardPan}\n     */\n    KeyboardPan.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var keyCode = keyEvent.keyCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (keyCode == KeyCode.DOWN ||\n                    keyCode == KeyCode.LEFT ||\n                    keyCode == KeyCode.RIGHT ||\n                    keyCode == KeyCode.UP)) {\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n                var deltaX = 0, deltaY = 0;\n                if (keyCode == KeyCode.DOWN) {\n                    deltaY = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.LEFT) {\n                    deltaX = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.RIGHT) {\n                    deltaX = mapUnitsDelta;\n                }\n                else {\n                    deltaY = mapUnitsDelta;\n                }\n                var delta = [deltaX, deltaY];\n                rotateCoordinate(delta, view.getRotation());\n                pan(view, delta, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardPan;\n}(Interaction));\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { targetNotEditable } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n     * key pressed was '+' or '-').\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardZoom}\n     */\n    KeyboardZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN ||\n            mapBrowserEvent.type == EventType.KEYPRESS) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var charCode = keyEvent.charCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n                var map = mapBrowserEvent.map;\n                var delta = charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n                var view = map.getView();\n                zoomByDelta(view, delta, undefined, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardZoom;\n}(Interaction));\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport { all, always, focusWithTabindex } from '../events/condition.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel',\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ =\n            options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.constrainResolution_ =\n            options.constrainResolution !== undefined\n                ? options.constrainResolution\n                : false;\n        var condition = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.deltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0, this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        wheelEvent.preventDefault();\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n        }\n        var view = map.getView();\n        if (this.mode_ === Mode.TRACKPAD &&\n            !(view.getConstrainResolution() || this.constrainResolution_)) {\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.timeout_);\n            view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = -clamp(this.totalDelta_, -this.maxDelta_ * this.deltaPerZoom_, this.maxDelta_ * this.deltaPerZoom_) / this.deltaPerZoom_;\n        if (view.getConstrainResolution() || this.constrainResolution_) {\n            // view has a zoom constraint, zoom by 1\n            delta = delta ? (delta > 0 ? 1 : -1) : 0;\n        }\n        zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotationInternal(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport FormatType from '../format/FormatType.js';\nimport Interaction from './Interaction.js';\nimport { TRUE } from '../functions.js';\nimport { get as getProjection } from '../proj.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n/**\n * @enum {string}\n */\nvar DragAndDropEventType = {\n    /**\n     * Triggered when features are added\n     * @event DragAndDropEvent#addfeatures\n     * @api\n     */\n    ADD_FEATURES: 'addfeatures',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nvar DragAndDropEvent = /** @class */ (function (_super) {\n    __extends(DragAndDropEvent, _super);\n    /**\n     * @param {DragAndDropEventType} type Type.\n     * @param {File} file File.\n     * @param {Array<import(\"../Feature.js\").default>=} opt_features Features.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     */\n    function DragAndDropEvent(type, file, opt_features, opt_projection) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features parsed from dropped data.\n         * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        /**\n         * The dropped file.\n         * @type {File}\n         * @api\n         */\n        _this.file = file;\n        /**\n         * The feature projection.\n         * @type {import(\"../proj/Projection.js\").default|undefined}\n         * @api\n         */\n        _this.projection = opt_projection;\n        return _this;\n    }\n    return DragAndDropEvent;\n}(Event));\nexport { DragAndDropEvent };\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * Note that the DragAndDrop interaction uses the TextDecoder() constructor if the supplied\n * combinnation of formats read both text string and ArrayBuffer sources. Older browsers such\n * as IE which do not support this will need a TextDecoder polyfill to be loaded before use.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nvar DragAndDrop = /** @class */ (function (_super) {\n    __extends(DragAndDrop, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragAndDrop(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            handleEvent: TRUE,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.readAsBuffer_ = false;\n        /**\n         * @private\n         * @type {Array<import(\"../format/Feature.js\").default>}\n         */\n        _this.formats_ = [];\n        var formatConstructors = options.formatConstructors\n            ? options.formatConstructors\n            : [];\n        for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n            var format = formatConstructors[i];\n            if (typeof format === 'function') {\n                format = new format();\n            }\n            _this.formats_.push(format);\n            _this.readAsBuffer_ =\n                _this.readAsBuffer_ || format.getType() === FormatType.ARRAY_BUFFER;\n        }\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = options.projection\n            ? getProjection(options.projection)\n            : null;\n        /**\n         * @private\n         * @type {?Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.dropListenKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"../source/Vector.js\").default}\n         */\n        _this.source_ = options.source || null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target = options.target ? options.target : null;\n        return _this;\n    }\n    /**\n     * @param {File} file File.\n     * @param {Event} event Load event.\n     * @private\n     */\n    DragAndDrop.prototype.handleResult_ = function (file, event) {\n        var result = event.target.result;\n        var map = this.getMap();\n        var projection = this.projection_;\n        if (!projection) {\n            var view = map.getView();\n            projection = view.getProjection();\n        }\n        var text;\n        var formats = this.formats_;\n        for (var i = 0, ii = formats.length; i < ii; ++i) {\n            var format = formats[i];\n            var input = result;\n            if (this.readAsBuffer_ && format.getType() !== FormatType.ARRAY_BUFFER) {\n                if (text === undefined) {\n                    text = new TextDecoder().decode(result);\n                }\n                input = text;\n            }\n            var features = this.tryReadFeatures_(format, input, {\n                featureProjection: projection,\n            });\n            if (features && features.length > 0) {\n                if (this.source_) {\n                    this.source_.clear();\n                    this.source_.addFeatures(features);\n                }\n                this.dispatchEvent(new DragAndDropEvent(DragAndDropEventType.ADD_FEATURES, file, features, projection));\n                break;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    DragAndDrop.prototype.registerListeners_ = function () {\n        var map = this.getMap();\n        if (map) {\n            var dropArea = this.target ? this.target : map.getViewport();\n            this.dropListenKeys_ = [\n                listen(dropArea, EventType.DROP, this.handleDrop, this),\n                listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n                listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n                listen(dropArea, EventType.DROP, this.handleStop, this),\n            ];\n        }\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    DragAndDrop.prototype.setActive = function (active) {\n        if (!this.getActive() && active) {\n            this.registerListeners_();\n        }\n        if (this.getActive() && !active) {\n            this.unregisterListeners_();\n        }\n        _super.prototype.setActive.call(this, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    DragAndDrop.prototype.setMap = function (map) {\n        this.unregisterListeners_();\n        _super.prototype.setMap.call(this, map);\n        if (this.getActive()) {\n            this.registerListeners_();\n        }\n    };\n    /**\n     * @param {import(\"../format/Feature.js\").default} format Format.\n     * @param {string} text Text.\n     * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n     * @private\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    DragAndDrop.prototype.tryReadFeatures_ = function (format, text, options) {\n        try {\n            return (\n            /** @type {Array<import(\"../Feature.js\").default>} */\n            (format.readFeatures(text, options)));\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    /**\n     * @private\n     */\n    DragAndDrop.prototype.unregisterListeners_ = function () {\n        if (this.dropListenKeys_) {\n            this.dropListenKeys_.forEach(unlistenByKey);\n            this.dropListenKeys_ = null;\n        }\n    };\n    /**\n     * @param {DragEvent} event Event.\n     */\n    DragAndDrop.prototype.handleDrop = function (event) {\n        var files = event.dataTransfer.files;\n        for (var i = 0, ii = files.length; i < ii; ++i) {\n            var file = files.item(i);\n            var reader = new FileReader();\n            reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n            if (this.readAsBuffer_) {\n                reader.readAsArrayBuffer(file);\n            }\n            else {\n                reader.readAsText(file);\n            }\n        }\n    };\n    /**\n     * @param {DragEvent} event Event.\n     */\n    DragAndDrop.prototype.handleStop = function (event) {\n        event.stopPropagation();\n        event.preventDefault();\n        event.dataTransfer.dropEffect = 'copy';\n    };\n    return DragAndDrop;\n}(Interaction));\nexport default DragAndDrop;\n//# sourceMappingURL=DragAndDrop.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport { mouseOnly, shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nvar DragRotateAndZoom = /** @class */ (function (_super) {\n    __extends(DragRotateAndZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotateAndZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastMagnitude_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragRotateAndZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var deltaX = offset[0] - size[0] / 2;\n        var deltaY = size[1] / 2 - offset[1];\n        var theta = Math.atan2(deltaY, deltaX);\n        var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n        var view = map.getView();\n        if (this.lastAngle_ !== undefined) {\n            var angleDelta = this.lastAngle_ - theta;\n            view.adjustRotationInternal(angleDelta);\n        }\n        this.lastAngle_ = theta;\n        if (this.lastMagnitude_ !== undefined) {\n            view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n        }\n        if (this.lastMagnitude_ !== undefined) {\n            this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n        }\n        this.lastMagnitude_ = magnitude;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotateAndZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n        view.endInteraction(this.duration_, direction);\n        this.lastScaleDelta_ = 0;\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotateAndZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (this.condition_(mapBrowserEvent)) {\n            mapBrowserEvent.map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            this.lastMagnitude_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotateAndZoom;\n}(PointerInteraction));\nexport default DragRotateAndZoom;\n//# sourceMappingURL=DragRotateAndZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Circle\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { createOrUpdate, forEachCorner, intersects } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { rotate, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /** @class */ (function (_super) {\n    __extends(Circle, _super);\n    /**\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     *     For internal use, flat coordinates in combination with `opt_layout` and no\n     *     `opt_radius` are also accepted.\n     * @param {number=} opt_radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Circle(center, opt_radius, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout !== undefined && opt_radius === undefined) {\n            _this.setFlatCoordinates(opt_layout, center);\n        }\n        else {\n            var radius = opt_radius ? opt_radius : 0;\n            _this.setCenterAndRadius(center, radius, opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Circle} Clone.\n     * @api\n     */\n    Circle.prototype.clone = function () {\n        var circle = new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n        circle.applyProperties(this);\n        return circle;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Circle.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        var squaredDistance = dx * dx + dy * dy;\n        if (squaredDistance < minSquaredDistance) {\n            if (squaredDistance === 0) {\n                for (var i = 0; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            else {\n                var delta = this.getRadius() / Math.sqrt(squaredDistance);\n                closestPoint[0] = flatCoordinates[0] + delta * dx;\n                closestPoint[1] = flatCoordinates[1] + delta * dy;\n                for (var i = 2; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            closestPoint.length = this.stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Circle.prototype.containsXY = function (x, y) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        return dx * dx + dy * dy <= this.getRadiusSquared_();\n    };\n    /**\n     * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @return {import(\"../coordinate.js\").Coordinate} Center.\n     * @api\n     */\n    Circle.prototype.getCenter = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Circle.prototype.computeExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n        return createOrUpdate(flatCoordinates[0] - radius, flatCoordinates[1] - radius, flatCoordinates[0] + radius, flatCoordinates[1] + radius, extent);\n    };\n    /**\n     * Return the radius of the circle.\n     * @return {number} Radius.\n     * @api\n     */\n    Circle.prototype.getRadius = function () {\n        return Math.sqrt(this.getRadiusSquared_());\n    };\n    /**\n     * @private\n     * @return {number} Radius squared.\n     */\n    Circle.prototype.getRadiusSquared_ = function () {\n        var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n        var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n        return dx * dx + dy * dy;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Circle.prototype.getType = function () {\n        return GeometryType.CIRCLE;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Circle.prototype.intersectsExtent = function (extent) {\n        var circleExtent = this.getExtent();\n        if (intersects(extent, circleExtent)) {\n            var center = this.getCenter();\n            if (extent[0] <= center[0] && extent[2] >= center[0]) {\n                return true;\n            }\n            if (extent[1] <= center[1] && extent[3] >= center[1]) {\n                return true;\n            }\n            return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n        }\n        return false;\n    };\n    /**\n     * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} center Center.\n     * @api\n     */\n    Circle.prototype.setCenter = function (center) {\n        var stride = this.stride;\n        var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n        var flatCoordinates = center.slice();\n        flatCoordinates[stride] = flatCoordinates[0] + radius;\n        for (var i = 1; i < stride; ++i) {\n            flatCoordinates[stride + i] = center[i];\n        }\n        this.setFlatCoordinates(this.layout, flatCoordinates);\n        this.changed();\n    };\n    /**\n     * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n     * number) of the circle.\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     * @param {number} radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Circle.prototype.setCenterAndRadius = function (center, radius, opt_layout) {\n        this.setLayout(opt_layout, center, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        /** @type {Array<number>} */\n        var flatCoordinates = this.flatCoordinates;\n        var offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n        flatCoordinates[offset++] = flatCoordinates[0] + radius;\n        for (var i = 1, ii = this.stride; i < ii; ++i) {\n            flatCoordinates[offset++] = flatCoordinates[i];\n        }\n        flatCoordinates.length = offset;\n        this.changed();\n    };\n    Circle.prototype.getCoordinates = function () {\n        return null;\n    };\n    Circle.prototype.setCoordinates = function (coordinates, opt_layout) { };\n    /**\n     * Set the radius of the circle. The radius is in the units of the projection.\n     * @param {number} radius Radius.\n     * @api\n     */\n    Circle.prototype.setRadius = function (radius) {\n        this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n        this.changed();\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in counter-clockwise radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Circle.prototype.rotate = function (angle, anchor) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(rotate(center, 0, center.length, stride, angle, anchor, center));\n        this.changed();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Circle.prototype.translate = function (deltaX, deltaY) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(translate(center, 0, center.length, stride, deltaX, deltaY, center));\n        this.changed();\n    };\n    return Circle;\n}(SimpleGeometry));\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n//# sourceMappingURL=Circle.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM, } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        var multiLineString = new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        multiLineString.applyProperties(this);\n        return multiLineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiLineString} Simplified MultiLineString.\n     * @protected\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return GeometryType.MULTI_LINE_STRING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        multiPoint.applyProperties(this);\n        return multiPoint;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates\n            ? 0\n            : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return GeometryType.MULTI_POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta, } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray, } from './flat/orient.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        var multiPolygon = new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n        multiPolygon.applyProperties(this);\n        return multiPolygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiPolygon} Simplified MultiPolygon.\n     * @protected\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return GeometryType.MULTI_POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length =\n                lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, { fromCircle, makeRegular } from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { always, noModifierKeys, shiftKeyOnly } from '../events/condition.js';\nimport { boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../extent.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { fromUserCoordinate, getUserProjection } from '../proj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { squaredDistance as squaredCoordinateDistance } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/GeometryType.js\").default} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    CIRCLE: 'Circle',\n};\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n    /**\n     * Triggered upon feature draw start\n     * @event DrawEvent#drawstart\n     * @api\n     */\n    DRAWSTART: 'drawstart',\n    /**\n     * Triggered upon feature draw end\n     * @event DrawEvent#drawend\n     * @api\n     */\n    DRAWEND: 'drawend',\n    /**\n     * Triggered upon feature draw abortion\n     * @event DrawEvent#drawabort\n     * @api\n     */\n    DRAWABORT: 'drawabort',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /** @class */ (function (_super) {\n    __extends(DrawEvent, _super);\n    /**\n     * @param {DrawEventType} type Type.\n     * @param {Feature} feature The feature drawn.\n     */\n    function DrawEvent(type, feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being drawn.\n         * @type {Feature}\n         * @api\n         */\n        _this.feature = feature;\n        return _this;\n    }\n    return DrawEvent;\n}(Event));\nexport { DrawEvent };\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /** @class */ (function (_super) {\n    __extends(Draw, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function Draw(options) {\n        var _this = this;\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.shouldHandle_ = false;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.downPx_ = null;\n        /**\n         * @type {?}\n         * @private\n         */\n        _this.downTimeout_;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.lastDragTime_;\n        /**\n         * Pointer type of the last pointermove event\n         * @type {string}\n         * @private\n         */\n        _this.pointerType_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.freehand_ = false;\n        /**\n         * Target source for drawn features.\n         * @type {VectorSource}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * Target collection for drawn features.\n         * @type {import(\"../Collection.js\").default<Feature>}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * Pixel distance for snapping.\n         * @type {number}\n         * @private\n         */\n        _this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n        /**\n         * Geometry type.\n         * @type {import(\"../geom/GeometryType.js\").default}\n         * @private\n         */\n        _this.type_ = /** @type {import(\"../geom/GeometryType.js\").default} */ (options.type);\n        /**\n         * Drawing mode (derived from geometry type.\n         * @type {Mode}\n         * @private\n         */\n        _this.mode_ = getMode(_this.type_);\n        /**\n         * Stop click, singleclick, and doubleclick events from firing during drawing.\n         * Default is `false`.\n         * @type {boolean}\n         * @private\n         */\n        _this.stopClick_ = !!options.stopClick;\n        /**\n         * The number of points that must be drawn before a polygon ring or line\n         * string can be finished.  The default is 3 for polygon rings and 2 for\n         * line strings.\n         * @type {number}\n         * @private\n         */\n        _this.minPoints_ = options.minPoints\n            ? options.minPoints\n            : _this.mode_ === Mode.POLYGON\n                ? 3\n                : 2;\n        /**\n         * The number of points that can be drawn before a polygon ring or line string\n         * is finished. The default is no restriction.\n         * @type {number}\n         * @private\n         */\n        _this.maxPoints_ =\n            _this.mode_ === Mode.CIRCLE\n                ? 2\n                : options.maxPoints\n                    ? options.maxPoints\n                    : Infinity;\n        /**\n         * A function to decide if a potential finish coordinate is permissible\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.finishCondition_ = options.finishCondition\n            ? options.finishCondition\n            : TRUE;\n        var geometryFunction = options.geometryFunction;\n        if (!geometryFunction) {\n            var mode_1 = _this.mode_;\n            if (mode_1 === Mode.CIRCLE) {\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n                 * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, geometry, projection) {\n                    var circle = geometry\n                        ? /** @type {Circle} */ (geometry)\n                        : new Circle([NaN, NaN]);\n                    var center = fromUserCoordinate(coordinates[0], projection);\n                    var squaredLength = squaredCoordinateDistance(center, fromUserCoordinate(coordinates[coordinates.length - 1], projection));\n                    circle.setCenterAndRadius(center, Math.sqrt(squaredLength));\n                    var userProjection = getUserProjection();\n                    if (userProjection) {\n                        circle.transform(projection, userProjection);\n                    }\n                    return circle;\n                };\n            }\n            else {\n                var Constructor_1;\n                if (mode_1 === Mode.POINT) {\n                    Constructor_1 = Point;\n                }\n                else if (mode_1 === Mode.LINE_STRING) {\n                    Constructor_1 = LineString;\n                }\n                else if (mode_1 === Mode.POLYGON) {\n                    Constructor_1 = Polygon;\n                }\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n                 * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, geometry, projection) {\n                    if (geometry) {\n                        if (mode_1 === Mode.POLYGON) {\n                            if (coordinates[0].length) {\n                                // Add a closing coordinate to match the first\n                                geometry.setCoordinates([\n                                    coordinates[0].concat([coordinates[0][0]]),\n                                ]);\n                            }\n                            else {\n                                geometry.setCoordinates([]);\n                            }\n                        }\n                        else {\n                            geometry.setCoordinates(coordinates);\n                        }\n                    }\n                    else {\n                        geometry = new Constructor_1(coordinates);\n                    }\n                    return geometry;\n                };\n            }\n        }\n        /**\n         * @type {GeometryFunction}\n         * @private\n         */\n        _this.geometryFunction_ = geometryFunction;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.dragVertexDelay_ =\n            options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n        /**\n         * Finish coordinate for the feature (first point for polygons, last point for\n         * linestrings).\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.finishCoordinate_ = null;\n        /**\n         * Sketch feature.\n         * @type {Feature}\n         * @private\n         */\n        _this.sketchFeature_ = null;\n        /**\n         * Sketch point.\n         * @type {Feature<Point>}\n         * @private\n         */\n        _this.sketchPoint_ = null;\n        /**\n         * Sketch coordinates. Used when drawing a line or polygon.\n         * @type {SketchCoordType}\n         * @private\n         */\n        _this.sketchCoords_ = null;\n        /**\n         * Sketch line. Used when drawing polygon.\n         * @type {Feature<LineString>}\n         * @private\n         */\n        _this.sketchLine_ = null;\n        /**\n         * Sketch line coordinates. Used when drawing a polygon or circle.\n         * @type {LineCoordType}\n         * @private\n         */\n        _this.sketchLineCoords_ = null;\n        /**\n         * Squared tolerance for handling up events.  If the squared distance\n         * between a down and up event is greater than this tolerance, up events\n         * will not be handled.\n         * @type {number}\n         * @private\n         */\n        _this.squaredClickTolerance_ = options.clickTolerance\n            ? options.clickTolerance * options.clickTolerance\n            : 36;\n        /**\n         * Draw overlay where our sketch features are drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.overlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: options.wrapX ? options.wrapX : false,\n            }),\n            style: options.style ? options.style : getDefaultStyleFunction(),\n            updateWhileInteracting: true,\n        });\n        /**\n         * Name of the geometry attribute for newly created features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.freehandCondition_;\n        if (options.freehand) {\n            _this.freehandCondition_ = always;\n        }\n        else {\n            _this.freehandCondition_ = options.freehandCondition\n                ? options.freehandCondition\n                : shiftKeyOnly;\n        }\n        _this.addEventListener(getChangeEventType(InteractionProperty.ACTIVE), _this.updateState_);\n        return _this;\n    }\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Draw.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        this.updateState_();\n    };\n    /**\n     * Get the overlay layer that this interaction renders sketch features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Draw.prototype.getOverlay = function () {\n        return this.overlay_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Draw.prototype.handleEvent = function (event) {\n        if (event.originalEvent.type === EventType.CONTEXTMENU) {\n            // Avoid context menu for long taps when drawing on mobile\n            event.originalEvent.preventDefault();\n        }\n        this.freehand_ =\n            this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n        var move = event.type === MapBrowserEventType.POINTERMOVE;\n        var pass = true;\n        if (!this.freehand_ &&\n            this.lastDragTime_ &&\n            event.type === MapBrowserEventType.POINTERDRAG) {\n            var now = Date.now();\n            if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n                this.downPx_ = event.pixel;\n                this.shouldHandle_ = !this.freehand_;\n                move = true;\n            }\n            else {\n                this.lastDragTime_ = undefined;\n            }\n            if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n                clearTimeout(this.downTimeout_);\n                this.downTimeout_ = undefined;\n            }\n        }\n        if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDRAG &&\n            this.sketchFeature_ !== null) {\n            this.addToDrawing_(event.coordinate);\n            pass = false;\n        }\n        else if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDOWN) {\n            pass = false;\n        }\n        else if (move && this.getPointerCount() < 2) {\n            pass = event.type === MapBrowserEventType.POINTERMOVE;\n            if (pass && this.freehand_) {\n                this.handlePointerMove_(event);\n                if (this.shouldHandle_) {\n                    // Avoid page scrolling when freehand drawing on mobile\n                    event.originalEvent.preventDefault();\n                }\n            }\n            else if (event.originalEvent.pointerType === 'mouse' ||\n                (event.type === MapBrowserEventType.POINTERDRAG &&\n                    this.downTimeout_ === undefined)) {\n                this.handlePointerMove_(event);\n            }\n        }\n        else if (event.type === MapBrowserEventType.DBLCLICK) {\n            pass = false;\n        }\n        return _super.prototype.handleEvent.call(this, event) && pass;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Draw.prototype.handleDownEvent = function (event) {\n        this.shouldHandle_ = !this.freehand_;\n        if (this.freehand_) {\n            this.downPx_ = event.pixel;\n            if (!this.finishCoordinate_) {\n                this.startDrawing_(event.coordinate);\n            }\n            return true;\n        }\n        else if (this.condition_(event)) {\n            this.lastDragTime_ = Date.now();\n            this.downTimeout_ = setTimeout(function () {\n                this.handlePointerMove_(new MapBrowserEvent(MapBrowserEventType.POINTERMOVE, event.map, event.originalEvent, false, event.frameState));\n            }.bind(this), this.dragVertexDelay_);\n            this.downPx_ = event.pixel;\n            return true;\n        }\n        else {\n            this.lastDragTime_ = undefined;\n            return false;\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Draw.prototype.handleUpEvent = function (event) {\n        var pass = true;\n        if (this.getPointerCount() === 0) {\n            if (this.downTimeout_) {\n                clearTimeout(this.downTimeout_);\n                this.downTimeout_ = undefined;\n            }\n            this.handlePointerMove_(event);\n            if (this.shouldHandle_) {\n                switch (true) {\n                    case !this.finishCoordinate_:\n                        this.startDrawing_(event.coordinate);\n                        if (this.mode_ !== Mode.POINT) {\n                            break;\n                        }\n                    // eslint-disable-next-line no-fallthrough\n                    case this.freehand_ ||\n                        (this.atFinish_(event.pixel) && this.finishCondition_(event)):\n                        this.finishDrawing();\n                        break;\n                    case !this.freehand_:\n                        this.addToDrawing_(event.coordinate);\n                        break;\n                    default:\n                        break;\n                }\n                pass = false;\n            }\n            else if (this.freehand_) {\n                this.abortDrawing();\n            }\n        }\n        if (!pass && this.stopClick_) {\n            event.originalEvent.stopPropagation();\n        }\n        return pass;\n    };\n    /**\n     * Handle move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n     * @private\n     */\n    Draw.prototype.handlePointerMove_ = function (event) {\n        this.pointerType_ = event.originalEvent.pointerType;\n        if (this.downPx_ &&\n            ((!this.freehand_ && this.shouldHandle_) ||\n                (this.freehand_ && !this.shouldHandle_))) {\n            var downPx = this.downPx_;\n            var clickPx = event.pixel;\n            var dx = downPx[0] - clickPx[0];\n            var dy = downPx[1] - clickPx[1];\n            var squaredDistance = dx * dx + dy * dy;\n            this.shouldHandle_ = this.freehand_\n                ? squaredDistance > this.squaredClickTolerance_\n                : squaredDistance <= this.squaredClickTolerance_;\n            if (!this.shouldHandle_) {\n                return;\n            }\n        }\n        if (this.finishCoordinate_) {\n            this.modifyDrawing_(event.coordinate);\n        }\n        else {\n            this.createOrUpdateSketchPoint_(event);\n        }\n    };\n    /**\n     * Determine if an event is within the snapping tolerance of the start coord.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {boolean} The event is within the snapping tolerance of the start.\n     * @private\n     */\n    Draw.prototype.atFinish_ = function (pixel) {\n        var at = false;\n        if (this.sketchFeature_) {\n            var potentiallyDone = false;\n            var potentiallyFinishCoordinates = [this.finishCoordinate_];\n            var mode = this.mode_;\n            if (mode === Mode.POINT) {\n                at = true;\n            }\n            else if (mode === Mode.CIRCLE) {\n                at = this.sketchCoords_.length === 2;\n            }\n            else if (mode === Mode.LINE_STRING) {\n                potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n            }\n            else if (mode === Mode.POLYGON) {\n                var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n                potentiallyDone = sketchCoords[0].length > this.minPoints_;\n                potentiallyFinishCoordinates = [\n                    sketchCoords[0][0],\n                    sketchCoords[0][sketchCoords[0].length - 2],\n                ];\n            }\n            if (potentiallyDone) {\n                var map = this.getMap();\n                for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n                    var finishCoordinate = potentiallyFinishCoordinates[i];\n                    var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n                    var dx = pixel[0] - finishPixel[0];\n                    var dy = pixel[1] - finishPixel[1];\n                    var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n                    at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n                    if (at) {\n                        this.finishCoordinate_ = finishCoordinate;\n                        break;\n                    }\n                }\n            }\n        }\n        return at;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.createOrUpdateSketchPoint_ = function (event) {\n        var coordinates = event.coordinate.slice();\n        if (!this.sketchPoint_) {\n            this.sketchPoint_ = new Feature(new Point(coordinates));\n            this.updateSketchFeatures_();\n        }\n        else {\n            var sketchPointGeom = this.sketchPoint_.getGeometry();\n            sketchPointGeom.setCoordinates(coordinates);\n        }\n    };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n     * @private\n     */\n    Draw.prototype.createOrUpdateCustomSketchLine_ = function (geometry) {\n        if (!this.sketchLine_) {\n            this.sketchLine_ = new Feature();\n        }\n        var ring = geometry.getLinearRing(0);\n        var sketchLineGeom = this.sketchLine_.getGeometry();\n        if (!sketchLineGeom) {\n            sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n            this.sketchLine_.setGeometry(sketchLineGeom);\n        }\n        else {\n            sketchLineGeom.setFlatCoordinates(ring.getLayout(), ring.getFlatCoordinates());\n            sketchLineGeom.changed();\n        }\n    };\n    /**\n     * Start the drawing.\n     * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n     * @private\n     */\n    Draw.prototype.startDrawing_ = function (start) {\n        var projection = this.getMap().getView().getProjection();\n        this.finishCoordinate_ = start;\n        if (this.mode_ === Mode.POINT) {\n            this.sketchCoords_ = start.slice();\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            this.sketchCoords_ = [[start.slice(), start.slice()]];\n            this.sketchLineCoords_ = this.sketchCoords_[0];\n        }\n        else {\n            this.sketchCoords_ = [start.slice(), start.slice()];\n        }\n        if (this.sketchLineCoords_) {\n            this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n        }\n        var geometry = this.geometryFunction_(this.sketchCoords_, undefined, projection);\n        this.sketchFeature_ = new Feature();\n        if (this.geometryName_) {\n            this.sketchFeature_.setGeometryName(this.geometryName_);\n        }\n        this.sketchFeature_.setGeometry(geometry);\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Modify the drawing.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @private\n     */\n    Draw.prototype.modifyDrawing_ = function (coordinate) {\n        var map = this.getMap();\n        var geometry = this.sketchFeature_.getGeometry();\n        var projection = map.getView().getProjection();\n        var coordinates, last;\n        if (this.mode_ === Mode.POINT) {\n            last = this.sketchCoords_;\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            last = coordinates[coordinates.length - 1];\n            if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n                // snap to finish\n                coordinate = this.finishCoordinate_.slice();\n            }\n        }\n        else {\n            coordinates = this.sketchCoords_;\n            last = coordinates[coordinates.length - 1];\n        }\n        last[0] = coordinate[0];\n        last[1] = coordinate[1];\n        this.geometryFunction_(\n        /** @type {!LineCoordType} */ (this.sketchCoords_), geometry, projection);\n        if (this.sketchPoint_) {\n            var sketchPointGeom = this.sketchPoint_.getGeometry();\n            sketchPointGeom.setCoordinates(coordinate);\n        }\n        if (geometry.getType() === GeometryType.POLYGON &&\n            this.mode_ !== Mode.POLYGON) {\n            this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n        }\n        else if (this.sketchLineCoords_) {\n            var sketchLineGeom = this.sketchLine_.getGeometry();\n            sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Add a new coordinate to the drawing.\n     * @param {!PointCoordType} coordinate Coordinate\n     * @private\n     */\n    Draw.prototype.addToDrawing_ = function (coordinate) {\n        var geometry = this.sketchFeature_.getGeometry();\n        var projection = this.getMap().getView().getProjection();\n        var done;\n        var coordinates;\n        var mode = this.mode_;\n        if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n            this.finishCoordinate_ = coordinate.slice();\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            this.geometryFunction_(coordinates, geometry, projection);\n        }\n        else if (mode === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            if (done) {\n                this.finishCoordinate_ = coordinates[0];\n            }\n            this.geometryFunction_(this.sketchCoords_, geometry, projection);\n        }\n        this.updateSketchFeatures_();\n        if (done) {\n            this.finishDrawing();\n        }\n    };\n    /**\n     * Remove last point of the feature currently being drawn. Does not do anything when\n     * drawing POINT or MULTI_POINT geometries.\n     * @api\n     */\n    Draw.prototype.removeLastPoint = function () {\n        if (!this.sketchFeature_) {\n            return;\n        }\n        var geometry = this.sketchFeature_.getGeometry();\n        var projection = this.getMap().getView().getProjection();\n        var coordinates;\n        var mode = this.mode_;\n        if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            coordinates.splice(-2, 1);\n            if (coordinates.length >= 2) {\n                this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n                var finishCoordinate = this.finishCoordinate_.slice();\n                coordinates[coordinates.length - 1] = finishCoordinate;\n                this.sketchPoint_.setGeometry(new Point(finishCoordinate));\n            }\n            this.geometryFunction_(coordinates, geometry, projection);\n            if (geometry.getType() === GeometryType.POLYGON && this.sketchLine_) {\n                this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n            }\n        }\n        else if (mode === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            coordinates.splice(-2, 1);\n            var sketchLineGeom = this.sketchLine_.getGeometry();\n            if (coordinates.length >= 2) {\n                var finishCoordinate = coordinates[coordinates.length - 2].slice();\n                coordinates[coordinates.length - 1] = finishCoordinate;\n                this.sketchPoint_.setGeometry(new Point(finishCoordinate));\n            }\n            sketchLineGeom.setCoordinates(coordinates);\n            this.geometryFunction_(this.sketchCoords_, geometry, projection);\n        }\n        if (coordinates.length === 1) {\n            this.abortDrawing();\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Stop drawing and add the sketch feature to the target layer.\n     * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n     * dispatched before inserting the feature.\n     * @api\n     */\n    Draw.prototype.finishDrawing = function () {\n        var sketchFeature = this.abortDrawing_();\n        if (!sketchFeature) {\n            return;\n        }\n        var coordinates = this.sketchCoords_;\n        var geometry = sketchFeature.getGeometry();\n        var projection = this.getMap().getView().getProjection();\n        if (this.mode_ === Mode.LINE_STRING) {\n            // remove the redundant last point\n            coordinates.pop();\n            this.geometryFunction_(coordinates, geometry, projection);\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            // remove the redundant last point in ring\n            /** @type {PolyCoordType} */ (coordinates)[0].pop();\n            this.geometryFunction_(coordinates, geometry, projection);\n            coordinates = geometry.getCoordinates();\n        }\n        // cast multi-part geometries\n        if (this.type_ === GeometryType.MULTI_POINT) {\n            sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n            sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_POLYGON) {\n            sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]));\n        }\n        // First dispatch event to allow full set up of feature\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n        // Then insert feature\n        if (this.features_) {\n            this.features_.push(sketchFeature);\n        }\n        if (this.source_) {\n            this.source_.addFeature(sketchFeature);\n        }\n    };\n    /**\n     * Stop drawing without adding the sketch feature to the target layer.\n     * @return {Feature} The sketch feature (or null if none).\n     * @private\n     */\n    Draw.prototype.abortDrawing_ = function () {\n        this.finishCoordinate_ = null;\n        var sketchFeature = this.sketchFeature_;\n        this.sketchFeature_ = null;\n        this.sketchPoint_ = null;\n        this.sketchLine_ = null;\n        this.overlay_.getSource().clear(true);\n        return sketchFeature;\n    };\n    /**\n     * Stop drawing without adding the sketch feature to the target layer.\n     * @api\n     */\n    Draw.prototype.abortDrawing = function () {\n        var sketchFeature = this.abortDrawing_();\n        if (sketchFeature) {\n            this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n        }\n    };\n    /**\n     * Append coordinates to the end of the geometry that is currently being drawn.\n     * This can be used when drawing LineStrings or Polygons. Coordinates will\n     * either be appended to the current LineString or the outer ring of the current\n     * Polygon. If no geometry is being drawn, a new one will be created.\n     * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n     * the coordinate array.\n     * @api\n     */\n    Draw.prototype.appendCoordinates = function (coordinates) {\n        var mode = this.mode_;\n        var newDrawing = !this.sketchFeature_;\n        if (newDrawing) {\n            this.startDrawing_(coordinates[0]);\n        }\n        /** @type {LineCoordType} */\n        var sketchCoords;\n        if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n            sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n        }\n        else if (mode === Mode.POLYGON) {\n            sketchCoords =\n                this.sketchCoords_ && this.sketchCoords_.length\n                    ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n                    : [];\n        }\n        else {\n            return;\n        }\n        if (newDrawing) {\n            sketchCoords.shift();\n        }\n        // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n        sketchCoords.pop();\n        // Append coordinate list\n        for (var i = 0; i < coordinates.length; i++) {\n            this.addToDrawing_(coordinates[i]);\n        }\n        var ending = coordinates[coordinates.length - 1];\n        // Duplicate last coordinate for sketch drawing (cursor position)\n        this.addToDrawing_(ending);\n        this.modifyDrawing_(ending);\n    };\n    /**\n     * Initiate draw mode by starting from an existing geometry which will\n     * receive new additional points. This only works on features with\n     * `LineString` geometries, where the interaction will extend lines by adding\n     * points to the end of the coordinates array.\n     * This will change the original feature, instead of drawing a copy.\n     *\n     * The function will dispatch a `drawstart` event.\n     *\n     * @param {!Feature<LineString>} feature Feature to be extended.\n     * @api\n     */\n    Draw.prototype.extend = function (feature) {\n        var geometry = feature.getGeometry();\n        var lineString = geometry;\n        this.sketchFeature_ = feature;\n        this.sketchCoords_ = lineString.getCoordinates();\n        var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n        this.finishCoordinate_ = last.slice();\n        this.sketchCoords_.push(last.slice());\n        this.sketchPoint_ = new Feature(new Point(last));\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Redraw the sketch features.\n     * @private\n     */\n    Draw.prototype.updateSketchFeatures_ = function () {\n        var sketchFeatures = [];\n        if (this.sketchFeature_) {\n            sketchFeatures.push(this.sketchFeature_);\n        }\n        if (this.sketchLine_) {\n            sketchFeatures.push(this.sketchLine_);\n        }\n        if (this.sketchPoint_) {\n            sketchFeatures.push(this.sketchPoint_);\n        }\n        var overlaySource = this.overlay_.getSource();\n        overlaySource.clear(true);\n        overlaySource.addFeatures(sketchFeatures);\n    };\n    /**\n     * @private\n     */\n    Draw.prototype.updateState_ = function () {\n        var map = this.getMap();\n        var active = this.getActive();\n        if (!map || !active) {\n            this.abortDrawing();\n        }\n        this.overlay_.setMap(active ? map : null);\n    };\n    return Draw;\n}(PointerInteraction));\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    return function (feature, resolution) {\n        return styles[feature.getGeometry().getType()];\n    };\n}\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number=} opt_angle Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n    return function (coordinates, opt_geometry, projection) {\n        var center = fromUserCoordinate(\n        /** @type {LineCoordType} */ (coordinates)[0], projection);\n        var end = fromUserCoordinate(\n        /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1], projection);\n        var radius = Math.sqrt(squaredCoordinateDistance(center, end));\n        var geometry = opt_geometry\n            ? /** @type {Polygon} */ (opt_geometry)\n            : fromCircle(new Circle(center), opt_sides);\n        var angle = opt_angle;\n        if (!opt_angle && opt_angle !== 0) {\n            var x = end[0] - center[0];\n            var y = end[1] - center[1];\n            angle = Math.atan2(y, x);\n        }\n        makeRegular(geometry, center, radius, angle);\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            geometry.transform(projection, userProjection);\n        }\n        return geometry;\n    };\n}\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n    return function (coordinates, opt_geometry, projection) {\n        var extent = boundingExtent(\n        /** @type {LineCoordType} */ ([\n            coordinates[0],\n            coordinates[coordinates.length - 1],\n        ]).map(function (coordinate) {\n            return fromUserCoordinate(coordinate, projection);\n        }));\n        var boxCoordinates = [\n            [\n                getBottomLeft(extent),\n                getBottomRight(extent),\n                getTopRight(extent),\n                getTopLeft(extent),\n                getBottomLeft(extent),\n            ],\n        ];\n        var geometry = opt_geometry;\n        if (geometry) {\n            geometry.setCoordinates(boxCoordinates);\n        }\n        else {\n            geometry = new Polygon(boxCoordinates);\n        }\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            geometry.transform(projection, userProjection);\n        }\n        return geometry;\n    };\n}\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/GeometryType.js\").default} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n    var mode;\n    if (type === GeometryType.POINT || type === GeometryType.MULTI_POINT) {\n        mode = Mode.POINT;\n    }\n    else if (type === GeometryType.LINE_STRING ||\n        type === GeometryType.MULTI_LINE_STRING) {\n        mode = Mode.LINE_STRING;\n    }\n    else if (type === GeometryType.POLYGON ||\n        type === GeometryType.MULTI_POLYGON) {\n        mode = Mode.POLYGON;\n    }\n    else if (type === GeometryType.CIRCLE) {\n        mode = Mode.CIRCLE;\n    }\n    return /** @type {!Mode} */ (mode);\n}\nexport default Draw;\n//# sourceMappingURL=Draw.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { always } from '../events/condition.js';\nimport { boundingExtent, getArea } from '../extent.js';\nimport { closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, } from '../coordinate.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\nimport { toUserExtent } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n    /**\n     * Triggered after the extent is changed\n     * @event ExtentEvent#extentchanged\n     * @api\n     */\n    EXTENTCHANGED: 'extentchanged',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nvar ExtentEvent = /** @class */ (function (_super) {\n    __extends(ExtentEvent, _super);\n    /**\n     * @param {import(\"../extent.js\").Extent} extent the new extent\n     */\n    function ExtentEvent(extent) {\n        var _this = _super.call(this, ExtentEventType.EXTENTCHANGED) || this;\n        /**\n         * The current extent.\n         * @type {import(\"../extent.js\").Extent}\n         * @api\n         */\n        _this.extent = extent;\n        return _this;\n    }\n    return ExtentEvent;\n}(Event));\nexport { ExtentEvent };\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nvar Extent = /** @class */ (function (_super) {\n    __extends(Extent, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Extent(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * Condition\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * Extent of the drawn box\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        _this.extent_ = null;\n        /**\n         * Handler for pointer move events\n         * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n         * @private\n         */\n        _this.pointerHandler_ = null;\n        /**\n         * Pixel threshold to snap to extent\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ =\n            options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n        /**\n         * Is the pointer snapped to an extent vertex\n         * @type {boolean}\n         * @private\n         */\n        _this.snappedToVertex_ = false;\n        /**\n         * Feature for displaying the visible extent\n         * @type {Feature}\n         * @private\n         */\n        _this.extentFeature_ = null;\n        /**\n         * Feature for displaying the visible pointer\n         * @type {Feature<Point>}\n         * @private\n         */\n        _this.vertexFeature_ = null;\n        if (!opt_options) {\n            opt_options = {};\n        }\n        /**\n         * Layer for the extentFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.extentOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX,\n            }),\n            style: opt_options.boxStyle\n                ? opt_options.boxStyle\n                : getDefaultExtentStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true,\n        });\n        /**\n         * Layer for the vertexFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.vertexOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX,\n            }),\n            style: opt_options.pointerStyle\n                ? opt_options.pointerStyle\n                : getDefaultPointerStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true,\n        });\n        if (opt_options.extent) {\n            _this.setExtent(opt_options.extent);\n        }\n        return _this;\n    }\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n     * @param {import(\"../PluggableMap.js\").default} map map\n     * @returns {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n     * @private\n     */\n    Extent.prototype.snapToVertex_ = function (pixel, map) {\n        var pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n        var sortByDistance = function (a, b) {\n            return (squaredDistanceToSegment(pixelCoordinate, a) -\n                squaredDistanceToSegment(pixelCoordinate, b));\n        };\n        var extent = this.getExtentInternal();\n        if (extent) {\n            //convert extents to line segments and find the segment closest to pixelCoordinate\n            var segments = getSegments(extent);\n            segments.sort(sortByDistance);\n            var closestSegment = segments[0];\n            var vertex = closestOnSegment(pixelCoordinate, closestSegment);\n            var vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n            //if the distance is within tolerance, snap to the segment\n            if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n                //test if we should further snap to a vertex\n                var pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n                var pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n                var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                this.snappedToVertex_ = dist <= this.pixelTolerance_;\n                if (this.snappedToVertex_) {\n                    vertex =\n                        squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                }\n                return vertex;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n     * @private\n     */\n    Extent.prototype.handlePointerMove_ = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var vertex = this.snapToVertex_(pixel, map);\n        if (!vertex) {\n            vertex = map.getCoordinateFromPixelInternal(pixel);\n        }\n        this.createOrUpdatePointerFeature_(vertex);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent extent\n     * @returns {Feature} extent as featrue\n     * @private\n     */\n    Extent.prototype.createOrUpdateExtentFeature_ = function (extent) {\n        var extentFeature = this.extentFeature_;\n        if (!extentFeature) {\n            if (!extent) {\n                extentFeature = new Feature({});\n            }\n            else {\n                extentFeature = new Feature(polygonFromExtent(extent));\n            }\n            this.extentFeature_ = extentFeature;\n            this.extentOverlay_.getSource().addFeature(extentFeature);\n        }\n        else {\n            if (!extent) {\n                extentFeature.setGeometry(undefined);\n            }\n            else {\n                extentFeature.setGeometry(polygonFromExtent(extent));\n            }\n        }\n        return extentFeature;\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n     * @returns {Feature} vertex as feature\n     * @private\n     */\n    Extent.prototype.createOrUpdatePointerFeature_ = function (vertex) {\n        var vertexFeature = this.vertexFeature_;\n        if (!vertexFeature) {\n            vertexFeature = new Feature(new Point(vertex));\n            this.vertexFeature_ = vertexFeature;\n            this.vertexOverlay_.getSource().addFeature(vertexFeature);\n        }\n        else {\n            var geometry = vertexFeature.getGeometry();\n            geometry.setCoordinates(vertex);\n        }\n        return vertexFeature;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    Extent.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        //display pointer (if not dragging)\n        if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n            !this.handlingDownUpSequence) {\n            this.handlePointerMove_(mapBrowserEvent);\n        }\n        //call pointer to determine up/down/drag\n        _super.prototype.handleEvent.call(this, mapBrowserEvent);\n        //return false to stop propagation\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Extent.prototype.handleDownEvent = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var extent = this.getExtentInternal();\n        var vertex = this.snapToVertex_(pixel, map);\n        //find the extent corner opposite the passed corner\n        var getOpposingPoint = function (point) {\n            var x_ = null;\n            var y_ = null;\n            if (point[0] == extent[0]) {\n                x_ = extent[2];\n            }\n            else if (point[0] == extent[2]) {\n                x_ = extent[0];\n            }\n            if (point[1] == extent[1]) {\n                y_ = extent[3];\n            }\n            else if (point[1] == extent[3]) {\n                y_ = extent[1];\n            }\n            if (x_ !== null && y_ !== null) {\n                return [x_, y_];\n            }\n            return null;\n        };\n        if (vertex && extent) {\n            var x = vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n            var y = vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n            //snap to point\n            if (x !== null && y !== null) {\n                this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n                //snap to edge\n            }\n            else if (x !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([x, extent[1]]), getOpposingPoint([x, extent[3]]));\n            }\n            else if (y !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([extent[0], y]), getOpposingPoint([extent[2], y]));\n            }\n            //no snap - new bbox\n        }\n        else {\n            vertex = map.getCoordinateFromPixelInternal(pixel);\n            this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n            this.pointerHandler_ = getPointHandler(vertex);\n        }\n        return true; //event handled; start downup sequence\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    Extent.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (this.pointerHandler_) {\n            var pixelCoordinate = mapBrowserEvent.coordinate;\n            this.setExtent(this.pointerHandler_(pixelCoordinate));\n            this.createOrUpdatePointerFeature_(pixelCoordinate);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Extent.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.pointerHandler_ = null;\n        //If bbox is zero area, set to null;\n        var extent = this.getExtentInternal();\n        if (!extent || getArea(extent) === 0) {\n            this.setExtent(null);\n        }\n        return false; //Stop handling downup sequence\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Extent.prototype.setMap = function (map) {\n        this.extentOverlay_.setMap(map);\n        this.vertexOverlay_.setMap(map);\n        _super.prototype.setMap.call(this, map);\n    };\n    /**\n     * Returns the current drawn extent in the view projection (or user projection if set)\n     *\n     * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n     * @api\n     */\n    Extent.prototype.getExtent = function () {\n        return toUserExtent(this.getExtentInternal(), this.getMap().getView().getProjection());\n    };\n    /**\n     * Returns the current drawn extent in the view projection\n     *\n     * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n     * @api\n     */\n    Extent.prototype.getExtentInternal = function () {\n        return this.extent_;\n    };\n    /**\n     * Manually sets the drawn extent, using the view projection.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent\n     * @api\n     */\n    Extent.prototype.setExtent = function (extent) {\n        //Null extent means no bbox\n        this.extent_ = extent ? extent : null;\n        this.createOrUpdateExtentFeature_(extent);\n        this.dispatchEvent(new ExtentEvent(this.extent_));\n    };\n    return Extent;\n}(PointerInteraction));\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POLYGON];\n    };\n}\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POINT];\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n    return function (point) {\n        return boundingExtent([fixedPoint, point]);\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n    if (fixedP1[0] == fixedP2[0]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n        };\n    }\n    else if (fixedP1[1] == fixedP2[1]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n        };\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @returns {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n    return [\n        [\n            [extent[0], extent[1]],\n            [extent[0], extent[3]],\n        ],\n        [\n            [extent[0], extent[3]],\n            [extent[2], extent[3]],\n        ],\n        [\n            [extent[2], extent[3]],\n            [extent[2], extent[1]],\n        ],\n        [\n            [extent[2], extent[1]],\n            [extent[0], extent[1]],\n        ],\n    ];\n}\nexport default Extent;\n//# sourceMappingURL=Extent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { altKeyOnly, always, primaryAction, singleClick, } from '../events/condition.js';\nimport { boundingExtent, buffer as bufferExtent, createOrUpdateFromCoordinate as createExtent, } from '../extent.js';\nimport { closestOnSegment, distance as coordinateDistance, equals as coordinatesEqual, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, } from '../coordinate.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { equals } from '../array.js';\nimport { fromCircle } from '../geom/Polygon.js';\nimport { fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent, } from '../proj.js';\nimport { getUid } from '../util.js';\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CENTER_INDEX = 0;\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\nvar tempExtent = [0, 0, 0, 0];\nvar tempSegment = [];\n/**\n * @enum {string}\n */\nvar ModifyEventType = {\n    /**\n     * Triggered upon feature modification start\n     * @event ModifyEvent#modifystart\n     * @api\n     */\n    MODIFYSTART: 'modifystart',\n    /**\n     * Triggered upon feature modification end\n     * @event ModifyEvent#modifyend\n     * @api\n     */\n    MODIFYEND: 'modifyend',\n};\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {Feature} feature\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} [index]\n * @property {Array<import(\"../extent.js\").Extent>} segment\n * @property {Array<SegmentData>} [featureSegments]\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nvar ModifyEvent = /** @class */ (function (_super) {\n    __extends(ModifyEvent, _super);\n    /**\n     * @param {ModifyEventType} type Type.\n     * @param {Collection<Feature>} features\n     * The features modified.\n     * @param {import(\"../MapBrowserEvent.js\").default} MapBrowserEvent\n     * Associated {@link module:ol/MapBrowserEvent}.\n     */\n    function ModifyEvent(type, features, MapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features being modified.\n         * @type {Collection<Feature>}\n         * @api\n         */\n        _this.features = features;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = MapBrowserEvent;\n        return _this;\n    }\n    return ModifyEvent;\n}(Event));\nexport { ModifyEvent };\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerane`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nvar Modify = /** @class */ (function (_super) {\n    __extends(Modify, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function Modify(options) {\n        var _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /** @private */\n        _this.boundHandleFeatureChange_ = _this.handleFeatureChange_.bind(_this);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : primaryAction;\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n            return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n        };\n        /**\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.deleteCondition_ = options.deleteCondition\n            ? options.deleteCondition\n            : _this.defaultDeleteCondition_;\n        /**\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.insertVertexCondition_ = options.insertVertexCondition\n            ? options.insertVertexCondition\n            : always;\n        /**\n         * Editing vertex.\n         * @type {Feature}\n         * @private\n         */\n        _this.vertexFeature_ = null;\n        /**\n         * Segments intersecting {@link this.vertexFeature_} by segment uid.\n         * @type {Object<string, boolean>}\n         * @private\n         */\n        _this.vertexSegments_ = null;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.lastPixel_ = [0, 0];\n        /**\n         * Tracks if the next `singleclick` event should be ignored to prevent\n         * accidental deletion right after vertex creation.\n         * @type {boolean}\n         * @private\n         */\n        _this.ignoreNextSingleClick_ = false;\n        /**\n         * @type {Collection<Feature>}\n         * @private\n         */\n        _this.featuresBeingModified_ = null;\n        /**\n         * Segment RTree for each layer\n         * @type {RBush<SegmentData>}\n         * @private\n         */\n        _this.rBush_ = new RBush();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ =\n            options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.snappedToVertex_ = false;\n        /**\n         * Indicate whether the interaction is currently changing a feature's\n         * coordinates.\n         * @type {boolean}\n         * @private\n         */\n        _this.changingFeature_ = false;\n        /**\n         * @type {Array}\n         * @private\n         */\n        _this.dragSegments_ = [];\n        /**\n         * Draw overlay where sketch features are drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.overlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!options.wrapX,\n            }),\n            style: options.style ? options.style : getDefaultStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true,\n        });\n        /**\n         * @const\n         * @private\n         * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n         */\n        _this.SEGMENT_WRITERS_ = {\n            'Point': _this.writePointGeometry_.bind(_this),\n            'LineString': _this.writeLineStringGeometry_.bind(_this),\n            'LinearRing': _this.writeLineStringGeometry_.bind(_this),\n            'Polygon': _this.writePolygonGeometry_.bind(_this),\n            'MultiPoint': _this.writeMultiPointGeometry_.bind(_this),\n            'MultiLineString': _this.writeMultiLineStringGeometry_.bind(_this),\n            'MultiPolygon': _this.writeMultiPolygonGeometry_.bind(_this),\n            'Circle': _this.writeCircleGeometry_.bind(_this),\n            'GeometryCollection': _this.writeGeometryCollectionGeometry_.bind(_this),\n        };\n        /**\n         * @type {VectorSource}\n         * @private\n         */\n        _this.source_ = null;\n        /**\n         * @type {boolean|import(\"../layer/BaseVector\").default}\n         */\n        _this.hitDetection_ = null;\n        var features;\n        if (options.features) {\n            features = options.features;\n        }\n        else if (options.source) {\n            _this.source_ = options.source;\n            features = new Collection(_this.source_.getFeatures());\n            _this.source_.addEventListener(VectorEventType.ADDFEATURE, _this.handleSourceAdd_.bind(_this));\n            _this.source_.addEventListener(VectorEventType.REMOVEFEATURE, _this.handleSourceRemove_.bind(_this));\n        }\n        if (!features) {\n            throw new Error('The modify interaction requires features, a source or a layer');\n        }\n        if (options.hitDetection) {\n            _this.hitDetection_ = options.hitDetection;\n        }\n        /**\n         * @type {Collection<import(\"../Feature.js\").FeatureLike>}\n         * @private\n         */\n        _this.features_ = features;\n        _this.features_.forEach(_this.addFeature_.bind(_this));\n        _this.features_.addEventListener(CollectionEventType.ADD, _this.handleFeatureAdd_.bind(_this));\n        _this.features_.addEventListener(CollectionEventType.REMOVE, _this.handleFeatureRemove_.bind(_this));\n        /**\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @private\n         */\n        _this.lastPointerEvent_ = null;\n        /**\n         * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n         * @type {Array<number>}\n         */\n        _this.delta_ = [0, 0];\n        return _this;\n    }\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.addFeature_ = function (feature) {\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var writer = this.SEGMENT_WRITERS_[geometry.getType()];\n            if (writer) {\n                writer(feature, geometry);\n            }\n        }\n        var map = this.getMap();\n        if (map && map.isRendered() && this.getActive()) {\n            this.handlePointerAtPixel_(this.lastPixel_, map);\n        }\n        feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n     * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n     * @private\n     */\n    Modify.prototype.willModifyFeatures_ = function (evt, segments) {\n        if (!this.featuresBeingModified_) {\n            this.featuresBeingModified_ = new Collection();\n            var features = this.featuresBeingModified_.getArray();\n            for (var i = 0, ii = segments.length; i < ii; ++i) {\n                var feature = segments[i][0].feature;\n                if (features.indexOf(feature) === -1) {\n                    this.featuresBeingModified_.push(feature);\n                }\n            }\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYSTART, this.featuresBeingModified_, evt));\n        }\n    };\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.removeFeature_ = function (feature) {\n        this.removeFeatureSegmentData_(feature);\n        // Remove the vertex feature if the collection of canditate features is empty.\n        if (this.vertexFeature_ && this.features_.getLength() === 0) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n        feature.removeEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n    };\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.removeFeatureSegmentData_ = function (feature) {\n        var rBush = this.rBush_;\n        /** @type {Array<SegmentData>} */\n        var nodesToRemove = [];\n        rBush.forEach(\n        /**\n         * @param {SegmentData} node RTree node.\n         */\n        function (node) {\n            if (feature === node.feature) {\n                nodesToRemove.push(node);\n            }\n        });\n        for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n            var nodeToRemove = nodesToRemove[i];\n            for (var j = this.dragSegments_.length - 1; j >= 0; --j) {\n                if (this.dragSegments_[j][0] === nodeToRemove) {\n                    this.dragSegments_.splice(j, 1);\n                }\n            }\n            rBush.remove(nodeToRemove);\n        }\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Modify.prototype.setActive = function (active) {\n        if (this.vertexFeature_ && !active) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n        _super.prototype.setActive.call(this, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Modify.prototype.setMap = function (map) {\n        this.overlay_.setMap(map);\n        _super.prototype.setMap.call(this, map);\n    };\n    /**\n     * Get the overlay layer that this interaction renders the modification point or vertex to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Modify.prototype.getOverlay = function () {\n        return this.overlay_;\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    Modify.prototype.handleSourceAdd_ = function (event) {\n        if (event.feature) {\n            this.features_.push(event.feature);\n        }\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    Modify.prototype.handleSourceRemove_ = function (event) {\n        if (event.feature) {\n            this.features_.remove(event.feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureAdd_ = function (evt) {\n        this.addFeature_(/** @type {Feature} */ (evt.element));\n    };\n    /**\n     * @param {import(\"../events/Event.js\").default} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureChange_ = function (evt) {\n        if (!this.changingFeature_) {\n            var feature = /** @type {Feature} */ (evt.target);\n            this.removeFeature_(feature);\n            this.addFeature_(feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureRemove_ = function (evt) {\n        var feature = /** @type {Feature} */ (evt.element);\n        this.removeFeature_(feature);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {Point} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writePointGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        /** @type {SegmentData} */\n        var segmentData = {\n            feature: feature,\n            geometry: geometry,\n            segment: [coordinates, coordinates],\n        };\n        this.rBush_.insert(geometry.getExtent(), segmentData);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\n        var points = geometry.getCoordinates();\n        for (var i = 0, ii = points.length; i < ii; ++i) {\n            var coordinates = points[i];\n            /** @type {SegmentData} */\n            var segmentData = {\n                feature: feature,\n                geometry: geometry,\n                depth: [i],\n                index: i,\n                segment: [coordinates, coordinates],\n            };\n            this.rBush_.insert(geometry.getExtent(), segmentData);\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeLineStringGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            /** @type {SegmentData} */\n            var segmentData = {\n                feature: feature,\n                geometry: geometry,\n                index: i,\n                segment: segment,\n            };\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\n        var lines = geometry.getCoordinates();\n        for (var j = 0, jj = lines.length; j < jj; ++j) {\n            var coordinates = lines[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                /** @type {SegmentData} */\n                var segmentData = {\n                    feature: feature,\n                    geometry: geometry,\n                    depth: [j],\n                    index: i,\n                    segment: segment,\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writePolygonGeometry_ = function (feature, geometry) {\n        var rings = geometry.getCoordinates();\n        for (var j = 0, jj = rings.length; j < jj; ++j) {\n            var coordinates = rings[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                /** @type {SegmentData} */\n                var segmentData = {\n                    feature: feature,\n                    geometry: geometry,\n                    depth: [j],\n                    index: i,\n                    segment: segment,\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\n        var polygons = geometry.getCoordinates();\n        for (var k = 0, kk = polygons.length; k < kk; ++k) {\n            var rings = polygons[k];\n            for (var j = 0, jj = rings.length; j < jj; ++j) {\n                var coordinates = rings[j];\n                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                    var segment = coordinates.slice(i, i + 2);\n                    /** @type {SegmentData} */\n                    var segmentData = {\n                        feature: feature,\n                        geometry: geometry,\n                        depth: [j, k],\n                        index: i,\n                        segment: segment,\n                    };\n                    this.rBush_.insert(boundingExtent(segment), segmentData);\n                }\n            }\n        }\n    };\n    /**\n     * We convert a circle into two segments.  The segment at index\n     * {@link CIRCLE_CENTER_INDEX} is the\n     * circle's center (a point).  The segment at index\n     * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n     * the circumference, and is not a line segment.\n     *\n     * @param {Feature} feature Feature.\n     * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeCircleGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCenter();\n        /** @type {SegmentData} */\n        var centerSegmentData = {\n            feature: feature,\n            geometry: geometry,\n            index: CIRCLE_CENTER_INDEX,\n            segment: [coordinates, coordinates],\n        };\n        /** @type {SegmentData} */\n        var circumferenceSegmentData = {\n            feature: feature,\n            geometry: geometry,\n            index: CIRCLE_CIRCUMFERENCE_INDEX,\n            segment: [coordinates, coordinates],\n        };\n        var featureSegments = [centerSegmentData, circumferenceSegmentData];\n        centerSegmentData.featureSegments = featureSegments;\n        circumferenceSegmentData.featureSegments = featureSegments;\n        this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n        var circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n        var userProjection = getUserProjection();\n        if (userProjection && this.getMap()) {\n            var projection = this.getMap().getView().getProjection();\n            circleGeometry = circleGeometry\n                .clone()\n                .transform(userProjection, projection);\n            circleGeometry = fromCircle(\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)).transform(projection, userProjection);\n        }\n        this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0; i < geometries.length; ++i) {\n            var geometry_1 = geometries[i];\n            var writer = this.SEGMENT_WRITERS_[geometry_1.getType()];\n            writer(feature, geometry_1);\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {Array<Feature>} features The features being modified.\n     * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n     * @return {Feature} Vertex feature.\n     * @private\n     */\n    Modify.prototype.createOrUpdateVertexFeature_ = function (coordinates, features, geometries) {\n        var vertexFeature = this.vertexFeature_;\n        if (!vertexFeature) {\n            vertexFeature = new Feature(new Point(coordinates));\n            this.vertexFeature_ = vertexFeature;\n            this.overlay_.getSource().addFeature(vertexFeature);\n        }\n        else {\n            var geometry = vertexFeature.getGeometry();\n            geometry.setCoordinates(coordinates);\n        }\n        vertexFeature.set('features', features);\n        vertexFeature.set('geometries', geometries);\n        return vertexFeature;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    Modify.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent) {\n            return true;\n        }\n        this.lastPointerEvent_ = mapBrowserEvent;\n        var handled;\n        if (!mapBrowserEvent.map.getView().getInteracting() &&\n            mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n            !this.handlingDownUpSequence) {\n            this.handlePointerMove_(mapBrowserEvent);\n        }\n        if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n            if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n                !this.ignoreNextSingleClick_) {\n                handled = this.removePoint();\n            }\n            else {\n                handled = true;\n            }\n        }\n        if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n            this.ignoreNextSingleClick_ = false;\n        }\n        return _super.prototype.handleEvent.call(this, mapBrowserEvent) && !handled;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n     */\n    Modify.prototype.handleDragEvent = function (evt) {\n        this.ignoreNextSingleClick_ = false;\n        this.willModifyFeatures_(evt, this.dragSegments_);\n        var vertex = [\n            evt.coordinate[0] + this.delta_[0],\n            evt.coordinate[1] + this.delta_[1],\n        ];\n        var features = [];\n        var geometries = [];\n        for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n            var dragSegment = this.dragSegments_[i];\n            var segmentData = dragSegment[0];\n            var feature = segmentData.feature;\n            if (features.indexOf(feature) === -1) {\n                features.push(feature);\n            }\n            var geometry = segmentData.geometry;\n            if (geometries.indexOf(geometry) === -1) {\n                geometries.push(geometry);\n            }\n            var depth = segmentData.depth;\n            var coordinates = void 0;\n            var segment = segmentData.segment;\n            var index = dragSegment[1];\n            while (vertex.length < geometry.getStride()) {\n                vertex.push(segment[index][vertex.length]);\n            }\n            switch (geometry.getType()) {\n                case GeometryType.POINT:\n                    coordinates = vertex;\n                    segment[0] = vertex;\n                    segment[1] = vertex;\n                    break;\n                case GeometryType.MULTI_POINT:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[segmentData.index] = vertex;\n                    segment[0] = vertex;\n                    segment[1] = vertex;\n                    break;\n                case GeometryType.LINE_STRING:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.POLYGON:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.CIRCLE:\n                    segment[0] = vertex;\n                    segment[1] = vertex;\n                    if (segmentData.index === CIRCLE_CENTER_INDEX) {\n                        this.changingFeature_ = true;\n                        geometry.setCenter(vertex);\n                        this.changingFeature_ = false;\n                    }\n                    else {\n                        // We're dragging the circle's circumference:\n                        this.changingFeature_ = true;\n                        var projection = evt.map.getView().getProjection();\n                        var radius = coordinateDistance(fromUserCoordinate(geometry.getCenter(), projection), fromUserCoordinate(vertex, projection));\n                        var userProjection = getUserProjection();\n                        if (userProjection) {\n                            var circleGeometry = geometry\n                                .clone()\n                                .transform(userProjection, projection);\n                            circleGeometry.setRadius(radius);\n                            radius = circleGeometry\n                                .transform(projection, userProjection)\n                                .getRadius();\n                        }\n                        geometry.setRadius(radius);\n                        this.changingFeature_ = false;\n                    }\n                    break;\n                default:\n                // pass\n            }\n            if (coordinates) {\n                this.setGeometryCoordinates_(geometry, coordinates);\n            }\n        }\n        this.createOrUpdateVertexFeature_(vertex, features, geometries);\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Modify.prototype.handleDownEvent = function (evt) {\n        if (!this.condition_(evt)) {\n            return false;\n        }\n        var pixelCoordinate = evt.coordinate;\n        this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n        this.dragSegments_.length = 0;\n        this.featuresBeingModified_ = null;\n        var vertexFeature = this.vertexFeature_;\n        if (vertexFeature) {\n            var projection = evt.map.getView().getProjection();\n            var insertVertices = [];\n            var vertex = vertexFeature.getGeometry().getCoordinates();\n            var vertexExtent = boundingExtent([vertex]);\n            var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n            var componentSegments = {};\n            segmentDataMatches.sort(compareIndexes);\n            for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n                var segmentDataMatch = segmentDataMatches[i];\n                var segment = segmentDataMatch.segment;\n                var uid = getUid(segmentDataMatch.geometry);\n                var depth = segmentDataMatch.depth;\n                if (depth) {\n                    uid += '-' + depth.join('-'); // separate feature components\n                }\n                if (!componentSegments[uid]) {\n                    componentSegments[uid] = new Array(2);\n                }\n                if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n                    segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n                    var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch, projection);\n                    if (coordinatesEqual(closestVertex, vertex) &&\n                        !componentSegments[uid][0]) {\n                        this.dragSegments_.push([segmentDataMatch, 0]);\n                        componentSegments[uid][0] = segmentDataMatch;\n                    }\n                    continue;\n                }\n                if (coordinatesEqual(segment[0], vertex) &&\n                    !componentSegments[uid][0]) {\n                    this.dragSegments_.push([segmentDataMatch, 0]);\n                    componentSegments[uid][0] = segmentDataMatch;\n                    continue;\n                }\n                if (coordinatesEqual(segment[1], vertex) &&\n                    !componentSegments[uid][1]) {\n                    // prevent dragging closed linestrings by the connecting node\n                    if ((segmentDataMatch.geometry.getType() === GeometryType.LINE_STRING ||\n                        segmentDataMatch.geometry.getType() ===\n                            GeometryType.MULTI_LINE_STRING) &&\n                        componentSegments[uid][0] &&\n                        componentSegments[uid][0].index === 0) {\n                        continue;\n                    }\n                    this.dragSegments_.push([segmentDataMatch, 1]);\n                    componentSegments[uid][1] = segmentDataMatch;\n                    continue;\n                }\n                if (getUid(segment) in this.vertexSegments_ &&\n                    !componentSegments[uid][0] &&\n                    !componentSegments[uid][1] &&\n                    this.insertVertexCondition_(evt)) {\n                    insertVertices.push(segmentDataMatch);\n                }\n            }\n            if (insertVertices.length) {\n                this.willModifyFeatures_(evt, [insertVertices]);\n            }\n            for (var j = insertVertices.length - 1; j >= 0; --j) {\n                this.insertVertex_(insertVertices[j], vertex);\n            }\n        }\n        return !!this.vertexFeature_;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Modify.prototype.handleUpEvent = function (evt) {\n        for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n            var segmentData = this.dragSegments_[i][0];\n            var geometry = segmentData.geometry;\n            if (geometry.getType() === GeometryType.CIRCLE) {\n                // Update a circle object in the R* bush:\n                var coordinates = geometry.getCenter();\n                var centerSegmentData = segmentData.featureSegments[0];\n                var circumferenceSegmentData = segmentData.featureSegments[1];\n                centerSegmentData.segment[0] = coordinates;\n                centerSegmentData.segment[1] = coordinates;\n                circumferenceSegmentData.segment[0] = coordinates;\n                circumferenceSegmentData.segment[1] = coordinates;\n                this.rBush_.update(createExtent(coordinates), centerSegmentData);\n                var circleGeometry = geometry;\n                var userProjection = getUserProjection();\n                if (userProjection) {\n                    var projection = evt.map.getView().getProjection();\n                    circleGeometry = circleGeometry\n                        .clone()\n                        .transform(userProjection, projection);\n                    circleGeometry = fromCircle(circleGeometry).transform(projection, userProjection);\n                }\n                this.rBush_.update(circleGeometry.getExtent(), circumferenceSegmentData);\n            }\n            else {\n                this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n            }\n        }\n        if (this.featuresBeingModified_) {\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.featuresBeingModified_, evt));\n            this.featuresBeingModified_ = null;\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n     * @private\n     */\n    Modify.prototype.handlePointerMove_ = function (evt) {\n        this.lastPixel_ = evt.pixel;\n        this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_coordinate The pixel Coordinate.\n     * @private\n     */\n    Modify.prototype.handlePointerAtPixel_ = function (pixel, map, opt_coordinate) {\n        var _this = this;\n        var pixelCoordinate = opt_coordinate || map.getCoordinateFromPixel(pixel);\n        var projection = map.getView().getProjection();\n        var sortByDistance = function (a, b) {\n            return (projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n                projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection));\n        };\n        var nodes, hitPointGeometry;\n        if (this.hitDetection_) {\n            var layerFilter = typeof this.hitDetection_ === 'object'\n                ? function (layer) { return layer === _this.hitDetection_; }\n                : undefined;\n            map.forEachFeatureAtPixel(pixel, function (feature, layer, geometry) {\n                geometry = geometry || feature.getGeometry();\n                if (geometry.getType() === GeometryType.POINT) {\n                    hitPointGeometry = geometry;\n                    var coordinate = geometry.getCoordinates();\n                    nodes = [\n                        {\n                            feature: feature,\n                            geometry: geometry,\n                            segment: [coordinate, coordinate],\n                        },\n                    ];\n                }\n                return true;\n            }, { layerFilter: layerFilter });\n        }\n        if (!nodes) {\n            var viewExtent = fromUserExtent(createExtent(pixelCoordinate, tempExtent), projection);\n            var buffer = map.getView().getResolution() * this.pixelTolerance_;\n            var box = toUserExtent(bufferExtent(viewExtent, buffer, tempExtent), projection);\n            nodes = this.rBush_.getInExtent(box);\n        }\n        if (nodes && nodes.length > 0) {\n            var node = nodes.sort(sortByDistance)[0];\n            var closestSegment = node.segment;\n            var vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n            var vertexPixel = map.getPixelFromCoordinate(vertex);\n            var dist = coordinateDistance(pixel, vertexPixel);\n            if (hitPointGeometry || dist <= this.pixelTolerance_) {\n                /** @type {Object<string, boolean>} */\n                var vertexSegments = {};\n                vertexSegments[getUid(closestSegment)] = true;\n                this.delta_[0] = vertex[0] - pixelCoordinate[0];\n                this.delta_[1] = vertex[1] - pixelCoordinate[1];\n                if (node.geometry.getType() === GeometryType.CIRCLE &&\n                    node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n                    this.snappedToVertex_ = true;\n                    this.createOrUpdateVertexFeature_(vertex, [node.feature], [node.geometry]);\n                }\n                else {\n                    var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                    var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                    var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                    var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                    dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                    this.snappedToVertex_ = dist <= this.pixelTolerance_;\n                    if (this.snappedToVertex_) {\n                        vertex =\n                            squaredDist1 > squaredDist2\n                                ? closestSegment[1]\n                                : closestSegment[0];\n                    }\n                    this.createOrUpdateVertexFeature_(vertex, [node.feature], [node.geometry]);\n                    var geometries = {};\n                    geometries[getUid(node.geometry)] = true;\n                    for (var i = 1, ii = nodes.length; i < ii; ++i) {\n                        var segment = nodes[i].segment;\n                        if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                            coordinatesEqual(closestSegment[1], segment[1])) ||\n                            (coordinatesEqual(closestSegment[0], segment[1]) &&\n                                coordinatesEqual(closestSegment[1], segment[0]))) {\n                            var geometryUid = getUid(nodes[i].geometry);\n                            if (!(geometryUid in geometries)) {\n                                geometries[geometryUid] = true;\n                                vertexSegments[getUid(segment)] = true;\n                            }\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n                this.vertexSegments_ = vertexSegments;\n                return;\n            }\n        }\n        if (this.vertexFeature_) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n    };\n    /**\n     * @param {SegmentData} segmentData Segment data.\n     * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n     * @private\n     */\n    Modify.prototype.insertVertex_ = function (segmentData, vertex) {\n        var segment = segmentData.segment;\n        var feature = segmentData.feature;\n        var geometry = segmentData.geometry;\n        var depth = segmentData.depth;\n        var index = segmentData.index;\n        var coordinates;\n        while (vertex.length < geometry.getStride()) {\n            vertex.push(0);\n        }\n        switch (geometry.getType()) {\n            case GeometryType.MULTI_LINE_STRING:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.POLYGON:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.MULTI_POLYGON:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.LINE_STRING:\n                coordinates = geometry.getCoordinates();\n                coordinates.splice(index + 1, 0, vertex);\n                break;\n            default:\n                return;\n        }\n        this.setGeometryCoordinates_(geometry, coordinates);\n        var rTree = this.rBush_;\n        rTree.remove(segmentData);\n        this.updateSegmentIndices_(geometry, index, depth, 1);\n        /** @type {SegmentData} */\n        var newSegmentData = {\n            segment: [segment[0], vertex],\n            feature: feature,\n            geometry: geometry,\n            depth: depth,\n            index: index,\n        };\n        rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n        this.dragSegments_.push([newSegmentData, 1]);\n        /** @type {SegmentData} */\n        var newSegmentData2 = {\n            segment: [vertex, segment[1]],\n            feature: feature,\n            geometry: geometry,\n            depth: depth,\n            index: index + 1,\n        };\n        rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n        this.dragSegments_.push([newSegmentData2, 0]);\n        this.ignoreNextSingleClick_ = true;\n    };\n    /**\n     * Removes the vertex currently being pointed.\n     * @return {boolean} True when a vertex was removed.\n     * @api\n     */\n    Modify.prototype.removePoint = function () {\n        if (this.lastPointerEvent_ &&\n            this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n            var evt = this.lastPointerEvent_;\n            this.willModifyFeatures_(evt, this.dragSegments_);\n            var removed = this.removeVertex_();\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.featuresBeingModified_, evt));\n            this.featuresBeingModified_ = null;\n            return removed;\n        }\n        return false;\n    };\n    /**\n     * Removes a vertex from all matching features.\n     * @return {boolean} True when a vertex was removed.\n     * @private\n     */\n    Modify.prototype.removeVertex_ = function () {\n        var dragSegments = this.dragSegments_;\n        var segmentsByFeature = {};\n        var deleted = false;\n        var component, coordinates, dragSegment, geometry, i, index, left;\n        var newIndex, right, segmentData, uid;\n        for (i = dragSegments.length - 1; i >= 0; --i) {\n            dragSegment = dragSegments[i];\n            segmentData = dragSegment[0];\n            uid = getUid(segmentData.feature);\n            if (segmentData.depth) {\n                // separate feature components\n                uid += '-' + segmentData.depth.join('-');\n            }\n            if (!(uid in segmentsByFeature)) {\n                segmentsByFeature[uid] = {};\n            }\n            if (dragSegment[1] === 0) {\n                segmentsByFeature[uid].right = segmentData;\n                segmentsByFeature[uid].index = segmentData.index;\n            }\n            else if (dragSegment[1] == 1) {\n                segmentsByFeature[uid].left = segmentData;\n                segmentsByFeature[uid].index = segmentData.index + 1;\n            }\n        }\n        for (uid in segmentsByFeature) {\n            right = segmentsByFeature[uid].right;\n            left = segmentsByFeature[uid].left;\n            index = segmentsByFeature[uid].index;\n            newIndex = index - 1;\n            if (left !== undefined) {\n                segmentData = left;\n            }\n            else {\n                segmentData = right;\n            }\n            if (newIndex < 0) {\n                newIndex = 0;\n            }\n            geometry = segmentData.geometry;\n            coordinates = geometry.getCoordinates();\n            component = coordinates;\n            deleted = false;\n            switch (geometry.getType()) {\n                case GeometryType.MULTI_LINE_STRING:\n                    if (coordinates[segmentData.depth[0]].length > 2) {\n                        coordinates[segmentData.depth[0]].splice(index, 1);\n                        deleted = true;\n                    }\n                    break;\n                case GeometryType.LINE_STRING:\n                    if (coordinates.length > 2) {\n                        coordinates.splice(index, 1);\n                        deleted = true;\n                    }\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    component = component[segmentData.depth[1]];\n                /* falls through */\n                case GeometryType.POLYGON:\n                    component = component[segmentData.depth[0]];\n                    if (component.length > 4) {\n                        if (index == component.length - 1) {\n                            index = 0;\n                        }\n                        component.splice(index, 1);\n                        deleted = true;\n                        if (index === 0) {\n                            // close the ring again\n                            component.pop();\n                            component.push(component[0]);\n                            newIndex = component.length - 1;\n                        }\n                    }\n                    break;\n                default:\n                // pass\n            }\n            if (deleted) {\n                this.setGeometryCoordinates_(geometry, coordinates);\n                var segments = [];\n                if (left !== undefined) {\n                    this.rBush_.remove(left);\n                    segments.push(left.segment[0]);\n                }\n                if (right !== undefined) {\n                    this.rBush_.remove(right);\n                    segments.push(right.segment[1]);\n                }\n                if (left !== undefined && right !== undefined) {\n                    /** @type {SegmentData} */\n                    var newSegmentData = {\n                        depth: segmentData.depth,\n                        feature: segmentData.feature,\n                        geometry: segmentData.geometry,\n                        index: newIndex,\n                        segment: segments,\n                    };\n                    this.rBush_.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n                }\n                this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n                if (this.vertexFeature_) {\n                    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n                    this.vertexFeature_ = null;\n                }\n                dragSegments.length = 0;\n            }\n        }\n        return deleted;\n    };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {Array} coordinates Coordinates.\n     * @private\n     */\n    Modify.prototype.setGeometryCoordinates_ = function (geometry, coordinates) {\n        this.changingFeature_ = true;\n        geometry.setCoordinates(coordinates);\n        this.changingFeature_ = false;\n    };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} index Index.\n     * @param {Array<number>|undefined} depth Depth.\n     * @param {number} delta Delta (1 or -1).\n     * @private\n     */\n    Modify.prototype.updateSegmentIndices_ = function (geometry, index, depth, delta) {\n        this.rBush_.forEachInExtent(geometry.getExtent(), function (segmentDataMatch) {\n            if (segmentDataMatch.geometry === geometry &&\n                (depth === undefined ||\n                    segmentDataMatch.depth === undefined ||\n                    equals(segmentDataMatch.depth, depth)) &&\n                segmentDataMatch.index > index) {\n                segmentDataMatch.index += delta;\n            }\n        });\n    };\n    return Modify;\n}(PointerInteraction));\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n    return a.index - b.index;\n}\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(pointCoordinates, segmentData, projection) {\n    var geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n        var circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n        if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n                    .clone()\n                    .transform(userProjection, projection));\n            }\n            var distanceToCenterSquared = squaredCoordinateDistance(circleGeometry.getCenter(), fromUserCoordinate(pointCoordinates, projection));\n            var distanceToCircumference = Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n            return distanceToCircumference * distanceToCircumference;\n        }\n    }\n    var coordinate = fromUserCoordinate(pointCoordinates, projection);\n    tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n    tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n    return squaredDistanceToSegment(coordinate, tempSegment);\n}\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n    var geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE &&\n        segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n        var circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n                .clone()\n                .transform(userProjection, projection));\n        }\n        return toUserCoordinate(circleGeometry.getClosestPoint(fromUserCoordinate(pointCoordinates, projection)), projection);\n    }\n    var coordinate = fromUserCoordinate(pointCoordinates, projection);\n    tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n    tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n    return toUserCoordinate(closestOnSegment(coordinate, tempSegment), projection);\n}\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POINT];\n    };\n}\nexport default Modify;\n//# sourceMappingURL=Modify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport { TRUE } from '../functions.js';\nimport { clear } from '../obj.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { extend, includes } from '../array.js';\nimport { getUid } from '../util.js';\nimport { never, shiftKeyOnly, singleClick } from '../events/condition.js';\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n    /**\n     * Triggered when feature(s) has been (de)selected.\n     * @event SelectEvent#select\n     * @api\n     */\n    SELECT: 'select',\n};\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = /** @class */ (function (_super) {\n    __extends(SelectEvent, _super);\n    /**\n     * @param {SelectEventType} type The event type.\n     * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n     * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n     *     {@link module:ol/MapBrowserEvent}.\n     */\n    function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Selected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.selected = selected;\n        /**\n         * Deselected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.deselected = deselected;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return SelectEvent;\n}(Event));\nexport { SelectEvent };\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object.<number, import(\"../style/Style.js\").default|Array.<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nvar originalFeatureStyles = {};\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = /** @class */ (function (_super) {\n    __extends(Select, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Select(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         */\n        _this.boundAddFeature_ = _this.addFeature_.bind(_this);\n        /**\n         * @private\n         */\n        _this.boundRemoveFeature_ = _this.removeFeature_.bind(_this);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : singleClick;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.addCondition_ = options.addCondition ? options.addCondition : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.removeCondition_ = options.removeCondition\n            ? options.removeCondition\n            : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.toggleCondition_ = options.toggleCondition\n            ? options.toggleCondition\n            : shiftKeyOnly;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multi_ = options.multi ? options.multi : false;\n        /**\n         * @private\n         * @type {FilterFunction}\n         */\n        _this.filter_ = options.filter ? options.filter : TRUE;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n        /**\n         * @private\n         * @type {import(\"../style/Style.js\").default|Array.<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n         */\n        _this.style_ =\n            options.style !== undefined ? options.style : getDefaultStyleFunction();\n        /**\n         * @private\n         * @type {import(\"../Collection.js\").default}\n         */\n        _this.features_ = options.features || new Collection();\n        /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n        var layerFilter;\n        if (options.layers) {\n            if (typeof options.layers === 'function') {\n                layerFilter = options.layers;\n            }\n            else {\n                var layers_1 = options.layers;\n                layerFilter = function (layer) {\n                    return includes(layers_1, layer);\n                };\n            }\n        }\n        else {\n            layerFilter = TRUE;\n        }\n        /**\n         * @private\n         * @type {function(import(\"../layer/Layer.js\").default): boolean}\n         */\n        _this.layerFilter_ = layerFilter;\n        /**\n         * An association between selected feature (key)\n         * and layer (value)\n         * @private\n         * @type {Object<string, import(\"../layer/Layer.js\").default>}\n         */\n        _this.featureLayerAssociation_ = {};\n        return _this;\n    }\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @private\n     */\n    Select.prototype.addFeatureLayerAssociation_ = function (feature, layer) {\n        this.featureLayerAssociation_[getUid(feature)] = layer;\n    };\n    /**\n     * Get the selected features.\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n     * @api\n     */\n    Select.prototype.getFeatures = function () {\n        return this.features_;\n    };\n    /**\n     * Returns the Hit-detection tolerance.\n     * @returns {number} Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.getHitTolerance = function () {\n        return this.hitTolerance_;\n    };\n    /**\n     * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n     * the (last) selected feature. Note that this will not work with any\n     * programmatic method like pushing features to\n     * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n     * @return {import('../layer/Vector.js').default} Layer.\n     * @api\n     */\n    Select.prototype.getLayer = function (feature) {\n        return /** @type {import('../layer/Vector.js').default} */ (this\n            .featureLayerAssociation_[getUid(feature)]);\n    };\n    /**\n     * Hit-detection tolerance. Pixels inside the radius around the given position\n     * will be checked for features.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.setHitTolerance = function (hitTolerance) {\n        this.hitTolerance_ = hitTolerance;\n    };\n    /**\n     * Remove the interaction from its current map, if any,  and attach it to a new\n     * map, if any. Pass `null` to just remove the interaction from the current map.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Select.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        if (currentMap && this.style_) {\n            this.features_.forEach(this.restorePreviousStyle_.bind(this));\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            this.features_.addEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n            this.features_.addEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n            if (this.style_) {\n                this.features_.forEach(this.applySelectedStyle_.bind(this));\n            }\n        }\n        else {\n            this.features_.removeEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n            this.features_.removeEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.addFeature_ = function (evt) {\n        var feature = evt.element;\n        if (this.style_) {\n            this.applySelectedStyle_(feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.removeFeature_ = function (evt) {\n        var feature = evt.element;\n        if (this.style_) {\n            this.restorePreviousStyle_(feature);\n        }\n    };\n    /**\n     * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n     */\n    Select.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Select.prototype.applySelectedStyle_ = function (feature) {\n        var key = getUid(feature);\n        if (!(key in originalFeatureStyles)) {\n            originalFeatureStyles[key] = feature.getStyle();\n        }\n        feature.setStyle(this.style_);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Select.prototype.restorePreviousStyle_ = function (feature) {\n        var interactions = this.getMap().getInteractions().getArray();\n        for (var i = interactions.length - 1; i >= 0; --i) {\n            var interaction = interactions[i];\n            if (interaction !== this &&\n                interaction instanceof Select &&\n                interaction.getStyle() &&\n                interaction.getFeatures().getArray().lastIndexOf(feature) !== -1) {\n                feature.setStyle(interaction.getStyle());\n                return;\n            }\n        }\n        var key = getUid(feature);\n        feature.setStyle(originalFeatureStyles[key]);\n        delete originalFeatureStyles[key];\n    };\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @private\n     */\n    Select.prototype.removeFeatureLayerAssociation_ = function (feature) {\n        delete this.featureLayerAssociation_[getUid(feature)];\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n     * selected state of features.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {Select}\n     */\n    Select.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var add = this.addCondition_(mapBrowserEvent);\n        var remove = this.removeCondition_(mapBrowserEvent);\n        var toggle = this.toggleCondition_(mapBrowserEvent);\n        var set = !add && !remove && !toggle;\n        var map = mapBrowserEvent.map;\n        var features = this.getFeatures();\n        var deselected = [];\n        var selected = [];\n        if (set) {\n            // Replace the currently selected feature(s) with the feature(s) at the\n            // pixel, or clear the selected feature(s) if there is no feature at\n            // the pixel.\n            clear(this.featureLayerAssociation_);\n            map.forEachFeatureAtPixel(mapBrowserEvent.pixel, \n            /**\n             * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n             * @param {import(\"../layer/Layer.js\").default} layer Layer.\n             * @return {boolean|undefined} Continue to iterate over the features.\n             */\n            function (feature, layer) {\n                if (this.filter_(feature, layer)) {\n                    selected.push(feature);\n                    this.addFeatureLayerAssociation_(feature, layer);\n                    return !this.multi_;\n                }\n            }.bind(this), {\n                layerFilter: this.layerFilter_,\n                hitTolerance: this.hitTolerance_,\n            });\n            for (var i = features.getLength() - 1; i >= 0; --i) {\n                var feature = features.item(i);\n                var index = selected.indexOf(feature);\n                if (index > -1) {\n                    // feature is already selected\n                    selected.splice(index, 1);\n                }\n                else {\n                    features.remove(feature);\n                    deselected.push(feature);\n                }\n            }\n            if (selected.length !== 0) {\n                features.extend(selected);\n            }\n        }\n        else {\n            // Modify the currently selected feature(s).\n            map.forEachFeatureAtPixel(mapBrowserEvent.pixel, \n            /**\n             * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n             * @param {import(\"../layer/Layer.js\").default} layer Layer.\n             * @return {boolean|undefined} Continue to iterate over the features.\n             */\n            function (feature, layer) {\n                if (this.filter_(feature, layer)) {\n                    if ((add || toggle) && !includes(features.getArray(), feature)) {\n                        selected.push(feature);\n                        this.addFeatureLayerAssociation_(feature, layer);\n                    }\n                    else if ((remove || toggle) &&\n                        includes(features.getArray(), feature)) {\n                        deselected.push(feature);\n                        this.removeFeatureLayerAssociation_(feature);\n                    }\n                    return !this.multi_;\n                }\n            }.bind(this), {\n                layerFilter: this.layerFilter_,\n                hitTolerance: this.hitTolerance_,\n            });\n            for (var j = deselected.length - 1; j >= 0; --j) {\n                features.remove(deselected[j]);\n            }\n            features.extend(selected);\n        }\n        if (selected.length > 0 || deselected.length > 0) {\n            this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));\n        }\n        return true;\n    };\n    return Select;\n}(Interaction));\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n    extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n    return function (feature) {\n        if (!feature.getGeometry()) {\n            return null;\n        }\n        return styles[feature.getGeometry().getType()];\n    };\n}\nexport default Select;\n//# sourceMappingURL=Select.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { boundingExtent, createEmpty } from '../extent.js';\nimport { closestOnCircle, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, } from '../coordinate.js';\nimport { fromCircle } from '../geom/Polygon.js';\nimport { fromUserCoordinate, getUserProjection, toUserCoordinate, } from '../proj.js';\nimport { getUid } from '../util.js';\nimport { getValues } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel\n */\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n    if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature) {\n        return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n            .feature;\n    }\n    else if (\n    /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element) {\n        return /** @type {import(\"../Feature.js\").default} */ (\n        /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element);\n    }\n}\nvar tempSegment = [];\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @api\n */\nvar Snap = /** @class */ (function (_super) {\n    __extends(Snap, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Snap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.handleDownEvent) {\n            pointerOptions.handleDownEvent = TRUE;\n        }\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @type {import(\"../source/Vector.js\").default}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.edge_ = options.edge !== undefined ? options.edge : true;\n        /**\n         * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         * @private\n         */\n        _this.featuresListenerKeys_ = [];\n        /**\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\n         * @private\n         */\n        _this.featureChangeListenerKeys_ = {};\n        /**\n         * Extents are preserved so indexed segment can be quickly removed\n         * when its feature geometry changes\n         * @type {Object<string, import(\"../extent.js\").Extent>}\n         * @private\n         */\n        _this.indexedFeaturesExtents_ = {};\n        /**\n         * If a feature geometry changes while a pointer drag|move event occurs, the\n         * feature doesn't get updated right away.  It will be at the next 'pointerup'\n         * event fired.\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.pendingFeatures_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ =\n            options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n        /**\n         * Segment RTree for each layer\n         * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n         * @private\n         */\n        _this.rBush_ = new RBush();\n        /**\n         * @const\n         * @private\n         * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\n         */\n        _this.SEGMENT_WRITERS_ = {\n            'Point': _this.writePointGeometry_.bind(_this),\n            'LineString': _this.writeLineStringGeometry_.bind(_this),\n            'LinearRing': _this.writeLineStringGeometry_.bind(_this),\n            'Polygon': _this.writePolygonGeometry_.bind(_this),\n            'MultiPoint': _this.writeMultiPointGeometry_.bind(_this),\n            'MultiLineString': _this.writeMultiLineStringGeometry_.bind(_this),\n            'MultiPolygon': _this.writeMultiPolygonGeometry_.bind(_this),\n            'GeometryCollection': _this.writeGeometryCollectionGeometry_.bind(_this),\n            'Circle': _this.writeCircleGeometry_.bind(_this),\n        };\n        return _this;\n    }\n    /**\n     * Add a feature to the collection of features that we may snap to.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {boolean=} opt_listen Whether to listen to the feature change or not\n     *     Defaults to `true`.\n     * @api\n     */\n    Snap.prototype.addFeature = function (feature, opt_listen) {\n        var register = opt_listen !== undefined ? opt_listen : true;\n        var feature_uid = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n            if (segmentWriter) {\n                this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n                segmentWriter(feature, geometry);\n            }\n        }\n        if (register) {\n            this.featureChangeListenerKeys_[feature_uid] = listen(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @private\n     */\n    Snap.prototype.forEachFeatureAdd_ = function (feature) {\n        this.addFeature(feature);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @private\n     */\n    Snap.prototype.forEachFeatureRemove_ = function (feature) {\n        this.removeFeature(feature);\n    };\n    /**\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n     * @private\n     */\n    Snap.prototype.getFeatures_ = function () {\n        var features;\n        if (this.features_) {\n            features = this.features_;\n        }\n        else if (this.source_) {\n            features = this.source_.getFeatures();\n        }\n        return features;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    Snap.prototype.handleEvent = function (evt) {\n        var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n        if (result.snapped) {\n            evt.coordinate = result.vertex.slice(0, 2);\n            evt.pixel = result.vertexPixel;\n        }\n        return _super.prototype.handleEvent.call(this, evt);\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureAdd_ = function (evt) {\n        var feature = getFeatureFromEvent(evt);\n        this.addFeature(feature);\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureRemove_ = function (evt) {\n        var feature = getFeatureFromEvent(evt);\n        this.removeFeature(feature);\n    };\n    /**\n     * @param {import(\"../events/Event.js\").default} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureChange_ = function (evt) {\n        var feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n        if (this.handlingDownUpSequence) {\n            var uid = getUid(feature);\n            if (!(uid in this.pendingFeatures_)) {\n                this.pendingFeatures_[uid] = feature;\n            }\n        }\n        else {\n            this.updateFeature_(feature);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Snap.prototype.handleUpEvent = function (evt) {\n        var featuresToUpdate = getValues(this.pendingFeatures_);\n        if (featuresToUpdate.length) {\n            featuresToUpdate.forEach(this.updateFeature_.bind(this));\n            this.pendingFeatures_ = {};\n        }\n        return false;\n    };\n    /**\n     * Remove a feature from the collection of features that we may snap to.\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n     *     or not. Defaults to `true`.\n     * @api\n     */\n    Snap.prototype.removeFeature = function (feature, opt_unlisten) {\n        var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n        var feature_uid = getUid(feature);\n        var extent = this.indexedFeaturesExtents_[feature_uid];\n        if (extent) {\n            var rBush = this.rBush_;\n            var nodesToRemove_1 = [];\n            rBush.forEachInExtent(extent, function (node) {\n                if (feature === node.feature) {\n                    nodesToRemove_1.push(node);\n                }\n            });\n            for (var i = nodesToRemove_1.length - 1; i >= 0; --i) {\n                rBush.remove(nodesToRemove_1[i]);\n            }\n        }\n        if (unregister) {\n            unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n            delete this.featureChangeListenerKeys_[feature_uid];\n        }\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Snap.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        var keys = this.featuresListenerKeys_;\n        var features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n        if (currentMap) {\n            keys.forEach(unlistenByKey);\n            keys.length = 0;\n            features.forEach(this.forEachFeatureRemove_.bind(this));\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            if (this.features_) {\n                keys.push(listen(this.features_, CollectionEventType.ADD, this.handleFeatureAdd_, this), listen(this.features_, CollectionEventType.REMOVE, this.handleFeatureRemove_, this));\n            }\n            else if (this.source_) {\n                keys.push(listen(this.source_, VectorEventType.ADDFEATURE, this.handleFeatureAdd_, this), listen(this.source_, VectorEventType.REMOVEFEATURE, this.handleFeatureRemove_, this));\n            }\n            features.forEach(this.forEachFeatureAdd_.bind(this));\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n     * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @return {Result} Snap result\n     */\n    Snap.prototype.snapTo = function (pixel, pixelCoordinate, map) {\n        var lowerLeft = map.getCoordinateFromPixel([\n            pixel[0] - this.pixelTolerance_,\n            pixel[1] + this.pixelTolerance_,\n        ]);\n        var upperRight = map.getCoordinateFromPixel([\n            pixel[0] + this.pixelTolerance_,\n            pixel[1] - this.pixelTolerance_,\n        ]);\n        var box = boundingExtent([lowerLeft, upperRight]);\n        var segments = this.rBush_.getInExtent(box);\n        // If snapping on vertices only, don't consider circles\n        if (this.vertex_ && !this.edge_) {\n            segments = segments.filter(function (segment) {\n                return segment.feature.getGeometry().getType() !== GeometryType.CIRCLE;\n            });\n        }\n        var snapped = false;\n        var vertex = null;\n        var vertexPixel = null;\n        if (segments.length === 0) {\n            return {\n                snapped: snapped,\n                vertex: vertex,\n                vertexPixel: vertexPixel,\n            };\n        }\n        var projection = map.getView().getProjection();\n        var projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n        var closestSegmentData;\n        var minSquaredDistance = Infinity;\n        for (var i = 0; i < segments.length; ++i) {\n            var segmentData = segments[i];\n            tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n            tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n            var delta = squaredDistanceToSegment(projectedCoordinate, tempSegment);\n            if (delta < minSquaredDistance) {\n                closestSegmentData = segmentData;\n                minSquaredDistance = delta;\n            }\n        }\n        var closestSegment = closestSegmentData.segment;\n        if (this.vertex_ && !this.edge_) {\n            var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n            var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n            var squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n            var squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n            var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n            if (dist <= this.pixelTolerance_) {\n                snapped = true;\n                vertex =\n                    squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                vertexPixel = map.getPixelFromCoordinate(vertex);\n            }\n        }\n        else if (this.edge_) {\n            var isCircle = closestSegmentData.feature.getGeometry().getType() ===\n                GeometryType.CIRCLE;\n            if (isCircle) {\n                var circleGeometry = closestSegmentData.feature.getGeometry();\n                var userProjection = getUserProjection();\n                if (userProjection) {\n                    circleGeometry = circleGeometry\n                        .clone()\n                        .transform(userProjection, projection);\n                }\n                vertex = toUserCoordinate(closestOnCircle(projectedCoordinate, \n                /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)), projection);\n            }\n            else {\n                tempSegment[0] = fromUserCoordinate(closestSegment[0], projection);\n                tempSegment[1] = fromUserCoordinate(closestSegment[1], projection);\n                vertex = toUserCoordinate(closestOnSegment(projectedCoordinate, tempSegment), projection);\n            }\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n            if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n                snapped = true;\n                if (this.vertex_ && !isCircle) {\n                    var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                    var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                    var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                    var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                    var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                    if (dist <= this.pixelTolerance_) {\n                        vertex =\n                            squaredDist1 > squaredDist2\n                                ? closestSegment[1]\n                                : closestSegment[0];\n                        vertexPixel = map.getPixelFromCoordinate(vertex);\n                    }\n                }\n            }\n        }\n        if (snapped) {\n            vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n        }\n        return {\n            snapped: snapped,\n            vertex: vertex,\n            vertexPixel: vertexPixel,\n        };\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Snap.prototype.updateFeature_ = function (feature) {\n        this.removeFeature(feature, false);\n        this.addFeature(feature, false);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeCircleGeometry_ = function (feature, geometry) {\n        var projection = this.getMap().getView().getProjection();\n        var circleGeometry = geometry;\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n                .clone()\n                .transform(userProjection, projection));\n        }\n        var polygon = fromCircle(circleGeometry);\n        if (userProjection) {\n            polygon.transform(projection, userProjection);\n        }\n        var coordinates = polygon.getCoordinates()[0];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = {\n                feature: feature,\n                segment: segment,\n            };\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0; i < geometries.length; ++i) {\n            var segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n            if (segmentWriter) {\n                segmentWriter(feature, geometries[i]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeLineStringGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = {\n                feature: feature,\n                segment: segment,\n            };\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\n        var lines = geometry.getCoordinates();\n        for (var j = 0, jj = lines.length; j < jj; ++j) {\n            var coordinates = lines[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = {\n                    feature: feature,\n                    segment: segment,\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\n        var points = geometry.getCoordinates();\n        for (var i = 0, ii = points.length; i < ii; ++i) {\n            var coordinates = points[i];\n            var segmentData = {\n                feature: feature,\n                segment: [coordinates, coordinates],\n            };\n            this.rBush_.insert(geometry.getExtent(), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\n        var polygons = geometry.getCoordinates();\n        for (var k = 0, kk = polygons.length; k < kk; ++k) {\n            var rings = polygons[k];\n            for (var j = 0, jj = rings.length; j < jj; ++j) {\n                var coordinates = rings[j];\n                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                    var segment = coordinates.slice(i, i + 2);\n                    var segmentData = {\n                        feature: feature,\n                        segment: segment,\n                    };\n                    this.rBush_.insert(boundingExtent(segment), segmentData);\n                }\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writePointGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        var segmentData = {\n            feature: feature,\n            segment: [coordinates, coordinates],\n        };\n        this.rBush_.insert(geometry.getExtent(), segmentData);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writePolygonGeometry_ = function (feature, geometry) {\n        var rings = geometry.getCoordinates();\n        for (var j = 0, jj = rings.length; j < jj; ++j) {\n            var coordinates = rings[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = {\n                    feature: feature,\n                    segment: segment,\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    return Snap;\n}(PointerInteraction));\nexport default Snap;\n//# sourceMappingURL=Snap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Event from '../events/Event.js';\nimport InteractionProperty from './Property.js';\nimport PointerInteraction from './Pointer.js';\nimport { TRUE } from '../functions.js';\nimport { getChangeEventType } from '../Object.js';\nimport { includes } from '../array.js';\n/**\n * @enum {string}\n */\nvar TranslateEventType = {\n    /**\n     * Triggered upon feature translation start.\n     * @event TranslateEvent#translatestart\n     * @api\n     */\n    TRANSLATESTART: 'translatestart',\n    /**\n     * Triggered upon feature translation.\n     * @event TranslateEvent#translating\n     * @api\n     */\n    TRANSLATING: 'translating',\n    /**\n     * Triggered upon feature translation end.\n     * @event TranslateEvent#translateend\n     * @api\n     */\n    TRANSLATEEND: 'translateend',\n};\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nvar TranslateEvent = /** @class */ (function (_super) {\n    __extends(TranslateEvent, _super);\n    /**\n     * @param {TranslateEventType} type Type.\n     * @param {Collection<import(\"../Feature.js\").default>} features The features translated.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     */\n    function TranslateEvent(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features being translated.\n         * @type {Collection<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.features = features;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * The coordinate of the start position before translation started.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.startCoordinate = startCoordinate;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return TranslateEvent;\n}(Event));\nexport { TranslateEvent };\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\nvar Translate = /** @class */ (function (_super) {\n    __extends(Translate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Translate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * The last position we translated to.\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.lastCoordinate_ = null;\n        /**\n         * The start position before translation started.\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.startCoordinate_ = null;\n        /**\n         * @type {Collection<import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.features_ = options.features !== undefined ? options.features : null;\n        /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n        var layerFilter;\n        if (options.layers) {\n            if (typeof options.layers === 'function') {\n                layerFilter = options.layers;\n            }\n            else {\n                var layers_1 = options.layers;\n                layerFilter = function (layer) {\n                    return includes(layers_1, layer);\n                };\n            }\n        }\n        else {\n            layerFilter = TRUE;\n        }\n        /**\n         * @private\n         * @type {function(import(\"../layer/Layer.js\").default): boolean}\n         */\n        _this.layerFilter_ = layerFilter;\n        /**\n         * @private\n         * @type {FilterFunction}\n         */\n        _this.filter_ = options.filter ? options.filter : TRUE;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n        /**\n         * @type {import(\"../Feature.js\").default}\n         * @private\n         */\n        _this.lastFeature_ = null;\n        _this.addEventListener(getChangeEventType(InteractionProperty.ACTIVE), _this.handleActiveChanged_);\n        return _this;\n    }\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Translate.prototype.handleDownEvent = function (event) {\n        this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n        if (!this.lastCoordinate_ && this.lastFeature_) {\n            this.startCoordinate_ = event.coordinate;\n            this.lastCoordinate_ = event.coordinate;\n            this.handleMoveEvent(event);\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATESTART, features, event.coordinate, this.startCoordinate_, event));\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Translate.prototype.handleUpEvent = function (event) {\n        if (this.lastCoordinate_) {\n            this.lastCoordinate_ = null;\n            this.handleMoveEvent(event);\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATEEND, features, event.coordinate, this.startCoordinate_, event));\n            // cleanup\n            this.startCoordinate_ = null;\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    Translate.prototype.handleDragEvent = function (event) {\n        if (this.lastCoordinate_) {\n            var newCoordinate = event.coordinate;\n            var deltaX_1 = newCoordinate[0] - this.lastCoordinate_[0];\n            var deltaY_1 = newCoordinate[1] - this.lastCoordinate_[1];\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            features.forEach(function (feature) {\n                var geom = feature.getGeometry();\n                geom.translate(deltaX_1, deltaY_1);\n                feature.setGeometry(geom);\n            });\n            this.lastCoordinate_ = newCoordinate;\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATING, features, newCoordinate, this.startCoordinate_, event));\n        }\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    Translate.prototype.handleMoveEvent = function (event) {\n        var elem = event.map.getViewport();\n        // Change the cursor to grab/grabbing if hovering any of the features managed\n        // by the interaction\n        if (this.featuresAtPixel_(event.pixel, event.map)) {\n            elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n            elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n        }\n        else {\n            elem.classList.remove('ol-grab', 'ol-grabbing');\n        }\n    };\n    /**\n     * Tests to see if the given coordinates intersects any of our selected\n     * features.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n     * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n     * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n     * coordinates.\n     * @private\n     */\n    Translate.prototype.featuresAtPixel_ = function (pixel, map) {\n        return map.forEachFeatureAtPixel(pixel, function (feature, layer) {\n            if (this.filter_(feature, layer)) {\n                if (!this.features_ || includes(this.features_.getArray(), feature)) {\n                    return feature;\n                }\n            }\n        }.bind(this), {\n            layerFilter: this.layerFilter_,\n            hitTolerance: this.hitTolerance_,\n        });\n    };\n    /**\n     * Returns the Hit-detection tolerance.\n     * @returns {number} Hit tolerance in pixels.\n     * @api\n     */\n    Translate.prototype.getHitTolerance = function () {\n        return this.hitTolerance_;\n    };\n    /**\n     * Hit-detection tolerance. Pixels inside the radius around the given position\n     * will be checked for features.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @api\n     */\n    Translate.prototype.setHitTolerance = function (hitTolerance) {\n        this.hitTolerance_ = hitTolerance;\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Translate.prototype.setMap = function (map) {\n        var oldMap = this.getMap();\n        _super.prototype.setMap.call(this, map);\n        this.updateState_(oldMap);\n    };\n    /**\n     * @private\n     */\n    Translate.prototype.handleActiveChanged_ = function () {\n        this.updateState_(null);\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n     * @private\n     */\n    Translate.prototype.updateState_ = function (oldMap) {\n        var map = this.getMap();\n        var active = this.getActive();\n        if (!map || !active) {\n            map = map || oldMap;\n            if (map) {\n                var elem = map.getViewport();\n                elem.classList.remove('ol-grab', 'ol-grabbing');\n            }\n        }\n    };\n    return Translate;\n}(PointerInteraction));\nexport default Translate;\n//# sourceMappingURL=Translate.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined\n        ? options.altShiftDragRotate\n        : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            onFocusOnly: options.onFocusOnly,\n            kinetic: kinetic,\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate : true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            onFocusOnly: options.onFocusOnly,\n            duration: options.zoomDuration,\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport { assign } from './obj.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions({\n                onFocusOnly: true,\n            });\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ? options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */ (function () {\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        /**\n         * Desired max cache size after expireCache(). If set to 0, no cache entries\n         * will be pruned at all.\n         * @type {number}\n         */\n        this.highWaterMark =\n            opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.newest_ = null;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache<T>): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value,\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}());\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var tileRange = tileGrid.getFullTileRange(z);\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    function TileCache() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().release();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.release();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return (this.minX <= tileRange.minX &&\n            tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY &&\n            tileRange.maxY <= this.maxY);\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return (this.minX == tileRange.minX &&\n            this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX &&\n            this.maxY == tileRange.maxY);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return (this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY);\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('ol/control/Control'), require('ol/Observable'), require('ol/layer/Group')) :\n\ttypeof define === 'function' && define.amd ? define(['ol/control/Control', 'ol/Observable', 'ol/layer/Group'], factory) :\n\t(global.LayerSwitcher = factory(global.ol.control.Control,global.ol.Observable,global.ol.layer.Group));\n}(this, (function (Control,ol_Observable,LayerGroup) { 'use strict';\n\nControl = 'default' in Control ? Control['default'] : Control;\nLayerGroup = 'default' in LayerGroup ? LayerGroup['default'] : LayerGroup;\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @protected\n */\nvar CSS_PREFIX = 'layer-switcher-';\n/**\n * OpenLayers LayerSwitcher Control, displays a list of layers and groups\n * associated with a map which have a `title` property.\n *\n * To be shown in the LayerSwitcher panel layers must have a `title` property;\n * base map layers should have a `type` property set to `base`. Group layers\n * (`LayerGroup`) can be used to visually group layers together; a group\n * with a `fold` property set to either `'open'` or `'close'` will be displayed\n * with a toggle.\n *\n * See [BaseLayerOptions](#baselayeroptions) for a full list of LayerSwitcher\n * properties for layers (`TileLayer`, `ImageLayer`, `VectorTile` etc.) and\n * [GroupLayerOptions](#grouplayeroptions) for group layer (`LayerGroup`)\n * LayerSwitcher properties.\n *\n * Layer and group properties can either be set by adding extra properties\n * to their options when they are created or via their set method.\n *\n * Specify a `title` for a Layer by adding a `title` property to it's options object:\n * ```javascript\n * var lyr = new ol.layer.Tile({\n *   // Specify a title property which will be displayed by the layer switcher\n *   title: 'OpenStreetMap',\n *   visible: true,\n *   source: new ol.source.OSM()\n * })\n * ```\n *\n * Alternatively the properties can be set via the `set` method after a layer has been created:\n * ```javascript\n * var lyr = new ol.layer.Tile({\n *   visible: true,\n *   source: new ol.source.OSM()\n * })\n * // Specify a title property which will be displayed by the layer switcher\n * lyr.set('title', 'OpenStreetMap');\n * ```\n *\n * To create a LayerSwitcher and add it to a map, create a new instance then pass it to the map's [`addControl` method](https://openlayers.org/en/latest/apidoc/module-ol_PluggableMap-PluggableMap.html#addControl).\n * ```javascript\n * var layerSwitcher = new LayerSwitcher({\n *   reverse: true,\n *   groupSelectStyle: 'group'\n * });\n * map.addControl(layerSwitcher);\n * ```\n *\n * @constructor\n * @extends {ol/control/Control~Control}\n * @param opt_options LayerSwitcher options, see  [LayerSwitcher Options](#options) and [RenderOptions](#renderoptions) which LayerSwitcher `Options` extends for more details.\n */\n\nvar LayerSwitcher = function (_Control) {\n    inherits(LayerSwitcher, _Control);\n\n    function LayerSwitcher(opt_options) {\n        classCallCheck(this, LayerSwitcher);\n\n        var options = Object.assign({}, opt_options);\n        // TODO Next: Rename to showButtonTitle\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Legend';\n        // TODO Next: Rename to hideButtonTitle\n        var collapseTipLabel = options.collapseTipLabel ? options.collapseTipLabel : 'Collapse legend';\n        var element = document.createElement('div');\n\n        var _this = possibleConstructorReturn(this, (LayerSwitcher.__proto__ || Object.getPrototypeOf(LayerSwitcher)).call(this, { element: element, target: options.target }));\n\n        _this.activationMode = options.activationMode || 'mouseover';\n        _this.startActive = options.startActive === true;\n        // TODO Next: Rename to showButtonContent\n        var label = options.label !== undefined ? options.label : '';\n        // TODO Next: Rename to hideButtonContent\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\xBB';\n        _this.groupSelectStyle = LayerSwitcher.getGroupSelectStyle(options.groupSelectStyle);\n        _this.reverse = options.reverse !== false;\n        _this.mapListeners = [];\n        _this.hiddenClassName = 'ol-unselectable ol-control layer-switcher';\n        if (LayerSwitcher.isTouchDevice_()) {\n            _this.hiddenClassName += ' touch';\n        }\n        _this.shownClassName = 'shown';\n        element.className = _this.hiddenClassName;\n        var button = document.createElement('button');\n        button.setAttribute('title', tipLabel);\n        button.setAttribute('aria-label', tipLabel);\n        element.appendChild(button);\n        _this.panel = document.createElement('div');\n        _this.panel.className = 'panel';\n        element.appendChild(_this.panel);\n        LayerSwitcher.enableTouchScroll_(_this.panel);\n        button.textContent = label;\n        element.classList.add(CSS_PREFIX + 'group-select-style-' + _this.groupSelectStyle);\n        element.classList.add(CSS_PREFIX + 'activation-mode-' + _this.activationMode);\n        if (_this.activationMode === 'click') {\n            // TODO Next: Remove in favour of layer-switcher-activation-mode-click\n            element.classList.add('activationModeClick');\n            if (_this.startActive) {\n                button.textContent = collapseLabel;\n                button.setAttribute('title', collapseTipLabel);\n                button.setAttribute('aria-label', collapseTipLabel);\n            }\n            button.onclick = function (e) {\n                var evt = e || window.event;\n                if (_this.element.classList.contains(_this.shownClassName)) {\n                    _this.hidePanel();\n                    button.textContent = label;\n                    button.setAttribute('title', tipLabel);\n                    button.setAttribute('aria-label', tipLabel);\n                } else {\n                    _this.showPanel();\n                    button.textContent = collapseLabel;\n                    button.setAttribute('title', collapseTipLabel);\n                    button.setAttribute('aria-label', collapseTipLabel);\n                }\n                evt.preventDefault();\n            };\n        } else {\n            button.onmouseover = function () {\n                _this.showPanel();\n            };\n            button.onclick = function (e) {\n                var evt = e || window.event;\n                _this.showPanel();\n                evt.preventDefault();\n            };\n            _this.panel.onmouseout = function (evt) {\n                if (!_this.panel.contains(evt.relatedTarget)) {\n                    _this.hidePanel();\n                }\n            };\n        }\n        return _this;\n    }\n    /**\n     * Set the map instance the control is associated with.\n     * @param map The map instance.\n     */\n\n\n    createClass(LayerSwitcher, [{\n        key: 'setMap',\n        value: function setMap(map) {\n            var _this2 = this;\n\n            // Clean up listeners associated with the previous map\n            for (var i = 0; i < this.mapListeners.length; i++) {\n                ol_Observable.unByKey(this.mapListeners[i]);\n            }\n            this.mapListeners.length = 0;\n            // Wire up listeners etc. and store reference to new map\n            get(LayerSwitcher.prototype.__proto__ || Object.getPrototypeOf(LayerSwitcher.prototype), 'setMap', this).call(this, map);\n            if (map) {\n                if (this.startActive) {\n                    this.showPanel();\n                } else {\n                    this.renderPanel();\n                }\n                if (this.activationMode !== 'click') {\n                    this.mapListeners.push(map.on('pointerdown', function () {\n                        _this2.hidePanel();\n                    }));\n                }\n            }\n        }\n        /**\n         * Show the layer panel.\n         */\n\n    }, {\n        key: 'showPanel',\n        value: function showPanel() {\n            if (!this.element.classList.contains(this.shownClassName)) {\n                this.element.classList.add(this.shownClassName);\n                this.renderPanel();\n            }\n        }\n        /**\n         * Hide the layer panel.\n         */\n\n    }, {\n        key: 'hidePanel',\n        value: function hidePanel() {\n            if (this.element.classList.contains(this.shownClassName)) {\n                this.element.classList.remove(this.shownClassName);\n            }\n        }\n        /**\n         * Re-draw the layer panel to represent the current state of the layers.\n         */\n\n    }, {\n        key: 'renderPanel',\n        value: function renderPanel() {\n            this.dispatchEvent('render');\n            LayerSwitcher.renderPanel(this.getMap(), this.panel, {\n                groupSelectStyle: this.groupSelectStyle,\n                reverse: this.reverse\n            });\n            this.dispatchEvent('rendercomplete');\n        }\n        /**\n         * **_[static]_** - Re-draw the layer panel to represent the current state of the layers.\n         * @param map The OpenLayers Map instance to render layers for\n         * @param panel The DOM Element into which the layer tree will be rendered\n         * @param options Options for panel, group, and layers\n         */\n\n    }], [{\n        key: 'renderPanel',\n        value: function renderPanel(map, panel, options) {\n            // Create the event.\n            var render_event = new Event('render');\n            // Dispatch the event.\n            panel.dispatchEvent(render_event);\n            options = options || {};\n            options.groupSelectStyle = LayerSwitcher.getGroupSelectStyle(options.groupSelectStyle);\n            LayerSwitcher.ensureTopVisibleBaseLayerShown(map, options.groupSelectStyle);\n            while (panel.firstChild) {\n                panel.removeChild(panel.firstChild);\n            }\n            // Reset indeterminate state for all layers and groups before\n            // applying based on groupSelectStyle\n            LayerSwitcher.forEachRecursive(map, function (l, _idx, _a) {\n                l.set('indeterminate', false);\n            });\n            if (options.groupSelectStyle === 'children' || options.groupSelectStyle === 'none') {\n                // Set visibile and indeterminate state of groups based on\n                // their children's visibility\n                LayerSwitcher.setGroupVisibility(map);\n            } else if (options.groupSelectStyle === 'group') {\n                // Set child indetermiate state based on their parent's visibility\n                LayerSwitcher.setChildVisibility(map);\n            }\n            var ul = document.createElement('ul');\n            panel.appendChild(ul);\n            // passing two map arguments instead of lyr as we're passing the map as the root of the layers tree\n            LayerSwitcher.renderLayers_(map, map, ul, options, function render(_changedLyr) {\n                LayerSwitcher.renderPanel(map, panel, options);\n            });\n            // Create the event.\n            var rendercomplete_event = new Event('rendercomplete');\n            // Dispatch the event.\n            panel.dispatchEvent(rendercomplete_event);\n        }\n        /**\n         * **_[static]_** - Determine if a given layer group contains base layers\n         * @param grp Group to test\n         */\n\n    }, {\n        key: 'isBaseGroup',\n        value: function isBaseGroup(grp) {\n            if (grp instanceof LayerGroup) {\n                var lyrs = grp.getLayers().getArray();\n                return lyrs.length && lyrs[0].get('type') === 'base';\n            } else {\n                return false;\n            }\n        }\n    }, {\n        key: 'setGroupVisibility',\n        value: function setGroupVisibility(map) {\n            // Get a list of groups, with the deepest first\n            var groups = LayerSwitcher.getGroupsAndLayers(map, function (l) {\n                return l instanceof LayerGroup && !l.get('combine') && !LayerSwitcher.isBaseGroup(l);\n            }).reverse();\n            // console.log(groups.map(g => g.get('title')));\n            groups.forEach(function (grp) {\n                // TODO Can we use getLayersArray, is it public in the esm build?\n                var descendantVisibility = grp.getLayersArray().map(function (l) {\n                    var state = l.getVisible();\n                    // console.log('>', l.get('title'), state);\n                    return state;\n                });\n                // console.log(descendantVisibility);\n                if (descendantVisibility.every(function (v) {\n                    return v === true;\n                })) {\n                    grp.setVisible(true);\n                    grp.set('indeterminate', false);\n                } else if (descendantVisibility.every(function (v) {\n                    return v === false;\n                })) {\n                    grp.setVisible(false);\n                    grp.set('indeterminate', false);\n                } else {\n                    grp.setVisible(true);\n                    grp.set('indeterminate', true);\n                }\n            });\n        }\n    }, {\n        key: 'setChildVisibility',\n        value: function setChildVisibility(map) {\n            // console.log('setChildVisibility');\n            var groups = LayerSwitcher.getGroupsAndLayers(map, function (l) {\n                return l instanceof LayerGroup && !l.get('combine') && !LayerSwitcher.isBaseGroup(l);\n            });\n            groups.forEach(function (grp) {\n                var group = grp;\n                // console.log(group.get('title'));\n                var groupVisible = group.getVisible();\n                var groupIndeterminate = group.get('indeterminate');\n                group.getLayers().getArray().forEach(function (l) {\n                    l.set('indeterminate', false);\n                    if ((!groupVisible || groupIndeterminate) && l.getVisible()) {\n                        l.set('indeterminate', true);\n                    }\n                });\n            });\n        }\n        /**\n         * Ensure only the top-most base layer is visible if more than one is visible.\n         * @param map The map instance.\n         * @param groupSelectStyle\n         * @protected\n         */\n\n    }, {\n        key: 'ensureTopVisibleBaseLayerShown',\n        value: function ensureTopVisibleBaseLayerShown(map, groupSelectStyle) {\n            var lastVisibleBaseLyr = void 0;\n            LayerSwitcher.forEachRecursive(map, function (lyr, _idx, _arr) {\n                if (lyr.get('type') === 'base' && lyr.getVisible()) {\n                    lastVisibleBaseLyr = lyr;\n                }\n            });\n            if (lastVisibleBaseLyr) LayerSwitcher.setVisible_(map, lastVisibleBaseLyr, true, groupSelectStyle);\n        }\n        /**\n         * **_[static]_** - Get an Array of all layers and groups displayed by the LayerSwitcher (has a `'title'` property)\n         * contained by the specified map or layer group; optionally filtering via `filterFn`\n         * @param grp The map or layer group for which layers are found.\n         * @param filterFn Optional function used to filter the returned layers\n         */\n\n    }, {\n        key: 'getGroupsAndLayers',\n        value: function getGroupsAndLayers(grp, filterFn) {\n            var layers = [];\n            filterFn = filterFn || function (_lyr, _idx, _arr) {\n                return true;\n            };\n            LayerSwitcher.forEachRecursive(grp, function (lyr, idx, arr) {\n                if (lyr.get('title')) {\n                    if (filterFn(lyr, idx, arr)) {\n                        layers.push(lyr);\n                    }\n                }\n            });\n            return layers;\n        }\n        /**\n         * Toggle the visible state of a layer.\n         * Takes care of hiding other layers in the same exclusive group if the layer\n         * is toggle to visible.\n         * @protected\n         * @param map The map instance.\n         * @param lyr layer whose visibility will be toggled.\n         * @param visible Set whether the layer is shown\n         * @param groupSelectStyle\n         * @protected\n         */\n\n    }, {\n        key: 'setVisible_',\n        value: function setVisible_(map, lyr, visible, groupSelectStyle) {\n            // console.log(lyr.get('title'), visible, groupSelectStyle);\n            lyr.setVisible(visible);\n            if (visible && lyr.get('type') === 'base') {\n                // Hide all other base layers regardless of grouping\n                LayerSwitcher.forEachRecursive(map, function (l, _idx, _arr) {\n                    if (l != lyr && l.get('type') === 'base') {\n                        l.setVisible(false);\n                    }\n                });\n            }\n            if (lyr instanceof LayerGroup && !lyr.get('combine') && groupSelectStyle === 'children') {\n                lyr.getLayers().forEach(function (l) {\n                    LayerSwitcher.setVisible_(map, l, lyr.getVisible(), groupSelectStyle);\n                });\n            }\n        }\n        /**\n         * Render all layers that are children of a group.\n         * @param map The map instance.\n         * @param lyr Layer to be rendered (should have a title property).\n         * @param idx Position in parent group list.\n         * @param options Options for groups and layers\n         * @protected\n         */\n\n    }, {\n        key: 'renderLayer_',\n        value: function renderLayer_(map, lyr, idx, options, render) {\n            var li = document.createElement('li');\n            var lyrTitle = lyr.get('title');\n            var checkboxId = LayerSwitcher.uuid();\n            var label = document.createElement('label');\n            if (lyr instanceof LayerGroup && !lyr.get('combine')) {\n                var isBaseGroup = LayerSwitcher.isBaseGroup(lyr);\n                li.classList.add('group');\n                if (isBaseGroup) {\n                    li.classList.add(CSS_PREFIX + 'base-group');\n                }\n                // Group folding\n                if (lyr.get('fold')) {\n                    li.classList.add(CSS_PREFIX + 'fold');\n                    li.classList.add(CSS_PREFIX + lyr.get('fold'));\n                    var btn = document.createElement('button');\n                    btn.onclick = function (e) {\n                        var evt = e || window.event;\n                        LayerSwitcher.toggleFold_(lyr, li);\n                        evt.preventDefault();\n                    };\n                    li.appendChild(btn);\n                }\n                if (!isBaseGroup && options.groupSelectStyle != 'none') {\n                    var input = document.createElement('input');\n                    input.type = 'checkbox';\n                    input.id = checkboxId;\n                    input.checked = lyr.getVisible();\n                    input.indeterminate = lyr.get('indeterminate');\n                    input.onchange = function (e) {\n                        var target = e.target;\n                        LayerSwitcher.setVisible_(map, lyr, target.checked, options.groupSelectStyle);\n                        render(lyr);\n                    };\n                    li.appendChild(input);\n                    label.htmlFor = checkboxId;\n                }\n                label.innerHTML = lyrTitle;\n                li.appendChild(label);\n                var ul = document.createElement('ul');\n                li.appendChild(ul);\n                LayerSwitcher.renderLayers_(map, lyr, ul, options, render);\n            } else {\n                li.className = 'layer';\n                var _input = document.createElement('input');\n                if (lyr.get('type') === 'base') {\n                    _input.type = 'radio';\n                    _input.name = 'base';\n                } else {\n                    _input.type = 'checkbox';\n                }\n                _input.id = checkboxId;\n                _input.checked = lyr.get('visible');\n                _input.indeterminate = lyr.get('indeterminate');\n                _input.onchange = function (e) {\n                    var target = e.target;\n                    LayerSwitcher.setVisible_(map, lyr, target.checked, options.groupSelectStyle);\n                    render(lyr);\n                };\n                li.appendChild(_input);\n                label.htmlFor = checkboxId;\n                label.innerHTML = lyrTitle;\n                var rsl = map.getView().getResolution();\n                if (rsl > lyr.getMaxResolution() || rsl < lyr.getMinResolution()) {\n                    label.className += ' disabled';\n                }\n                li.appendChild(label);\n            }\n            return li;\n        }\n        /**\n         * Render all layers that are children of a group.\n         * @param map The map instance.\n         * @param lyr Group layer whose children will be rendered.\n         * @param elm DOM element that children will be appended to.\n         * @param options Options for groups and layers\n         * @protected\n         */\n\n    }, {\n        key: 'renderLayers_',\n        value: function renderLayers_(map, lyr, elm, options, render) {\n            var lyrs = lyr.getLayers().getArray().slice();\n            if (options.reverse) lyrs = lyrs.reverse();\n            for (var i = 0, l; i < lyrs.length; i++) {\n                l = lyrs[i];\n                if (l.get('title')) {\n                    elm.appendChild(LayerSwitcher.renderLayer_(map, l, i, options, render));\n                }\n            }\n        }\n        /**\n         * **_[static]_** - Call the supplied function for each layer in the passed layer group\n         * recursing nested groups.\n         * @param lyr The layer group to start iterating from.\n         * @param fn Callback which will be called for each layer\n         * found under `lyr`.\n         */\n\n    }, {\n        key: 'forEachRecursive',\n        value: function forEachRecursive(lyr, fn) {\n            lyr.getLayers().forEach(function (lyr, idx, a) {\n                fn(lyr, idx, a);\n                if (lyr instanceof LayerGroup) {\n                    LayerSwitcher.forEachRecursive(lyr, fn);\n                }\n            });\n        }\n        /**\n         * **_[static]_** - Generate a UUID\n         * Adapted from http://stackoverflow.com/a/2117523/526860\n         * @returns {String} UUID\n         */\n\n    }, {\n        key: 'uuid',\n        value: function uuid() {\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                var r = Math.random() * 16 | 0,\n                    v = c == 'x' ? r : r & 0x3 | 0x8;\n                return v.toString(16);\n            });\n        }\n        /**\n         * Apply workaround to enable scrolling of overflowing content within an\n         * element. Adapted from https://gist.github.com/chrismbarr/4107472\n         * @param elm Element on which to enable touch scrolling\n         * @protected\n         */\n\n    }, {\n        key: 'enableTouchScroll_',\n        value: function enableTouchScroll_(elm) {\n            if (LayerSwitcher.isTouchDevice_()) {\n                var scrollStartPos = 0;\n                elm.addEventListener('touchstart', function (event) {\n                    scrollStartPos = this.scrollTop + event.touches[0].pageY;\n                }, false);\n                elm.addEventListener('touchmove', function (event) {\n                    this.scrollTop = scrollStartPos - event.touches[0].pageY;\n                }, false);\n            }\n        }\n        /**\n         * Determine if the current browser supports touch events. Adapted from\n         * https://gist.github.com/chrismbarr/4107472\n         * @returns {Boolean} True if client can have 'TouchEvent' event\n         * @protected\n         */\n\n    }, {\n        key: 'isTouchDevice_',\n        value: function isTouchDevice_() {\n            try {\n                document.createEvent('TouchEvent');\n                return true;\n            } catch (e) {\n                return false;\n            }\n        }\n        /**\n         * Fold/unfold layer group\n         * @param lyr Layer group to fold/unfold\n         * @param li List item containing layer group\n         * @protected\n         */\n\n    }, {\n        key: 'toggleFold_',\n        value: function toggleFold_(lyr, li) {\n            li.classList.remove(CSS_PREFIX + lyr.get('fold'));\n            lyr.set('fold', lyr.get('fold') === 'open' ? 'close' : 'open');\n            li.classList.add(CSS_PREFIX + lyr.get('fold'));\n        }\n        /**\n         * If a valid groupSelectStyle value is not provided then return the default\n         * @param groupSelectStyle The string to check for validity\n         * @returns The value groupSelectStyle, if valid, the default otherwise\n         * @protected\n         */\n\n    }, {\n        key: 'getGroupSelectStyle',\n        value: function getGroupSelectStyle(groupSelectStyle) {\n            return ['none', 'children', 'group'].indexOf(groupSelectStyle) >= 0 ? groupSelectStyle : 'children';\n        }\n    }]);\n    return LayerSwitcher;\n}(Control);\nif (window['ol'] && window['ol']['control']) {\n    window['ol']['control']['LayerSwitcher'] = LayerSwitcher;\n}\n\nreturn LayerSwitcher;\n\n})));\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { assign } from '../obj.js';\nimport { equivalent as equivalentProjection, get as getProjection, transformExtent, } from '../proj.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.dataProjection = null;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.defaultFeatureProjection = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            var dataProjection = opt_options.dataProjection\n                ? getProjection(opt_options.dataProjection)\n                : this.readProjection(source);\n            if (opt_options.extent &&\n                dataProjection &&\n                dataProjection.getUnits() === Units.TILE_PIXELS) {\n                dataProjection = getProjection(dataProjection);\n                dataProjection.setWorldExtent(opt_options.extent);\n            }\n            options = {\n                dataProjection: dataProjection,\n                featureProjection: opt_options.featureProjection,\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection,\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    var transformed;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write &&\n        opt_options &&\n        /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, \n        /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\nimport { abstract } from '../util.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /** @class */ (function (_super) {\n    __extends(JSONFeature, _super);\n    function JSONFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    JSONFeature.prototype.getType = function () {\n        return FormatType.JSON;\n    };\n    /**\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\n     * read a feature collection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * Read all features.  Works with both a single feature and a feature\n     * collection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a geometry.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    JSONFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromObject(getObject(source));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\n        return abstract();\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded geometry.\n     * @api\n     */\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return abstract();\n    };\n    return JSONFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n    if (typeof source === 'string') {\n        var object = JSON.parse(source);\n        return object ? /** @type {Object} */ (object) : null;\n    }\n    else if (source !== null) {\n        return source;\n    }\n    else {\n        return null;\n    }\n}\nexport default JSONFeature;\n//# sourceMappingURL=JSONFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport { closestSquaredDistanceXY, createOrUpdateEmpty, extend, getCenter, } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /** @class */ (function (_super) {\n    __extends(GeometryCollection, _super);\n    /**\n     * @param {Array<Geometry>=} opt_geometries Geometries.\n     */\n    function GeometryCollection(opt_geometries) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {Array<Geometry>}\n         */\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.changeEventsKeys_ = [];\n        _this.listenGeometriesChange_();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\n        this.changeEventsKeys_.forEach(unlistenByKey);\n        this.changeEventsKeys_.length = 0;\n    };\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            this.changeEventsKeys_.push(listen(this.geometries_[i], EventType.CHANGE, this.changed, this));\n        }\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!GeometryCollection} Clone.\n     * @api\n     */\n    GeometryCollection.prototype.clone = function () {\n        var geometryCollection = new GeometryCollection(null);\n        geometryCollection.setGeometries(this.geometries_);\n        geometryCollection.applyProperties(this);\n        return geometryCollection;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    GeometryCollection.prototype.containsXY = function (x, y) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].containsXY(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    GeometryCollection.prototype.computeExtent = function (extent) {\n        createOrUpdateEmpty(extent);\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            extend(extent, geometries[i].getExtent());\n        }\n        return extent;\n    };\n    /**\n     * Return the geometries that make up this geometry collection.\n     * @return {Array<Geometry>} Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.getGeometries = function () {\n        return cloneGeometries(this.geometries_);\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArray = function () {\n        return this.geometries_;\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArrayRecursive = function () {\n        /** @type {Array<Geometry>} */\n        var geometriesArray = [];\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].getType() === this.getType()) {\n                geometriesArray = geometriesArray.concat(\n                /** @type {GeometryCollection} */ (geometries[i]).getGeometriesArrayRecursive());\n            }\n            else {\n                geometriesArray.push(geometries[i]);\n            }\n        }\n        return geometriesArray;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {GeometryCollection} Simplified GeometryCollection.\n     */\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometries = [];\n        var geometries = this.geometries_;\n        var simplified = false;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            var geometry = geometries[i];\n            var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n            simplifiedGeometries.push(simplifiedGeometry);\n            if (simplifiedGeometry !== geometry) {\n                simplified = true;\n            }\n        }\n        if (simplified) {\n            var simplifiedGeometryCollection = new GeometryCollection(null);\n            simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n            return simplifiedGeometryCollection;\n        }\n        else {\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    GeometryCollection.prototype.getType = function () {\n        return GeometryType.GEOMETRY_COLLECTION;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].intersectsExtent(extent)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    GeometryCollection.prototype.isEmpty = function () {\n        return this.geometries_.length === 0;\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].rotate(angle, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].scale(sx, opt_sy, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Set the geometries that make up this geometry collection.\n     * @param {Array<Geometry>} geometries Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.setGeometries = function (geometries) {\n        this.setGeometriesArray(cloneGeometries(geometries));\n    };\n    /**\n     * @param {Array<Geometry>} geometries Geometries.\n     */\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\n        this.unlistenGeometriesChange_();\n        this.geometries_ = geometries;\n        this.listenGeometriesChange_();\n        this.changed();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].applyTransform(transformFn);\n        }\n        this.changed();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].translate(deltaX, deltaY);\n        }\n        this.changed();\n    };\n    /**\n     * Clean up.\n     */\n    GeometryCollection.prototype.disposeInternal = function () {\n        this.unlistenGeometriesChange_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return GeometryCollection;\n}(Geometry));\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n    var clonedGeometries = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        clonedGeometries.push(geometries[i].clone());\n    }\n    return clonedGeometries;\n}\nexport default GeometryCollection;\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/format/GeoJSON\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assert } from '../asserts.js';\nimport { assign, isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { transformGeometryWithOptions } from './Feature.js';\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nvar GeoJSON = /** @class */ (function (_super) {\n    __extends(GeoJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GeoJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.dataProjection = getProjection(options.dataProjection ? options.dataProjection : 'EPSG:4326');\n        if (options.featureProjection) {\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\n        }\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * Look for the geometry name in the feature GeoJSON\n         * @type {boolean|undefined}\n         * @private\n         */\n        _this.extractGeometryName_ = options.extractGeometryName;\n        return _this;\n    }\n    /**\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        /**\n         * @type {GeoJSONFeature}\n         */\n        var geoJSONFeature = null;\n        if (object['type'] === 'Feature') {\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n        }\n        else {\n            geoJSONFeature = {\n                'type': 'Feature',\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\n                'properties': null,\n            };\n        }\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        else if (this.extractGeometryName_ &&\n            'geometry_name' in geoJSONFeature !== undefined) {\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\n        }\n        feature.setGeometry(geometry);\n        if ('id' in geoJSONFeature) {\n            feature.setId(geoJSONFeature['id']);\n        }\n        if (geoJSONFeature['properties']) {\n            feature.setProperties(geoJSONFeature['properties'], true);\n        }\n        return feature;\n    };\n    /**\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<Feature>} Features.\n     */\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = null;\n        if (geoJSONObject['type'] === 'FeatureCollection') {\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n            features = [];\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n            }\n        }\n        else {\n            features = [this.readFeatureFromObject(object, opt_options)];\n        }\n        return features;\n    };\n    /**\n     * @param {GeoJSONGeometry} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(object, opt_options);\n    };\n    /**\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\n        var crs = object['crs'];\n        var projection;\n        if (crs) {\n            if (crs['type'] == 'name') {\n                projection = getProjection(crs['properties']['name']);\n            }\n            else if (crs['type'] === 'EPSG') {\n                projection = getProjection('EPSG:' + crs['properties']['code']);\n            }\n            else {\n                assert(false, 36); // Unknown SRS type\n            }\n        }\n        else {\n            projection = this.dataProjection;\n        }\n        return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n    };\n    /**\n     * Encode a feature as a GeoJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeature} Object.\n     * @api\n     */\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        /** @type {GeoJSONFeature} */\n        var object = {\n            'type': 'Feature',\n            geometry: null,\n            properties: null,\n        };\n        var id = feature.getId();\n        if (id !== undefined) {\n            object.id = id;\n        }\n        if (!feature.hasProperties()) {\n            return object;\n        }\n        var properties = feature.getProperties();\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object.geometry = writeGeometry(geometry, opt_options);\n            delete properties[feature.getGeometryName()];\n        }\n        if (!isEmpty(properties)) {\n            object.properties = properties;\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a GeoJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\n     * @api\n     */\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            type: 'FeatureCollection',\n            features: objects,\n        };\n    };\n    /**\n     * Encode a geometry as a GeoJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n     * @api\n     */\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    return GeoJSON;\n}(JSONFeature));\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /**\n     * @type {import(\"../geom/Geometry.js\").default}\n     */\n    var geometry;\n    switch (object['type']) {\n        case GeometryType.POINT: {\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geometry = readLineStringGeometry(\n            /** @type {GeoJSONLineString} */ (object));\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geometry = readMultiPointGeometry(\n            /** @type {GeoJSONMultiPoint} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geometry = readMultiLineStringGeometry(\n            /** @type {GeoJSONMultiLineString} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geometry = readMultiPolygonGeometry(\n            /** @type {GeoJSONMultiPolygon} */ (object));\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geometry = readGeometryCollectionGeometry(\n            /** @type {GeoJSONGeometryCollection} */ (object));\n            break;\n        }\n        default: {\n            throw new Error('Unsupported GeoJSON type: ' + object.type);\n        }\n    }\n    return transformGeometryWithOptions(geometry, false, opt_options);\n}\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n    var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n        return readGeometry(geometry, opt_options);\n    });\n    return new GeometryCollection(geometries);\n}\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n    return new Point(object['coordinates']);\n}\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n    return new LineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    return new MultiLineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    return new MultiPoint(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    return new MultiPolygon(object['coordinates']);\n}\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    return new Polygon(object['coordinates']);\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\n    var type = geometry.getType();\n    /** @type {GeoJSONGeometry} */\n    var geoJSON;\n    switch (type) {\n        case GeometryType.POINT: {\n            geoJSON = writePointGeometry(\n            /** @type {Point} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geoJSON = writeLineStringGeometry(\n            /** @type {LineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geoJSON = writePolygonGeometry(\n            /** @type {Polygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geoJSON = writeMultiPointGeometry(\n            /** @type {MultiPoint} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geoJSON = writeMultiLineStringGeometry(\n            /** @type {MultiLineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geoJSON = writeMultiPolygonGeometry(\n            /** @type {MultiPolygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geoJSON = writeGeometryCollectionGeometry(\n            /** @type {GeometryCollection} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.CIRCLE: {\n            geoJSON = {\n                type: 'GeometryCollection',\n                geometries: [],\n            };\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return geoJSON;\n}\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\n        var options = assign({}, opt_options);\n        delete options.featureProjection;\n        return writeGeometry(geometry, options);\n    });\n    return {\n        type: 'GeometryCollection',\n        geometries: geometries,\n    };\n}\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'LineString',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiLineString',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiPoint',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'MultiPolygon',\n        coordinates: geometry.getCoordinates(right),\n    };\n}\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    return {\n        type: 'Point',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'Polygon',\n        coordinates: geometry.getCoordinates(right),\n    };\n}\nexport default GeoJSON;\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/xml\n */\nimport { extend } from './array.js';\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n/**\n * @type {string}\n */\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n    return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n    return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n    if (node.nodeType == Node.CDATA_SECTION_NODE ||\n        node.nodeType == Node.TEXT_NODE) {\n        if (normalizeWhitespace) {\n            accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n        }\n        else {\n            accumulator.push(node.nodeValue);\n        }\n    }\n    else {\n        var n = void 0;\n        for (n = node.firstChild; n; n = n.nextSibling) {\n            getAllTextContent_(n, normalizeWhitespace, accumulator);\n        }\n    }\n    return accumulator;\n}\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n    return 'documentElement' in object;\n}\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n    return node.getAttributeNS(namespaceURI, name) || '';\n}\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n    return new DOMParser().parseFromString(xml, 'application/xml');\n}\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            extend(array, value);\n        }\n    });\n}\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            objectStack[objectStack.length - 1] = value;\n        }\n    });\n}\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            var array = void 0;\n            if (property in object) {\n                array = object[property];\n            }\n            else {\n                array = [];\n                object[property] = array;\n            }\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            object[property] = value;\n        }\n    });\n}\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n    return function (node, value, objectStack) {\n        nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n        var parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var parentNode = parent.node;\n        parentNode.appendChild(node);\n    };\n}\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n    var serializersNS, nodeFactory;\n    return function (node, value, objectStack) {\n        if (serializersNS === undefined) {\n            serializersNS = {};\n            var serializers = {};\n            serializers[node.localName] = nodeWriter;\n            serializersNS[node.namespaceURI] = serializers;\n            nodeFactory = makeSimpleNodeFactory(node.localName);\n        }\n        serialize(serializersNS, nodeFactory, value, objectStack);\n    };\n}\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n    var fixedNodeName = opt_nodeName;\n    return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n        var context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var node = context.node;\n        var nodeName = fixedNodeName;\n        if (nodeName === undefined) {\n            nodeName = opt_nodeName;\n        }\n        var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n        return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    });\n}\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n    var length = orderedKeys.length;\n    var sequence = new Array(length);\n    for (var i = 0; i < length; ++i) {\n        sequence[i] = object[orderedKeys[i]];\n    }\n    return sequence;\n}\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n    /**\n     * @type {Object<string, T>}\n     */\n    var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n    var i, ii;\n    for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n        structureNS[namespaceURIs[i]] = structure;\n    }\n    return structureNS;\n}\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n    var n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n        var parsers = parsersNS[n.namespaceURI];\n        if (parsers !== undefined) {\n            var parser = parsers[n.localName];\n            if (parser !== undefined) {\n                parser.call(opt_this, n, objectStack);\n            }\n        }\n    }\n}\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n    objectStack.push(object);\n    parseNode(parsersNS, node, objectStack, opt_this);\n    return /** @type {T} */ (objectStack.pop());\n}\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    var length = (opt_keys !== undefined ? opt_keys : values).length;\n    var value, node;\n    for (var i = 0; i < length; ++i) {\n        value = values[i];\n        if (value !== undefined) {\n            node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack, opt_keys !== undefined ? opt_keys[i] : undefined);\n            if (node !== undefined) {\n                serializersNS[node.namespaceURI][node.localName].call(opt_this, node, value, objectStack);\n            }\n        }\n    }\n}\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    objectStack.push(object);\n    serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n    return /** @type {O|undefined} */ (objectStack.pop());\n}\nvar xmlSerializer_ = undefined;\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n    xmlSerializer_ = xmlSerializer;\n}\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n    if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n        xmlSerializer_ = new XMLSerializer();\n    }\n    return xmlSerializer_;\n}\nvar document_ = undefined;\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n    document_ = document;\n}\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n    if (document_ === undefined && typeof document !== 'undefined') {\n        document_ = document.implementation.createDocument('', '', null);\n    }\n    return document_;\n}\n//# sourceMappingURL=xml.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport { abstract } from '../util.js';\nimport { extend } from '../array.js';\nimport { getXMLSerializer, isDocument, parse } from '../xml.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nvar XMLFeature = /** @class */ (function (_super) {\n    __extends(XMLFeature, _super);\n    function XMLFeature() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {XMLSerializer}\n         * @private\n         */\n        _this.xmlSerializer_ = getXMLSerializer();\n        return _this;\n    }\n    /**\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    XMLFeature.prototype.getType = function () {\n        return FormatType.XML;\n    };\n    /**\n     * Read a single feature.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    XMLFeature.prototype.readFeature = function (source, opt_options) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeatureFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readFeatureFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readFeatureFromNode(\n            /** @type {Element} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    XMLFeature.prototype.readFeatureFromDocument = function (doc, opt_options) {\n        var features = this.readFeaturesFromDocument(doc, opt_options);\n        if (features.length > 0) {\n            return features[0];\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    XMLFeature.prototype.readFeatureFromNode = function (node, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Read all features from a feature collection.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    XMLFeature.prototype.readFeatures = function (source, opt_options) {\n        if (!source) {\n            return [];\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeaturesFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readFeaturesFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readFeaturesFromNode(\n            /** @type {Element} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    XMLFeature.prototype.readFeaturesFromDocument = function (doc, opt_options) {\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = [];\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(features, this.readFeaturesFromNode(/** @type {Element} */ (n), opt_options));\n            }\n        }\n        return features;\n    };\n    /**\n     * @abstract\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    XMLFeature.prototype.readFeaturesFromNode = function (node, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometry = function (source, opt_options) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readGeometryFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readGeometryFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readGeometryFromNode(\n            /** @type {Element} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometryFromDocument = function (doc, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometryFromNode = function (node, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Read the projection from the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    XMLFeature.prototype.readProjection = function (source) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readProjectionFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readProjectionFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readProjectionFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    XMLFeature.prototype.readProjectionFromDocument = function (doc) {\n        return this.dataProjection;\n    };\n    /**\n     * @param {Element} node Node.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    XMLFeature.prototype.readProjectionFromNode = function (node) {\n        return this.dataProjection;\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     */\n    XMLFeature.prototype.writeFeature = function (feature, opt_options) {\n        var node = this.writeFeatureNode(feature, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @protected\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeFeatureNode = function (feature, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     * @api\n     */\n    XMLFeature.prototype.writeFeatures = function (features, opt_options) {\n        var node = this.writeFeaturesNode(features, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeFeaturesNode = function (features, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded geometry.\n     */\n    XMLFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        var node = this.writeGeometryNode(geometry, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeGeometryNode = function (geometry, opt_options) {\n        return null; // not implemented\n    };\n    return XMLFeature;\n}(FeatureFormat));\nexport default XMLFeature;\n//# sourceMappingURL=XMLFeature.js.map","/**\n * @module ol/format/xsd\n */\nimport { getAllTextContent, getDocument } from '../xml.js';\nimport { padNumber } from '../string.js';\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n    var s = getAllTextContent(node, false);\n    return readBooleanString(s);\n}\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n    var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n    if (m) {\n        return m[1] !== undefined || false;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n    var s = getAllTextContent(node, false);\n    var dateTime = Date.parse(s);\n    return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n    var s = getAllTextContent(node, false);\n    return readDecimalString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n    // FIXME check spec\n    var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n    if (m) {\n        return parseFloat(m[1]);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n    var s = getAllTextContent(node, false);\n    return readNonNegativeIntegerString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n    var m = /^\\s*(\\d+)\\s*$/.exec(string);\n    if (m) {\n        return parseInt(m[1], 10);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n    return getAllTextContent(node, false).trim();\n}\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n    writeStringTextNode(node, bool ? '1' : '0');\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n    node.appendChild(getDocument().createCDATASection(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n    var date = new Date(dateTime * 1000);\n    var string = date.getUTCFullYear() +\n        '-' +\n        padNumber(date.getUTCMonth() + 1, 2) +\n        '-' +\n        padNumber(date.getUTCDate(), 2) +\n        'T' +\n        padNumber(date.getUTCHours(), 2) +\n        ':' +\n        padNumber(date.getUTCMinutes(), 2) +\n        ':' +\n        padNumber(date.getUTCSeconds(), 2) +\n        'Z';\n    node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n    var string = decimal.toPrecision();\n    node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n    var string = nonNegativeInteger.toString();\n    node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n    node.appendChild(getDocument().createTextNode(string));\n}\n//# sourceMappingURL=xsd.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport { OBJECT_PROPERTY_NODE_FACTORY, XML_SCHEMA_INSTANCE_URI, createElementNS, getAllTextContent, isDocument, makeArrayExtender, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS, parse, parseNode, pushParseAndPop, pushSerializeAndPop, } from '../xml.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { extend, includes } from '../array.js';\nimport { get as getProjection } from '../proj.js';\nimport { readBoolean, readDecimal, readString, writeBooleanTextNode, writeCDATASection, writeDecimalTextNode, writeStringTextNode, } from './xsd.js';\nimport { toRadians } from '../math.js';\nimport { transformGeometryWithOptions } from './Feature.js';\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {import(\"../style/IconAnchorUnits\").default} xunits\n * @property {number} y\n * @property {import(\"../style/IconAnchorUnits\").default} yunits\n * @property {import(\"../style/IconOrigin.js\").default} origin\n */\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates\n * @property {Array<number>} whens\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://earth.google.com/kml/2.0',\n    'http://earth.google.com/kml/2.1',\n    'http://earth.google.com/kml/2.2',\n    'http://www.opengis.net/kml/2.2',\n];\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n/**\n * @type {Object<string, import(\"../style/IconAnchorUnits\").default>}\n */\nvar ICON_ANCHOR_UNITS_MAP = {\n    'fraction': IconAnchorUnits.FRACTION,\n    'pixels': IconAnchorUnits.PIXELS,\n    'insetPixels': IconAnchorUnits.PIXELS,\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar PLACEMARK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser,\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark),\n});\n/**\n * @type {import(\"../color.js\").Color}\n */\nvar DEFAULT_COLOR;\n/**\n * @type {Fill}\n */\nvar DEFAULT_FILL_STYLE = null;\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n    return DEFAULT_FILL_STYLE;\n}\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_SIZE;\n/**\n * @type {string}\n */\nvar DEFAULT_IMAGE_STYLE_SRC;\n/**\n * @type {number}\n */\nvar DEFAULT_IMAGE_SCALE_MULTIPLIER;\n/**\n * @type {import(\"../style/Image.js\").default}\n */\nvar DEFAULT_IMAGE_STYLE = null;\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\nexport function getDefaultImageStyle() {\n    return DEFAULT_IMAGE_STYLE;\n}\n/**\n * @type {string}\n */\nvar DEFAULT_NO_IMAGE_STYLE;\n/**\n * @type {Stroke}\n */\nvar DEFAULT_STROKE_STYLE = null;\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n    return DEFAULT_STROKE_STYLE;\n}\n/**\n * @type {Stroke}\n */\nvar DEFAULT_TEXT_STROKE_STYLE;\n/**\n * @type {Text}\n */\nvar DEFAULT_TEXT_STYLE = null;\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n    return DEFAULT_TEXT_STYLE;\n}\n/**\n * @type {Style}\n */\nvar DEFAULT_STYLE = null;\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\nexport function getDefaultStyle() {\n    return DEFAULT_STYLE;\n}\n/**\n * @type {Array<Style>}\n */\nvar DEFAULT_STYLE_ARRAY = null;\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n    return DEFAULT_STYLE_ARRAY;\n}\nfunction createStyleDefaults() {\n    DEFAULT_COLOR = [255, 255, 255, 1];\n    DEFAULT_FILL_STYLE = new Fill({\n        color: DEFAULT_COLOR,\n    });\n    DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n    DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n    DEFAULT_IMAGE_STYLE_SRC =\n        'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n    DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n    DEFAULT_IMAGE_STYLE = new Icon({\n        anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n        anchorOrigin: IconOrigin.BOTTOM_LEFT,\n        anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n        anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n        crossOrigin: 'anonymous',\n        rotation: 0,\n        scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n        size: DEFAULT_IMAGE_STYLE_SIZE,\n        src: DEFAULT_IMAGE_STYLE_SRC,\n    });\n    DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n    DEFAULT_STROKE_STYLE = new Stroke({\n        color: DEFAULT_COLOR,\n        width: 1,\n    });\n    DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n        color: [51, 51, 51, 1],\n        width: 2,\n    });\n    DEFAULT_TEXT_STYLE = new Text({\n        font: 'bold 16px Helvetica',\n        fill: DEFAULT_FILL_STYLE,\n        stroke: DEFAULT_TEXT_STROKE_STYLE,\n        scale: 0.8,\n    });\n    DEFAULT_STYLE = new Style({\n        fill: DEFAULT_FILL_STYLE,\n        image: DEFAULT_IMAGE_STYLE,\n        text: DEFAULT_TEXT_STYLE,\n        stroke: DEFAULT_STROKE_STYLE,\n        zIndex: 0,\n    });\n    DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n/**\n * @type {HTMLTextAreaElement}\n */\nvar TEXTAREA;\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n    return href;\n}\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nvar KML = /** @class */ (function (_super) {\n    __extends(KML, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KML(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        if (!DEFAULT_STYLE_ARRAY) {\n            createStyleDefaults();\n        }\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @private\n         * @type {Array<Style>}\n         */\n        _this.defaultStyle_ = options.defaultStyle\n            ? options.defaultStyle\n            : DEFAULT_STYLE_ARRAY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.extractStyles_ =\n            options.extractStyles !== undefined ? options.extractStyles : true;\n        /**\n         * @type {boolean}\n         */\n        _this.writeStyles_ =\n            options.writeStyles !== undefined ? options.writeStyles : true;\n        /**\n         * @private\n         * @type {!Object<string, (Array<Style>|string)>}\n         */\n        _this.sharedStyles_ = {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.showPointNames_ =\n            options.showPointNames !== undefined ? options.showPointNames : true;\n        /**\n         * @type {null|string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n        /**\n         * @type {IconUrlFunction}\n         */\n        _this.iconUrlFunction_ = options.iconUrlFunction\n            ? options.iconUrlFunction\n            : defaultIconUrlFunction;\n        return _this;\n    }\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<Feature>|undefined} Features.\n     */\n    KML.prototype.readDocumentOrFolder_ = function (node, objectStack) {\n        // FIXME use scope somehow\n        var parsersNS = makeStructureNS(NAMESPACE_URIS, {\n            'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Placemark': makeArrayPusher(this.readPlacemark_, this),\n            'Style': this.readSharedStyle_.bind(this),\n            'StyleMap': this.readSharedStyleMap_.bind(this),\n        });\n        /** @type {Array<Feature>} */\n        // @ts-ignore\n        var features = pushParseAndPop([], parsersNS, node, objectStack, this);\n        if (features) {\n            return features;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Feature|undefined} Feature.\n     */\n    KML.prototype.readPlacemark_ = function (node, objectStack) {\n        var object = pushParseAndPop({ 'geometry': null }, PLACEMARK_PARSERS, node, objectStack, this);\n        if (!object) {\n            return undefined;\n        }\n        var feature = new Feature();\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            feature.setId(id);\n        }\n        var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n        var geometry = object['geometry'];\n        if (geometry) {\n            transformGeometryWithOptions(geometry, false, options);\n        }\n        feature.setGeometry(geometry);\n        delete object['geometry'];\n        if (this.extractStyles_) {\n            var style = object['Style'];\n            var styleUrl = object['styleUrl'];\n            var styleFunction = createFeatureStyleFunction(style, styleUrl, this.defaultStyle_, this.sharedStyles_, this.showPointNames_);\n            feature.setStyle(styleFunction);\n        }\n        delete object['Style'];\n        // we do not remove the styleUrl property from the object, so it\n        // gets stored on feature when setProperties is called\n        feature.setProperties(object, true);\n        return feature;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyle_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            var style = readStyle.call(this, node, objectStack);\n            if (style) {\n                var styleUri = void 0;\n                var baseURI = node.baseURI;\n                if (!baseURI || baseURI == 'about:blank') {\n                    baseURI = window.location.href;\n                }\n                if (baseURI) {\n                    var url = new URL('#' + id, baseURI);\n                    styleUri = url.href;\n                }\n                else {\n                    styleUri = '#' + id;\n                }\n                this.sharedStyles_[styleUri] = style;\n            }\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyleMap_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id === null) {\n            return;\n        }\n        var styleMapValue = readStyleMapValue.call(this, node, objectStack);\n        if (!styleMapValue) {\n            return;\n        }\n        var styleUri;\n        var baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n            baseURI = window.location.href;\n        }\n        if (baseURI) {\n            var url = new URL('#' + id, baseURI);\n            styleUri = url.href;\n        }\n        else {\n            styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = styleMapValue;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    KML.prototype.readFeatureFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return null;\n        }\n        var feature = this.readPlacemark_(node, [\n            this.getReadOptions(node, opt_options),\n        ]);\n        if (feature) {\n            return feature;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @protected\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    KML.prototype.readFeaturesFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return [];\n        }\n        var features;\n        var localName = node.localName;\n        if (localName == 'Document' || localName == 'Folder') {\n            features = this.readDocumentOrFolder_(node, [\n                this.getReadOptions(node, opt_options),\n            ]);\n            if (features) {\n                return features;\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'Placemark') {\n            var feature = this.readPlacemark_(node, [\n                this.getReadOptions(node, opt_options),\n            ]);\n            if (feature) {\n                return [feature];\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'kml') {\n            features = [];\n            for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n                var fs = this.readFeaturesFromNode(n, opt_options);\n                if (fs) {\n                    extend(features, fs);\n                }\n            }\n            return features;\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Read the name of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {string|undefined} Name.\n     * @api\n     */\n    KML.prototype.readName = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readNameFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readNameFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readNameFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                var name_1 = this.readNameFromNode(/** @type {Element} */ (n));\n                if (name_1) {\n                    return name_1;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromNode = function (node) {\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'name') {\n                return readString(n);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'Placemark' ||\n                    localName == 'kml')) {\n                var name_2 = this.readNameFromNode(n);\n                if (name_2) {\n                    return name_2;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Read the network links of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Network links.\n     * @api\n     */\n    KML.prototype.readNetworkLinks = function (source) {\n        var networkLinks = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(networkLinks, this.readNetworkLinksFromDocument(/** @type {Document} */ (source)));\n        }\n        else {\n            extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ (source)));\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromDocument = function (doc) {\n        var networkLinks = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromNode = function (node) {\n        var networkLinks = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'NetworkLink') {\n                var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n                networkLinks.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' || localName == 'Folder' || localName == 'kml')) {\n                extend(networkLinks, this.readNetworkLinksFromNode(n));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * Read the regions of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Regions.\n     * @api\n     */\n    KML.prototype.readRegion = function (source) {\n        var regions = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(regions, this.readRegionFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(regions, this.readRegionFromDocument(/** @type {Document} */ (source)));\n        }\n        else {\n            extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n        }\n        return regions;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Region.\n     */\n    KML.prototype.readRegionFromDocument = function (doc) {\n        var regions = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return regions;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Region.\n     * @api\n     */\n    KML.prototype.readRegionFromNode = function (node) {\n        var regions = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'Region') {\n                var obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n                regions.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' || localName == 'Folder' || localName == 'kml')) {\n                extend(regions, this.readRegionFromNode(n));\n            }\n        }\n        return regions;\n    };\n    /**\n     * Encode an array of features in the KML format as an XML node. GeometryCollections,\n     * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n     *\n     * @param {Array<Feature>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     * @api\n     */\n    KML.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n        var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n        kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n        kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n        kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n        var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n            node: kml,\n        };\n        /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n        var properties = {};\n        if (features.length > 1) {\n            properties['Document'] = features;\n        }\n        else if (features.length == 1) {\n            properties['Placemark'] = features[0];\n        }\n        var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n        var values = makeSequence(properties, orderedKeys);\n        pushSerializeAndPop(context, KML_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys, this);\n        return kml;\n    };\n    return KML;\n}(XMLFeature));\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n    var textOffset = [0, 0];\n    var textAlign = 'start';\n    var imageStyle = foundStyle.getImage();\n    if (imageStyle) {\n        var imageSize = imageStyle.getImageSize();\n        if (imageSize === null) {\n            imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n        }\n        if (imageSize.length == 2) {\n            var imageScale = imageStyle.getScaleArray();\n            // Offset the label to be centered to the right of the icon,\n            // if there is one.\n            textOffset[0] = (imageScale[0] * imageSize[0]) / 2;\n            textOffset[1] = (-imageScale[1] * imageSize[1]) / 2;\n            textAlign = 'left';\n        }\n    }\n    var textStyle = foundStyle.getText();\n    if (textStyle) {\n        // clone the text style, customizing it with name, alignments and offset.\n        // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n        textStyle = textStyle.clone();\n        textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n        textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n        textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n        textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n    }\n    else {\n        textStyle = DEFAULT_TEXT_STYLE.clone();\n    }\n    textStyle.setText(name);\n    textStyle.setOffsetX(textOffset[0]);\n    textStyle.setOffsetY(textOffset[1]);\n    textStyle.setTextAlign(textAlign);\n    var nameStyle = new Style({\n        image: imageStyle,\n        text: textStyle,\n    });\n    return nameStyle;\n}\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n    return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n        var drawName = showPointNames;\n        var name = '';\n        var multiGeometryPoints = [];\n        if (drawName) {\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var type = geometry.getType();\n                if (type === GeometryType.GEOMETRY_COLLECTION) {\n                    multiGeometryPoints = geometry\n                        .getGeometriesArrayRecursive()\n                        .filter(function (geometry) {\n                        var type = geometry.getType();\n                        return (type === GeometryType.POINT ||\n                            type === GeometryType.MULTI_POINT);\n                    });\n                    drawName = multiGeometryPoints.length > 0;\n                }\n                else {\n                    drawName =\n                        type === GeometryType.POINT || type === GeometryType.MULTI_POINT;\n                }\n            }\n        }\n        if (drawName) {\n            name = /** @type {string} */ (feature.get('name'));\n            drawName = drawName && !!name;\n            // convert any html character codes\n            if (drawName && name.search(/&[^&]+;/) > -1) {\n                if (!TEXTAREA) {\n                    TEXTAREA = document.createElement('textarea');\n                }\n                TEXTAREA.innerHTML = name;\n                name = TEXTAREA.value;\n            }\n        }\n        var featureStyle = defaultStyle;\n        if (style) {\n            featureStyle = style;\n        }\n        else if (styleUrl) {\n            featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n        }\n        if (drawName) {\n            var nameStyle = createNameStyleFunction(featureStyle[0], name);\n            if (multiGeometryPoints.length > 0) {\n                // in multigeometries restrict the name style to points and create a\n                // style without image or text for geometries requiring fill or stroke\n                // including any polygon specific style if there is one\n                nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n                var baseStyle = new Style({\n                    geometry: featureStyle[0].getGeometry(),\n                    image: null,\n                    fill: featureStyle[0].getFill(),\n                    stroke: featureStyle[0].getStroke(),\n                    text: null,\n                });\n                return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n            }\n            return nameStyle;\n        }\n        return featureStyle;\n    });\n}\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n    if (Array.isArray(styleValue)) {\n        return styleValue;\n    }\n    else if (typeof styleValue === 'string') {\n        return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n    }\n    else {\n        return defaultStyle;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n    var s = getAllTextContent(node, false);\n    // The KML specification states that colors should not include a leading `#`\n    // but we tolerate them.\n    var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n    if (m) {\n        var hexColor = m[1];\n        return [\n            parseInt(hexColor.substr(6, 2), 16),\n            parseInt(hexColor.substr(4, 2), 16),\n            parseInt(hexColor.substr(2, 2), 16),\n            parseInt(hexColor.substr(0, 2), 16) / 255,\n        ];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n    var s = getAllTextContent(node, false);\n    var flatCoordinates = [];\n    // The KML specification states that coordinate tuples should not include\n    // spaces, but we tolerate them.\n    s = s.replace(/\\s*,\\s*/g, ',');\n    var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n    var m;\n    while ((m = re.exec(s))) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = m[3] ? parseFloat(m[3]) : 0;\n        flatCoordinates.push(x, y, z);\n        s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n        return undefined;\n    }\n    return flatCoordinates;\n}\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n    var s = getAllTextContent(node, false).trim();\n    var baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n    }\n    if (baseURI) {\n        var url = new URL(s, baseURI);\n        return url.href;\n    }\n    else {\n        return s;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n    // KML files in the wild occasionally forget the leading\n    // `#` on styleUrlsdefined in the same document.\n    var s = getAllTextContent(node, false)\n        .trim()\n        .replace(/^(?!.*#)/, '#');\n    var baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n    }\n    if (baseURI) {\n        var url = new URL(s, baseURI);\n        return url.href;\n    }\n    else {\n        return s;\n    }\n}\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n    var xunits = node.getAttribute('xunits');\n    var yunits = node.getAttribute('yunits');\n    var origin;\n    if (xunits !== 'insetPixels') {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_LEFT;\n        }\n        else {\n            origin = IconOrigin.TOP_LEFT;\n        }\n    }\n    else {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_RIGHT;\n        }\n        else {\n            origin = IconOrigin.TOP_RIGHT;\n        }\n    }\n    return {\n        x: parseFloat(node.getAttribute('x')),\n        xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n        y: parseFloat(node.getAttribute('y')),\n        yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n        origin: origin,\n    };\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n    return readDecimal(node);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Pair': pairDataParser,\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n    return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'color': makeObjectPropertySetter(readColor),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale),\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n    // FIXME refreshMode\n    // FIXME refreshInterval\n    // FIXME viewRefreshTime\n    // FIXME viewBoundScale\n    // FIXME viewFormat\n    // FIXME httpQuery\n    var object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var IconObject = 'Icon' in object ? object['Icon'] : {};\n    var drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n    var src;\n    var href = /** @type {string|undefined} */ (IconObject['href']);\n    if (href) {\n        src = href;\n    }\n    else if (drawIcon) {\n        src = DEFAULT_IMAGE_STYLE_SRC;\n    }\n    var anchor, anchorXUnits, anchorYUnits;\n    var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n    var hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n    if (hotSpot) {\n        anchor = [hotSpot.x, hotSpot.y];\n        anchorXUnits = hotSpot.xunits;\n        anchorYUnits = hotSpot.yunits;\n        anchorOrigin = hotSpot.origin;\n    }\n    else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n        anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n        anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n        anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n    else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n        anchor = [0.5, 0];\n        anchorXUnits = IconAnchorUnits.FRACTION;\n        anchorYUnits = IconAnchorUnits.FRACTION;\n    }\n    var offset;\n    var x = /** @type {number|undefined} */ (IconObject['x']);\n    var y = /** @type {number|undefined} */ (IconObject['y']);\n    if (x !== undefined && y !== undefined) {\n        offset = [x, y];\n    }\n    var size;\n    var w = /** @type {number|undefined} */ (IconObject['w']);\n    var h = /** @type {number|undefined} */ (IconObject['h']);\n    if (w !== undefined && h !== undefined) {\n        size = [w, h];\n    }\n    var rotation;\n    var heading = /** @type {number} */ (object['heading']);\n    if (heading !== undefined) {\n        rotation = toRadians(heading);\n    }\n    var scale = /** @type {number|undefined} */ (object['scale']);\n    var color = /** @type {Array<number>|undefined} */ (object['color']);\n    if (drawIcon) {\n        if (src == DEFAULT_IMAGE_STYLE_SRC) {\n            size = DEFAULT_IMAGE_STYLE_SIZE;\n            if (scale === undefined) {\n                scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n            }\n        }\n        var imageStyle = new Icon({\n            anchor: anchor,\n            anchorOrigin: anchorOrigin,\n            anchorXUnits: anchorXUnits,\n            anchorYUnits: anchorYUnits,\n            crossOrigin: this.crossOrigin_,\n            offset: offset,\n            offsetOrigin: IconOrigin.BOTTOM_LEFT,\n            rotation: rotation,\n            scale: scale,\n            size: size,\n            src: this.iconUrlFunction_(src),\n            color: color,\n        });\n        styleObject['imageStyle'] = imageStyle;\n    }\n    else {\n        // handle the case when we explicitly want to draw no icon.\n        styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var textStyle = new Text({\n        fill: new Fill({\n            color: \n            /** @type {import(\"../color.js\").Color} */\n            ('color' in object ? object['color'] : DEFAULT_COLOR),\n        }),\n        scale: /** @type {number|undefined} */ (object['scale']),\n    });\n    styleObject['textStyle'] = textStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n    // FIXME colorMode\n    // FIXME gx:outerColor\n    // FIXME gx:outerWidth\n    // FIXME gx:physicalWidth\n    // FIXME gx:labelVisibility\n    var object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var strokeStyle = new Stroke({\n        color: \n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n        width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n    });\n    styleObject['strokeStyle'] = strokeStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var fillStyle = new Fill({\n        color: \n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    });\n    styleObject['fillStyle'] = fillStyle;\n    var fill = /** @type {boolean|undefined} */ (object['fill']);\n    if (fill !== undefined) {\n        styleObject['fill'] = fill;\n    }\n    var outline = /** @type {boolean|undefined} */ (object['outline']);\n    if (outline !== undefined) {\n        styleObject['outline'] = outline;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n    return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n    var gxTrackObject = \n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n    var flatCoordinates = gxTrackObject.flatCoordinates;\n    var s = getAllTextContent(node, false);\n    var re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n    var m = re.exec(s);\n    if (m) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = parseFloat(m[3]);\n        flatCoordinates.push(x, y, z, 0);\n    }\n    else {\n        flatCoordinates.push(0, 0, 0, 0);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n    var lineStrings = pushParseAndPop([], GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n    if (!lineStrings) {\n        return undefined;\n    }\n    return new MultiLineString(lineStrings);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GX_TRACK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'when': whenParser,\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n    var gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n        flatCoordinates: [],\n        whens: [],\n    }), GX_TRACK_PARSERS, node, objectStack);\n    if (!gxTrackObject) {\n        return undefined;\n    }\n    var flatCoordinates = gxTrackObject.flatCoordinates;\n    var whens = gxTrackObject.whens;\n    for (var i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\n        flatCoordinates[4 * i + 3] = whens[i];\n    }\n    return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar ICON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI),\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n    var iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n    if (iconObject) {\n        return iconObject;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(null, GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n        lineString.setProperties(properties, true);\n        return lineString;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [\n            flatCoordinates.length,\n        ]);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n    var geometries = pushParseAndPop([], MULTI_GEOMETRY_PARSERS, node, objectStack);\n    if (!geometries) {\n        return null;\n    }\n    if (geometries.length === 0) {\n        return new GeometryCollection(geometries);\n    }\n    var multiGeometry;\n    var homogeneous = true;\n    var type = geometries[0].getType();\n    var geometry;\n    for (var i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        if (geometry.getType() != type) {\n            homogeneous = false;\n            break;\n        }\n    }\n    if (homogeneous) {\n        var layout = void 0;\n        var flatCoordinates = void 0;\n        if (type == GeometryType.POINT) {\n            var point = geometries[0];\n            layout = point.getLayout();\n            flatCoordinates = point.getFlatCoordinates();\n            for (var i = 1, ii = geometries.length; i < ii; ++i) {\n                geometry = geometries[i];\n                extend(flatCoordinates, geometry.getFlatCoordinates());\n            }\n            multiGeometry = new MultiPoint(flatCoordinates, layout);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.LINE_STRING) {\n            multiGeometry = new MultiLineString(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.POLYGON) {\n            multiGeometry = new MultiPolygon(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.GEOMETRY_COLLECTION) {\n            multiGeometry = new GeometryCollection(geometries);\n        }\n        else {\n            assert(false, 37); // Unknown geometry type found\n        }\n    }\n    else {\n        multiGeometry = new GeometryCollection(geometries);\n    }\n    return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var point = new Point(flatCoordinates, GeometryLayout.XYZ);\n        point.setProperties(properties, true);\n        return point;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser,\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n    var properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}), EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatLinearRings = pushParseAndPop([null], FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n    if (flatLinearRings && flatLinearRings[0]) {\n        var flatCoordinates = flatLinearRings[0];\n        var ends = [flatCoordinates.length];\n        for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n            extend(flatCoordinates, flatLinearRings[i]);\n            ends.push(flatCoordinates.length);\n        }\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser,\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n    var styleObject = pushParseAndPop({}, STYLE_PARSERS, node, objectStack, this);\n    if (!styleObject) {\n        return null;\n    }\n    var fillStyle = \n    /** @type {Fill} */\n    ('fillStyle' in styleObject\n        ? styleObject['fillStyle']\n        : DEFAULT_FILL_STYLE);\n    var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n    if (fill !== undefined && !fill) {\n        fillStyle = null;\n    }\n    var imageStyle;\n    if ('imageStyle' in styleObject) {\n        if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n            imageStyle = styleObject['imageStyle'];\n        }\n    }\n    else {\n        imageStyle = DEFAULT_IMAGE_STYLE;\n    }\n    var textStyle = \n    /** @type {Text} */\n    ('textStyle' in styleObject\n        ? styleObject['textStyle']\n        : DEFAULT_TEXT_STYLE);\n    var strokeStyle = \n    /** @type {Stroke} */\n    ('strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE);\n    var outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n    if (outline !== undefined && !outline) {\n        // if the polystyle specifies no outline two styles are needed,\n        // one for non-polygon geometries where linestrings require a stroke\n        // and one for polygons where there should be no stroke\n        return [\n            new Style({\n                geometry: function (feature) {\n                    var geometry = feature.getGeometry();\n                    var type = geometry.getType();\n                    if (type === GeometryType.GEOMETRY_COLLECTION) {\n                        return new GeometryCollection(geometry\n                            .getGeometriesArrayRecursive()\n                            .filter(function (geometry) {\n                            var type = geometry.getType();\n                            return (type !== GeometryType.POLYGON &&\n                                type !== GeometryType.MULTI_POLYGON);\n                        }));\n                    }\n                    else if (type !== GeometryType.POLYGON &&\n                        type !== GeometryType.MULTI_POLYGON) {\n                        return geometry;\n                    }\n                },\n                fill: fillStyle,\n                image: imageStyle,\n                stroke: strokeStyle,\n                text: textStyle,\n                zIndex: undefined,\n            }),\n            new Style({\n                geometry: function (feature) {\n                    var geometry = feature.getGeometry();\n                    var type = geometry.getType();\n                    if (type === GeometryType.GEOMETRY_COLLECTION) {\n                        return new GeometryCollection(geometry\n                            .getGeometriesArrayRecursive()\n                            .filter(function (geometry) {\n                            var type = geometry.getType();\n                            return (type === GeometryType.POLYGON ||\n                                type === GeometryType.MULTI_POLYGON);\n                        }));\n                    }\n                    else if (type === GeometryType.POLYGON ||\n                        type === GeometryType.MULTI_POLYGON) {\n                        return geometry;\n                    }\n                },\n                fill: fillStyle,\n                stroke: null,\n                zIndex: undefined,\n            }),\n        ];\n    }\n    return [\n        new Style({\n            fill: fillStyle,\n            image: imageStyle,\n            stroke: strokeStyle,\n            text: textStyle,\n            zIndex: undefined,\n        }),\n    ];\n}\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n    var ii = geometries.length;\n    var extrudes = new Array(geometries.length);\n    var tessellates = new Array(geometries.length);\n    var altitudeModes = new Array(geometries.length);\n    var hasExtrude, hasTessellate, hasAltitudeMode;\n    hasExtrude = false;\n    hasTessellate = false;\n    hasAltitudeMode = false;\n    for (var i = 0; i < ii; ++i) {\n        var geometry = geometries[i];\n        extrudes[i] = geometry.get('extrude');\n        tessellates[i] = geometry.get('tessellate');\n        altitudeModes[i] = geometry.get('altitudeMode');\n        hasExtrude = hasExtrude || extrudes[i] !== undefined;\n        hasTessellate = hasTessellate || tessellates[i] !== undefined;\n        hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n    }\n    if (hasExtrude) {\n        multiGeometry.set('extrude', extrudes);\n    }\n    if (hasTessellate) {\n        multiGeometry.set('tessellate', tessellates);\n    }\n    if (hasAltitudeMode) {\n        multiGeometry.set('altitudeMode', altitudeModes);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    parseNode(DATA_PARSERS, node, objectStack);\n    var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    if (name && featureObject.displayName) {\n        featureObject[name] = {\n            value: featureObject.value,\n            displayName: featureObject.displayName,\n            toString: function () {\n                return featureObject.value;\n            },\n        };\n    }\n    else if (name !== null) {\n        featureObject[name] = featureObject.value;\n    }\n    else if (featureObject.displayName !== null) {\n        featureObject[featureObject.displayName] = featureObject.value;\n    }\n    delete featureObject['value'];\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser,\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n    parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n    parseNode(REGION_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n    var pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n    if (!pairObject) {\n        return;\n    }\n    var key = /** @type {string|undefined} */ (pairObject['key']);\n    if (key && key == 'normal') {\n        var styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n        if (styleUrl) {\n            objectStack[objectStack.length - 1] = styleUrl;\n        }\n        var style = /** @type {Style} */ (pairObject['Style']);\n        if (style) {\n            objectStack[objectStack.length - 1] = style;\n        }\n    }\n}\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n    var styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n        return;\n    }\n    var placemarkObject = objectStack[objectStack.length - 1];\n    if (Array.isArray(styleMapValue)) {\n        placemarkObject['Style'] = styleMapValue;\n    }\n    else if (typeof styleMapValue === 'string') {\n        placemarkObject['styleUrl'] = styleMapValue;\n    }\n    else {\n        assert(false, 38); // `styleMapValue` has an unknown type\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser,\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n    parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    if (name !== null) {\n        var data = readString(node);\n        var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        featureObject[name] = data;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n    var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var extent = [\n        parseFloat(object['west']),\n        parseFloat(object['south']),\n        parseFloat(object['east']),\n        parseFloat(object['north']),\n    ];\n    regionObject['extent'] = extent;\n    regionObject['altitudeMode'] = object['altitudeMode'];\n    regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n    regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n    var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n    lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n    lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n    lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (flatLinearRing) {\n        var flatLinearRings = \n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n        flatLinearRings.push(flatLinearRing);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (flatLinearRing) {\n        var flatLinearRings = \n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n        flatLinearRings[0] = flatLinearRing;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n    parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n    var gxTrackObject = \n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n    var whens = gxTrackObject.whens;\n    var s = getAllTextContent(node, false);\n    var when = Date.parse(s);\n    whens.push(isNaN(when) ? 0 : when);\n}\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n    var rgba = asArray(color);\n    var opacity = rgba.length == 4 ? rgba[3] : 1;\n    /** @type {Array<string|number>} */\n    var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n    for (var i = 0; i < 4; ++i) {\n        var hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n        abgr[i] = hex.length == 1 ? '0' + hex : hex;\n    }\n    writeStringTextNode(node, abgr.join(''));\n}\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var layout = context['layout'];\n    var stride = context['stride'];\n    var dimension;\n    if (layout == GeometryLayout.XY || layout == GeometryLayout.XYM) {\n        dimension = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYZM) {\n        dimension = 3;\n    }\n    else {\n        assert(false, 34); // Invalid geometry layout\n    }\n    var ii = coordinates.length;\n    var text = '';\n    if (ii > 0) {\n        text += coordinates[0];\n        for (var d = 1; d < dimension; ++d) {\n            text += ',' + coordinates[d];\n        }\n        for (var i = stride; i < ii; i += stride) {\n            text += ' ' + coordinates[i];\n            for (var d = 1; d < dimension; ++d) {\n                text += ',' + coordinates[i + d];\n            }\n        }\n    }\n    writeStringTextNode(node, text);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName),\n});\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n    node.setAttribute('name', pair.name);\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var value = pair.value;\n    if (typeof value == 'object') {\n        if (value !== null && value.displayName) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n        }\n        if (value !== null && value.value) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n        }\n    }\n    else {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n    }\n}\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n    writeCDATASection(node, name);\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n    writeStringTextNode(node, value);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark),\n});\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, DOCUMENT_SERIALIZERS, DOCUMENT_NODE_FACTORY, features, objectStack, undefined, this);\n}\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var names = namesAndValues.names;\n    var values = namesAndValues.values;\n    var length = names.length;\n    for (var i = 0; i < length; i++) {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, DATA_NODE_FACTORY, [{ name: names[i], value: values[i] }], objectStack);\n    }\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar ICON_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['href'], makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h']));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar ICON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode),\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n}));\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\n};\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n    values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'scale',\n    'heading',\n    'Icon',\n    'color',\n    'hotSpot',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'color': makeChildAppender(writeColorTextNode),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var /** @type {Object<string, any>} */ properties = {};\n    var src = style.getSrc();\n    var size = style.getSize();\n    var iconImageSize = style.getImageSize();\n    var iconProperties = {\n        'href': src,\n    };\n    if (size) {\n        iconProperties['w'] = size[0];\n        iconProperties['h'] = size[1];\n        var anchor = style.getAnchor(); // top-left\n        var origin_1 = style.getOrigin(); // top-left\n        if (origin_1 && iconImageSize && origin_1[0] !== 0 && origin_1[1] !== size[1]) {\n            iconProperties['x'] = origin_1[0];\n            iconProperties['y'] = iconImageSize[1] - (origin_1[1] + size[1]);\n        }\n        if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n            var /** @type {Vec2} */ hotSpot = {\n                x: anchor[0],\n                xunits: IconAnchorUnits.PIXELS,\n                y: size[1] - anchor[1],\n                yunits: IconAnchorUnits.PIXELS,\n            };\n            properties['hotSpot'] = hotSpot;\n        }\n    }\n    properties['Icon'] = iconProperties;\n    var scale = style.getScale();\n    if (scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var rotation = style.getRotation();\n    if (rotation !== 0) {\n        properties['heading'] = rotation; // 0-360\n    }\n    var color = style.getColor();\n    if (color) {\n        properties['color'] = color;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color',\n    'scale',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    var fill = style.getFill();\n    if (fill) {\n        properties['color'] = fill.getColor();\n    }\n    var scale = style.getScale();\n    if (scale && scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {\n        'color': style.getColor(),\n        'width': Number(style.getWidth()) || 1,\n    };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n    'Point': 'Point',\n    'LineString': 'LineString',\n    'LinearRing': 'LinearRing',\n    'Polygon': 'Polygon',\n    'MultiPoint': 'MultiGeometry',\n    'MultiLineString': 'MultiGeometry',\n    'MultiPolygon': 'MultiGeometry',\n    'GeometryCollection': 'MultiGeometry',\n};\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    if (value) {\n        var parentNode = objectStack[objectStack.length - 1].node;\n        return createElementNS(parentNode.namespaceURI, GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()]);\n    }\n};\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    var type = geometry.getType();\n    /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n    var geometries = [];\n    /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n    var factory;\n    if (type === GeometryType.GEOMETRY_COLLECTION) {\n        /** @type {GeometryCollection} */ (geometry)\n            .getGeometriesArrayRecursive()\n            .forEach(function (geometry) {\n            var type = geometry.getType();\n            if (type === GeometryType.MULTI_POINT) {\n                geometries = geometries.concat(\n                /** @type {MultiPoint} */ (geometry).getPoints());\n            }\n            else if (type === GeometryType.MULTI_LINE_STRING) {\n                geometries = geometries.concat(\n                /** @type {MultiLineString} */ (geometry).getLineStrings());\n            }\n            else if (type === GeometryType.MULTI_POLYGON) {\n                geometries = geometries.concat(\n                /** @type {MultiPolygon} */ (geometry).getPolygons());\n            }\n            else if (type === GeometryType.POINT ||\n                type === GeometryType.LINE_STRING ||\n                type === GeometryType.POLYGON) {\n                geometries.push(geometry);\n            }\n            else {\n                assert(false, 39); // Unknown geometry type\n            }\n        });\n        factory = GEOMETRY_NODE_FACTORY;\n    }\n    else if (type === GeometryType.MULTI_POINT) {\n        geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n        factory = POINT_NODE_FACTORY;\n    }\n    else if (type === GeometryType.MULTI_LINE_STRING) {\n        geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n        factory = LINE_STRING_NODE_FACTORY;\n    }\n    else if (type === GeometryType.MULTI_POLYGON) {\n        geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n        factory = POLYGON_NODE_FACTORY;\n    }\n    else {\n        assert(false, 39); // Unknown geometry type\n    }\n    pushSerializeAndPop(context, MULTI_GEOMETRY_SERIALIZERS, factory, geometries, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, BOUNDARY_IS_SERIALIZERS, LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode),\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name',\n    'open',\n    'visibility',\n    'address',\n    'phoneNumber',\n    'description',\n    'styleUrl',\n    'Style',\n]);\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // set id\n    if (feature.getId()) {\n        node.setAttribute('id', /** @type {string} */ (feature.getId()));\n    }\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = feature.getProperties();\n    // don't export these to ExtendedData\n    var filter = {\n        'address': 1,\n        'description': 1,\n        'name': 1,\n        'open': 1,\n        'phoneNumber': 1,\n        'styleUrl': 1,\n        'visibility': 1,\n    };\n    filter[feature.getGeometryName()] = 1;\n    var keys = Object.keys(properties || {})\n        .sort()\n        .filter(function (v) {\n        return !filter[v];\n    });\n    var styleFunction = feature.getStyleFunction();\n    if (styleFunction) {\n        // FIXME the styles returned by the style function are supposed to be\n        // resolution-independent here\n        var styles = styleFunction(feature, 0);\n        if (styles) {\n            var styleArray = Array.isArray(styles) ? styles : [styles];\n            var pointStyles = styleArray;\n            if (feature.getGeometry()) {\n                pointStyles = styleArray.filter(function (style) {\n                    var geometry = style.getGeometryFunction()(feature);\n                    if (geometry) {\n                        var type = geometry.getType();\n                        if (type === GeometryType.GEOMETRY_COLLECTION) {\n                            return /** @type {GeometryCollection} */ (geometry)\n                                .getGeometriesArrayRecursive()\n                                .filter(function (geometry) {\n                                var type = geometry.getType();\n                                return (type === GeometryType.POINT ||\n                                    type === GeometryType.MULTI_POINT);\n                            }).length;\n                        }\n                        return (type === GeometryType.POINT || type === GeometryType.MULTI_POINT);\n                    }\n                });\n            }\n            if (this.writeStyles_) {\n                var lineStyles = styleArray;\n                var polyStyles = styleArray;\n                if (feature.getGeometry()) {\n                    lineStyles = styleArray.filter(function (style) {\n                        var geometry = style.getGeometryFunction()(feature);\n                        if (geometry) {\n                            var type = geometry.getType();\n                            if (type === GeometryType.GEOMETRY_COLLECTION) {\n                                return /** @type {GeometryCollection} */ (geometry)\n                                    .getGeometriesArrayRecursive()\n                                    .filter(function (geometry) {\n                                    var type = geometry.getType();\n                                    return (type === GeometryType.LINE_STRING ||\n                                        type === GeometryType.MULTI_LINE_STRING);\n                                }).length;\n                            }\n                            return (type === GeometryType.LINE_STRING ||\n                                type === GeometryType.MULTI_LINE_STRING);\n                        }\n                    });\n                    polyStyles = styleArray.filter(function (style) {\n                        var geometry = style.getGeometryFunction()(feature);\n                        if (geometry) {\n                            var type = geometry.getType();\n                            if (type === GeometryType.GEOMETRY_COLLECTION) {\n                                return /** @type {GeometryCollection} */ (geometry)\n                                    .getGeometriesArrayRecursive()\n                                    .filter(function (geometry) {\n                                    var type = geometry.getType();\n                                    return (type === GeometryType.POLYGON ||\n                                        type === GeometryType.MULTI_POLYGON);\n                                }).length;\n                            }\n                            return (type === GeometryType.POLYGON ||\n                                type === GeometryType.MULTI_POLYGON);\n                        }\n                    });\n                }\n                properties['Style'] = {\n                    pointStyles: pointStyles,\n                    lineStyles: lineStyles,\n                    polyStyles: polyStyles,\n                };\n            }\n            if (pointStyles.length && properties['name'] === undefined) {\n                var textStyle = pointStyles[0].getText();\n                if (textStyle) {\n                    properties['name'] = textStyle.getText();\n                }\n            }\n        }\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    if (keys.length > 0) {\n        var sequence = makeSequence(properties, keys);\n        var namesAndValues = { names: keys, values: sequence };\n        pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n    }\n    // serialize geometry\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n        geometry = transformGeometryWithOptions(geometry, true, options);\n    }\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'extrude',\n    'tessellate',\n    'altitudeMode',\n    'coordinates',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    context['layout'] = geometry.getLayout();\n    context['stride'] = geometry.getStride();\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = geometry.getProperties();\n    properties.coordinates = flatCoordinates;\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color',\n    'fill',\n    'outline',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n    var linearRings = polygon.getLinearRings();\n    var outerRing = linearRings.shift();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // inner rings\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, INNER_BOUNDARY_NODE_FACTORY, linearRings, objectStack);\n    // outer ring\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, OUTER_BOUNDARY_NODE_FACTORY, [outerRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'fill': makeChildAppender(writeBooleanTextNode),\n    'outline': makeChildAppender(writeBooleanTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var fill = style.getFill();\n    var stroke = style.getStroke();\n    var properties = {\n        'color': fill ? fill.getColor() : undefined,\n        'fill': fill ? undefined : false,\n        'outline': stroke ? undefined : false,\n    };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n    // the Math is to remove any excess decimals created by float arithmetic\n    writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'IconStyle',\n    'LabelStyle',\n    'LineStyle',\n    'PolyStyle',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle),\n});\n/**\n * @param {Node} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    if (styles.pointStyles.length) {\n        var textStyle = styles.pointStyles[0].getText();\n        if (textStyle) {\n            properties['LabelStyle'] = textStyle;\n        }\n        var imageStyle = styles.pointStyles[0].getImage();\n        if (imageStyle &&\n            typeof ( /** @type {?} */(imageStyle).getSrc) === 'function') {\n            properties['IconStyle'] = imageStyle;\n        }\n    }\n    if (styles.lineStyles.length) {\n        var strokeStyle = styles.lineStyles[0].getStroke();\n        if (strokeStyle) {\n            properties['LineStyle'] = strokeStyle;\n        }\n    }\n    if (styles.polyStyles.length) {\n        var strokeStyle = styles.polyStyles[0].getStroke();\n        if (strokeStyle && !properties['LineStyle']) {\n            properties['LineStyle'] = strokeStyle;\n        }\n        properties['PolyStyle'] = styles.polyStyles[0];\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n    node.setAttribute('x', String(vec2.x));\n    node.setAttribute('y', String(vec2.y));\n    node.setAttribute('xunits', vec2.xunits);\n    node.setAttribute('yunits', vec2.yunits);\n}\nexport default KML;\n//# sourceMappingURL=KML.js.map","/**\n * @module ol/webgl\n */\n/**\n * Constants taken from goog.webgl\n */\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport var ARRAY_BUFFER = 0x8892;\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var STREAM_DRAW = 0x88e0;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var STATIC_DRAW = 0x88e4;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var DYNAMIC_DRAW = 0x88e8;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n/** end of goog.webgl constants\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n    var ii = CONTEXT_IDS.length;\n    for (var i = 0; i < ii; ++i) {\n        try {\n            var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n            if (context) {\n                return /** @type {!WebGLRenderingContext} */ (context);\n            }\n        }\n        catch (e) {\n            // pass\n        }\n    }\n    return null;\n}\n/**\n * @type {Array<string>}\n */\nvar supportedExtensions;\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n    if (!supportedExtensions) {\n        var canvas = document.createElement('canvas');\n        var gl = getContext(canvas);\n        if (gl) {\n            supportedExtensions = gl.getSupportedExtensions();\n        }\n    }\n    return supportedExtensions;\n}\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/webgl/Buffer\n */\nimport { ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER } from '../webgl.js';\nimport { DYNAMIC_DRAW, STATIC_DRAW, STREAM_DRAW } from '../webgl.js';\nimport { assert } from '../asserts.js';\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport var BufferUsage = {\n    STATIC_DRAW: STATIC_DRAW,\n    STREAM_DRAW: STREAM_DRAW,\n    DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n * @api\n */\nvar WebGLArrayBuffer = /** @class */ (function () {\n    /**\n     * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n     * @param {number=} opt_usage Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n     * Default is `DYNAMIC_DRAW`.\n     */\n    function WebGLArrayBuffer(type, opt_usage) {\n        /**\n         * @private\n         * @type {Float32Array|Uint32Array}\n         */\n        this.array = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.type = type;\n        assert(type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER, 62);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.usage = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n    }\n    /**\n     * Populates the buffer with an array of the given size (all values will be zeroes).\n     * @param {number} size Array size\n     */\n    WebGLArrayBuffer.prototype.ofSize = function (size) {\n        this.array = new (getArrayClassForType(this.type))(size);\n    };\n    /**\n     * Populates the buffer with an array of the given size (all values will be zeroes).\n     * @param {Array<number>} array Numerical array\n     */\n    WebGLArrayBuffer.prototype.fromArray = function (array) {\n        this.array = getArrayClassForType(this.type).from(array);\n    };\n    /**\n     * Populates the buffer with a raw binary array buffer.\n     * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n     * initialized for the same typed array class.\n     */\n    WebGLArrayBuffer.prototype.fromArrayBuffer = function (buffer) {\n        this.array = new (getArrayClassForType(this.type))(buffer);\n    };\n    /**\n     * @return {number} Buffer type.\n     */\n    WebGLArrayBuffer.prototype.getType = function () {\n        return this.type;\n    };\n    /**\n     * Will return null if the buffer was not initialized\n     * @return {Float32Array|Uint32Array} Array.\n     */\n    WebGLArrayBuffer.prototype.getArray = function () {\n        return this.array;\n    };\n    /**\n     * @return {number} Usage.\n     */\n    WebGLArrayBuffer.prototype.getUsage = function () {\n        return this.usage;\n    };\n    /**\n     * Will return 0 if the buffer is not initialized\n     * @return {number} Array size\n     */\n    WebGLArrayBuffer.prototype.getSize = function () {\n        return this.array ? this.array.length : 0;\n    };\n    return WebGLArrayBuffer;\n}());\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @returns {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n    switch (type) {\n        case ARRAY_BUFFER:\n            return Float32Array;\n        case ELEMENT_ARRAY_BUFFER:\n            return Uint32Array;\n        default:\n            return Float32Array;\n    }\n}\nexport default WebGLArrayBuffer;\n//# sourceMappingURL=Buffer.js.map","/**\n * @module ol/webgl/ContextEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    LOST: 'webglcontextlost',\n    RESTORED: 'webglcontextrestored',\n};\n//# sourceMappingURL=ContextEventType.js.map","/**\n * @module ol/webgl/PostProcessingPass\n */\nvar DEFAULT_VERTEX_SHADER = \"\\n  precision mediump float;\\n  \\n  attribute vec2 a_position;\\n  varying vec2 v_texCoord;\\n  varying vec2 v_screenCoord;\\n  \\n  uniform vec2 u_screenSize;\\n   \\n  void main() {\\n    v_texCoord = a_position * 0.5 + 0.5;\\n    v_screenCoord = v_texCoord * u_screenSize;\\n    gl_Position = vec4(a_position, 0.0, 1.0);\\n  }\\n\";\nvar DEFAULT_FRAGMENT_SHADER = \"\\n  precision mediump float;\\n   \\n  uniform sampler2D u_image;\\n   \\n  varying vec2 v_texCoord;\\n   \\n  void main() {\\n    gl_FragColor = texture2D(u_image, v_texCoord);\\n  }\\n\";\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {number} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord);\n *   }\n *   ```\n *\n * @api\n */\nvar WebGLPostProcessingPass = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function WebGLPostProcessingPass(options) {\n        this.gl_ = options.webGlContext;\n        var gl = this.gl_;\n        this.scaleRatio_ = options.scaleRatio || 1;\n        this.renderTargetTexture_ = gl.createTexture();\n        this.renderTargetTextureSize_ = null;\n        this.frameBuffer_ = gl.createFramebuffer();\n        // compile the program for the frame buffer\n        // TODO: make compilation errors show up\n        var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, options.vertexShader || DEFAULT_VERTEX_SHADER);\n        gl.compileShader(vertexShader);\n        var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, options.fragmentShader || DEFAULT_FRAGMENT_SHADER);\n        gl.compileShader(fragmentShader);\n        this.renderTargetProgram_ = gl.createProgram();\n        gl.attachShader(this.renderTargetProgram_, vertexShader);\n        gl.attachShader(this.renderTargetProgram_, fragmentShader);\n        gl.linkProgram(this.renderTargetProgram_);\n        // bind the vertices buffer for the frame buffer\n        this.renderTargetVerticesBuffer_ = gl.createBuffer();\n        var verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verticesArray), gl.STATIC_DRAW);\n        this.renderTargetAttribLocation_ = gl.getAttribLocation(this.renderTargetProgram_, 'a_position');\n        this.renderTargetUniformLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_screenSize');\n        this.renderTargetTextureLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_image');\n        /**\n         * Holds info about custom uniforms used in the post processing pass\n         * @type {Array<UniformInternalDescription>}\n         * @private\n         */\n        this.uniforms_ = [];\n        options.uniforms &&\n            Object.keys(options.uniforms).forEach(function (name) {\n                this.uniforms_.push({\n                    value: options.uniforms[name],\n                    location: gl.getUniformLocation(this.renderTargetProgram_, name),\n                });\n            }.bind(this));\n    }\n    /**\n     * Get the WebGL rendering context\n     * @return {WebGLRenderingContext} The rendering context.\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.getGL = function () {\n        return this.gl_;\n    };\n    /**\n     * Initialize the render target texture of the post process, make sure it is at the\n     * right size and bind it as a render target for the next draw calls.\n     * The last step to be initialized will be the one where the primitives are rendered.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.init = function (frameState) {\n        var gl = this.getGL();\n        var textureSize = [\n            gl.drawingBufferWidth * this.scaleRatio_,\n            gl.drawingBufferHeight * this.scaleRatio_,\n        ];\n        // rendering goes to my buffer\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n        gl.viewport(0, 0, textureSize[0], textureSize[1]);\n        // if size has changed: adjust canvas & render target texture\n        if (!this.renderTargetTextureSize_ ||\n            this.renderTargetTextureSize_[0] !== textureSize[0] ||\n            this.renderTargetTextureSize_[1] !== textureSize[1]) {\n            this.renderTargetTextureSize_ = textureSize;\n            // create a new texture\n            var level = 0;\n            var internalFormat = gl.RGBA;\n            var border = 0;\n            var format = gl.RGBA;\n            var type = gl.UNSIGNED_BYTE;\n            var data = null;\n            gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, textureSize[0], textureSize[1], border, format, type, data);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            // bind the texture to the framebuffer\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.renderTargetTexture_, 0);\n        }\n    };\n    /**\n     * Render to the next postprocessing pass (or to the canvas if final pass).\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.apply = function (frameState, nextPass) {\n        var gl = this.getGL();\n        var size = frameState.size;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, nextPass ? nextPass.getFrameBuffer() : null);\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n        // render the frame buffer to the canvas\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n        gl.useProgram(this.renderTargetProgram_);\n        gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n        gl.vertexAttribPointer(this.renderTargetAttribLocation_, 2, gl.FLOAT, false, 0, 0);\n        gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n        gl.uniform1i(this.renderTargetTextureLocation_, 0);\n        this.applyUniforms(frameState);\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n    };\n    /**\n     * @returns {WebGLFramebuffer} Frame buffer\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.getFrameBuffer = function () {\n        return this.frameBuffer_;\n    };\n    /**\n     * Sets the custom uniforms based on what was given in the constructor.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLPostProcessingPass.prototype.applyUniforms = function (frameState) {\n        var gl = this.getGL();\n        var value;\n        var textureSlot = 1;\n        this.uniforms_.forEach(function (uniform) {\n            value =\n                typeof uniform.value === 'function'\n                    ? uniform.value(frameState)\n                    : uniform.value;\n            // apply value based on type\n            if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n                // create a texture & put data\n                if (!uniform.texture) {\n                    uniform.texture = gl.createTexture();\n                }\n                gl.activeTexture(gl[\"TEXTURE\" + textureSlot]);\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                if (value instanceof ImageData) {\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, value.width, value.height, 0, gl.UNSIGNED_BYTE, new Uint8Array(value.data));\n                }\n                else {\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n                }\n                // fill texture slots\n                gl.uniform1i(uniform.location, textureSlot++);\n            }\n            else if (Array.isArray(value)) {\n                switch (value.length) {\n                    case 2:\n                        gl.uniform2f(uniform.location, value[0], value[1]);\n                        return;\n                    case 3:\n                        gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n                        return;\n                    case 4:\n                        gl.uniform4f(uniform.location, value[0], value[1], value[2], value[3]);\n                        return;\n                    default:\n                        return;\n                }\n            }\n            else if (typeof value === 'number') {\n                gl.uniform1f(uniform.location, value);\n            }\n        });\n    };\n    return WebGLPostProcessingPass;\n}());\nexport default WebGLPostProcessingPass;\n//# sourceMappingURL=PostProcessingPass.js.map","/**\n * @module ol/vec/mat4\n */\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n    mat4[0] = transform[0];\n    mat4[1] = transform[1];\n    mat4[4] = transform[2];\n    mat4[5] = transform[3];\n    mat4[12] = transform[4];\n    mat4[13] = transform[5];\n    return mat4;\n}\n//# sourceMappingURL=mat4.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport { FLOAT, UNSIGNED_BYTE, UNSIGNED_INT, UNSIGNED_SHORT, getContext, getSupportedExtensions, } from '../webgl.js';\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\nimport { compose as composeTransform, create as createTransform, reset as resetTransform, rotate as rotateTransform, scale as scaleTransform, } from '../transform.js';\nimport { create, fromTransform } from '../vec/mat4.js';\nimport { getUid } from '../util.js';\nimport { includes } from '../array.js';\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer\n * @property {WebGLBuffer} webGlBuffer\n */\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport var ShaderType = {\n    FRAGMENT_SHADER: 0x8b30,\n    VERTEX_SHADER: 0x8b31,\n};\n/**\n * Uniform names used in the default shaders: `PROJECTION_MATRIX`, `OFFSET_SCALE_MATRIX`.\n * and `OFFSET_ROTATION_MATRIX`.\n * @enum {string}\n */\nexport var DefaultUniform = {\n    PROJECTION_MATRIX: 'u_projectionMatrix',\n    OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n    OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n    TIME: 'u_time',\n    ZOOM: 'u_zoom',\n    RESOLUTION: 'u_resolution',\n};\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport var AttributeType = {\n    UNSIGNED_BYTE: UNSIGNED_BYTE,\n    UNSIGNED_SHORT: UNSIGNED_SHORT,\n    UNSIGNED_INT: UNSIGNED_INT,\n    FLOAT: FLOAT,\n};\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\n */\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} Options\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue=} value Value\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Use {@link enableAttributeArray_} and either\n *   the default attribute names in {@link module:ol/webgl/Helper.DefaultAttrib} or custom ones.\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n *\n * @api\n */\nvar WebGLHelper = /** @class */ (function (_super) {\n    __extends(WebGLHelper, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function WebGLHelper(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /** @private */\n        _this.boundHandleWebGLContextLost_ = _this.handleWebGLContextLost.bind(_this);\n        /** @private */\n        _this.boundHandleWebGLContextRestored_ = _this.handleWebGLContextRestored.bind(_this);\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = document.createElement('canvas');\n        _this.canvas_.style.position = 'absolute';\n        _this.canvas_.style.left = '0';\n        /**\n         * @private\n         * @type {WebGLRenderingContext}\n         */\n        _this.gl_ = getContext(_this.canvas_);\n        var gl = _this.getGL();\n        /**\n         * @private\n         * @type {!Object<string, BufferCacheEntry>}\n         */\n        _this.bufferCache_ = {};\n        /**\n         * @private\n         * @type {WebGLProgram}\n         */\n        _this.currentProgram_ = null;\n        assert(includes(getSupportedExtensions(), 'OES_element_index_uint'), 63);\n        gl.getExtension('OES_element_index_uint');\n        _this.canvas_.addEventListener(ContextEventType.LOST, _this.boundHandleWebGLContextLost_);\n        _this.canvas_.addEventListener(ContextEventType.RESTORED, _this.boundHandleWebGLContextRestored_);\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.offsetRotateMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.offsetScaleMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.tmpMat4_ = create();\n        /**\n         * @private\n         * @type {Object.<string, WebGLUniformLocation>}\n         */\n        _this.uniformLocations_ = {};\n        /**\n         * @private\n         * @type {Object.<string, number>}\n         */\n        _this.attribLocations_ = {};\n        /**\n         * Holds info about custom uniforms used in the post processing pass.\n         * If the uniform is a texture, the WebGL Texture object will be stored here.\n         * @type {Array<UniformInternalDescription>}\n         * @private\n         */\n        _this.uniforms_ = [];\n        if (options.uniforms) {\n            for (var name_1 in options.uniforms) {\n                _this.uniforms_.push({\n                    name: name_1,\n                    value: options.uniforms[name_1],\n                });\n            }\n        }\n        /**\n         * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n         * options. If no post process was given, a default one is used (so as not to have to make an exception to\n         * the frame buffer logic).\n         * @type {Array<WebGLPostProcessingPass>}\n         * @private\n         */\n        _this.postProcessPasses_ = options.postProcesses\n            ? options.postProcesses.map(function (options) {\n                return new WebGLPostProcessingPass({\n                    webGlContext: gl,\n                    scaleRatio: options.scaleRatio,\n                    vertexShader: options.vertexShader,\n                    fragmentShader: options.fragmentShader,\n                    uniforms: options.uniforms,\n                });\n            })\n            : [new WebGLPostProcessingPass({ webGlContext: gl })];\n        /**\n         * @type {string|null}\n         * @private\n         */\n        _this.shaderCompileErrors_ = null;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.startTime_ = Date.now();\n        return _this;\n    }\n    /**\n     * Just bind the buffer if it's in the cache. Otherwise create\n     * the WebGL buffer, bind it, populate it, and add an entry to\n     * the cache.\n     * @param {import(\"./Buffer\").default} buffer Buffer.\n     * @api\n     */\n    WebGLHelper.prototype.bindBuffer = function (buffer) {\n        var gl = this.getGL();\n        var bufferKey = getUid(buffer);\n        var bufferCache = this.bufferCache_[bufferKey];\n        if (!bufferCache) {\n            var webGlBuffer = gl.createBuffer();\n            bufferCache = {\n                buffer: buffer,\n                webGlBuffer: webGlBuffer,\n            };\n            this.bufferCache_[bufferKey] = bufferCache;\n        }\n        gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n    };\n    /**\n     * Update the data contained in the buffer array; this is required for the\n     * new data to be rendered\n     * @param {import(\"./Buffer\").default} buffer Buffer.\n     * @api\n     */\n    WebGLHelper.prototype.flushBufferData = function (buffer) {\n        var gl = this.getGL();\n        this.bindBuffer(buffer);\n        gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n    };\n    /**\n     * @param {import(\"./Buffer.js\").default} buf Buffer.\n     */\n    WebGLHelper.prototype.deleteBuffer = function (buf) {\n        var gl = this.getGL();\n        var bufferKey = getUid(buf);\n        var bufferCacheEntry = this.bufferCache_[bufferKey];\n        if (!gl.isContextLost()) {\n            gl.deleteBuffer(bufferCacheEntry.buffer);\n        }\n        delete this.bufferCache_[bufferKey];\n    };\n    /**\n     * Clean up.\n     */\n    WebGLHelper.prototype.disposeInternal = function () {\n        this.canvas_.removeEventListener(ContextEventType.LOST, this.boundHandleWebGLContextLost_);\n        this.canvas_.removeEventListener(ContextEventType.RESTORED, this.boundHandleWebGLContextRestored_);\n    };\n    /**\n     * Clear the buffer & set the viewport to draw.\n     * Post process passes will be initialized here, the first one being bound as a render target for\n     * subsequent draw calls.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLHelper.prototype.prepareDraw = function (frameState) {\n        var gl = this.getGL();\n        var canvas = this.getCanvas();\n        var size = frameState.size;\n        var pixelRatio = frameState.pixelRatio;\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n        gl.useProgram(this.currentProgram_);\n        // loop backwards in post processes list\n        for (var i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n            this.postProcessPasses_[i].init(frameState);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.useProgram(this.currentProgram_);\n        this.applyFrameState(frameState);\n        this.applyUniforms(frameState);\n    };\n    /**\n     * Clear the render target & bind it for future draw operations.\n     * This is similar to `prepareDraw`, only post processes will not be applied.\n     * Note: the whole viewport will be drawn to the render target, regardless of its size.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n     * @param {boolean} [opt_disableAlphaBlend] If true, no alpha blending will happen.\n     */\n    WebGLHelper.prototype.prepareDrawToRenderTarget = function (frameState, renderTarget, opt_disableAlphaBlend) {\n        var gl = this.getGL();\n        var size = renderTarget.getSize();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n        gl.viewport(0, 0, size[0], size[1]);\n        gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, opt_disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n        gl.useProgram(this.currentProgram_);\n        this.applyFrameState(frameState);\n        this.applyUniforms(frameState);\n    };\n    /**\n     * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n     * @param {number} start Start index.\n     * @param {number} end End index.\n     * @api\n     */\n    WebGLHelper.prototype.drawElements = function (start, end) {\n        var gl = this.getGL();\n        var elementType = gl.UNSIGNED_INT;\n        var elementSize = 4;\n        var numItems = end - start;\n        var offsetInBytes = start * elementSize;\n        gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n    };\n    /**\n     * Apply the successive post process passes which will eventually render to the actual canvas.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLHelper.prototype.finalizeDraw = function (frameState) {\n        // apply post processes using the next one as target\n        for (var i = 0; i < this.postProcessPasses_.length; i++) {\n            this.postProcessPasses_[i].apply(frameState, this.postProcessPasses_[i + 1] || null);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Canvas.\n     * @api\n     */\n    WebGLHelper.prototype.getCanvas = function () {\n        return this.canvas_;\n    };\n    /**\n     * Get the WebGL rendering context\n     * @return {WebGLRenderingContext} The rendering context.\n     * @api\n     */\n    WebGLHelper.prototype.getGL = function () {\n        return this.gl_;\n    };\n    /**\n     * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLHelper.prototype.applyFrameState = function (frameState) {\n        var size = frameState.size;\n        var rotation = frameState.viewState.rotation;\n        var offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n        scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n        var offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n        if (rotation !== 0) {\n            rotateTransform(offsetRotateMatrix, -rotation);\n        }\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_SCALE_MATRIX, fromTransform(this.tmpMat4_, offsetScaleMatrix));\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_ROTATION_MATRIX, fromTransform(this.tmpMat4_, offsetRotateMatrix));\n        this.setUniformFloatValue(DefaultUniform.TIME, (Date.now() - this.startTime_) * 0.001);\n        this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n        this.setUniformFloatValue(DefaultUniform.RESOLUTION, frameState.viewState.resolution);\n    };\n    /**\n     * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLHelper.prototype.applyUniforms = function (frameState) {\n        var gl = this.getGL();\n        var value;\n        var textureSlot = 0;\n        this.uniforms_.forEach(function (uniform) {\n            value =\n                typeof uniform.value === 'function'\n                    ? uniform.value(frameState)\n                    : uniform.value;\n            // apply value based on type\n            if (value instanceof HTMLCanvasElement ||\n                value instanceof HTMLImageElement ||\n                value instanceof ImageData) {\n                // create a texture & put data\n                if (!uniform.texture) {\n                    uniform.prevValue = undefined;\n                    uniform.texture = gl.createTexture();\n                }\n                gl.activeTexture(gl[\"TEXTURE\" + textureSlot]);\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                var imageReady = !(value instanceof HTMLImageElement) ||\n                    /** @type {HTMLImageElement} */ (value).complete;\n                if (imageReady && uniform.prevValue !== value) {\n                    uniform.prevValue = value;\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n                }\n                // fill texture slots by increasing index\n                gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n            }\n            else if (Array.isArray(value) && value.length === 6) {\n                this.setUniformMatrixValue(uniform.name, fromTransform(this.tmpMat4_, value));\n            }\n            else if (Array.isArray(value) && value.length <= 4) {\n                switch (value.length) {\n                    case 2:\n                        gl.uniform2f(this.getUniformLocation(uniform.name), value[0], value[1]);\n                        return;\n                    case 3:\n                        gl.uniform3f(this.getUniformLocation(uniform.name), value[0], value[1], value[2]);\n                        return;\n                    case 4:\n                        gl.uniform4f(this.getUniformLocation(uniform.name), value[0], value[1], value[2], value[3]);\n                        return;\n                    default:\n                        return;\n                }\n            }\n            else if (typeof value === 'number') {\n                gl.uniform1f(this.getUniformLocation(uniform.name), value);\n            }\n        }.bind(this));\n    };\n    /**\n     * Use a program.  If the program is already in use, this will return `false`.\n     * @param {WebGLProgram} program Program.\n     * @return {boolean} Changed.\n     * @api\n     */\n    WebGLHelper.prototype.useProgram = function (program) {\n        if (program == this.currentProgram_) {\n            return false;\n        }\n        else {\n            var gl = this.getGL();\n            gl.useProgram(program);\n            this.currentProgram_ = program;\n            this.uniformLocations_ = {};\n            this.attribLocations_ = {};\n            return true;\n        }\n    };\n    /**\n     * Will attempt to compile a vertex or fragment shader based on source\n     * On error, the shader will be returned but\n     * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n     * Use `gl.getShaderInfoLog(shader)` to have details\n     * @param {string} source Shader source\n     * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n     * @return {WebGLShader} Shader object\n     */\n    WebGLHelper.prototype.compileShader = function (source, type) {\n        var gl = this.getGL();\n        var shader = gl.createShader(type);\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        return shader;\n    };\n    /**\n     * Create a program for a vertex and fragment shader. The shaders compilation may have failed:\n     * use `WebGLHelper.getShaderCompileErrors()`to have details if any.\n     * @param {string} fragmentShaderSource Fragment shader source.\n     * @param {string} vertexShaderSource Vertex shader source.\n     * @return {WebGLProgram} Program\n     * @api\n     */\n    WebGLHelper.prototype.getProgram = function (fragmentShaderSource, vertexShaderSource) {\n        var gl = this.getGL();\n        var fragmentShader = this.compileShader(fragmentShaderSource, gl.FRAGMENT_SHADER);\n        var vertexShader = this.compileShader(vertexShaderSource, gl.VERTEX_SHADER);\n        this.shaderCompileErrors_ = null;\n        if (gl.getShaderInfoLog(fragmentShader)) {\n            this.shaderCompileErrors_ = \"Fragment shader compilation failed:\\n\" + gl.getShaderInfoLog(fragmentShader);\n        }\n        if (gl.getShaderInfoLog(vertexShader)) {\n            this.shaderCompileErrors_ =\n                (this.shaderCompileErrors_ || '') +\n                    (\"Vertex shader compilation failed:\\n\" + gl.getShaderInfoLog(vertexShader));\n        }\n        var program = gl.createProgram();\n        gl.attachShader(program, fragmentShader);\n        gl.attachShader(program, vertexShader);\n        gl.linkProgram(program);\n        return program;\n    };\n    /**\n     * Will return the last shader compilation errors. If no error happened, will return null;\n     * @return {string|null} Errors description, or null if last compilation was successful\n     * @api\n     */\n    WebGLHelper.prototype.getShaderCompileErrors = function () {\n        return this.shaderCompileErrors_;\n    };\n    /**\n     * Will get the location from the shader or the cache\n     * @param {string} name Uniform name\n     * @return {WebGLUniformLocation} uniformLocation\n     * @api\n     */\n    WebGLHelper.prototype.getUniformLocation = function (name) {\n        if (this.uniformLocations_[name] === undefined) {\n            this.uniformLocations_[name] = this.getGL().getUniformLocation(this.currentProgram_, name);\n        }\n        return this.uniformLocations_[name];\n    };\n    /**\n     * Will get the location from the shader or the cache\n     * @param {string} name Attribute name\n     * @return {number} attribLocation\n     * @api\n     */\n    WebGLHelper.prototype.getAttributeLocation = function (name) {\n        if (this.attribLocations_[name] === undefined) {\n            this.attribLocations_[name] = this.getGL().getAttribLocation(this.currentProgram_, name);\n        }\n        return this.attribLocations_[name];\n    };\n    /**\n     * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\n     * The resulting transform can be used to convert world space coordinates to view coordinates.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../transform\").Transform} transform Transform to update.\n     * @return {import(\"../transform\").Transform} The updated transform object.\n     * @api\n     */\n    WebGLHelper.prototype.makeProjectionTransform = function (frameState, transform) {\n        var size = frameState.size;\n        var rotation = frameState.viewState.rotation;\n        var resolution = frameState.viewState.resolution;\n        var center = frameState.viewState.center;\n        resetTransform(transform);\n        composeTransform(transform, 0, 0, 2 / (resolution * size[0]), 2 / (resolution * size[1]), -rotation, -center[0], -center[1]);\n        return transform;\n    };\n    /**\n     * Give a value for a standard float uniform\n     * @param {string} uniform Uniform name\n     * @param {number} value Value\n     * @api\n     */\n    WebGLHelper.prototype.setUniformFloatValue = function (uniform, value) {\n        this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n    };\n    /**\n     * Give a value for a standard matrix4 uniform\n     * @param {string} uniform Uniform name\n     * @param {Array<number>} value Matrix value\n     * @api\n     */\n    WebGLHelper.prototype.setUniformMatrixValue = function (uniform, value) {\n        this.getGL().uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n    };\n    /**\n     * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n     * internally.\n     * @param {string} attribName Attribute name\n     * @param {number} size Number of components per attributes\n     * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n     * @param {number} stride Stride in bytes (0 means attribs are packed)\n     * @param {number} offset Offset in bytes\n     * @private\n     */\n    WebGLHelper.prototype.enableAttributeArray_ = function (attribName, size, type, stride, offset) {\n        var location = this.getAttributeLocation(attribName);\n        // the attribute has not been found in the shaders; do not enable it\n        if (location < 0) {\n            return;\n        }\n        this.getGL().enableVertexAttribArray(location);\n        this.getGL().vertexAttribPointer(location, size, type, false, stride, offset);\n    };\n    /**\n     * Will enable the following attributes to be read from the currently bound buffer,\n     * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n     * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n     * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n     * @api\n     */\n    WebGLHelper.prototype.enableAttributes = function (attributes) {\n        var stride = computeAttributesStride(attributes);\n        var offset = 0;\n        for (var i = 0; i < attributes.length; i++) {\n            var attr = attributes[i];\n            this.enableAttributeArray_(attr.name, attr.size, attr.type || FLOAT, stride, offset);\n            offset += attr.size * getByteSizeFromType(attr.type);\n        }\n    };\n    /**\n     * WebGL context was lost\n     * @private\n     */\n    WebGLHelper.prototype.handleWebGLContextLost = function () {\n        clear(this.bufferCache_);\n        this.currentProgram_ = null;\n    };\n    /**\n     * WebGL context was restored\n     * @private\n     */\n    WebGLHelper.prototype.handleWebGLContextRestored = function () { };\n    /**\n     * Will create or reuse a given webgl texture and apply the given size. If no image data\n     * specified, the texture will be empty, otherwise image data will be used and the `size`\n     * parameter will be ignored.\n     * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n     * @param {Array<number>} size Expected size of the texture\n     * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [opt_data] Image data/object to bind to the texture\n     * @param {WebGLTexture} [opt_texture] Existing texture to reuse\n     * @return {WebGLTexture} The generated texture\n     * @api\n     */\n    WebGLHelper.prototype.createTexture = function (size, opt_data, opt_texture) {\n        var gl = this.getGL();\n        var texture = opt_texture || gl.createTexture();\n        // set params & size\n        var level = 0;\n        var internalFormat = gl.RGBA;\n        var border = 0;\n        var format = gl.RGBA;\n        var type = gl.UNSIGNED_BYTE;\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        if (opt_data) {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, opt_data);\n        }\n        else {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, size[0], size[1], border, format, type, null);\n        }\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        return texture;\n    };\n    return WebGLHelper;\n}(Disposable));\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @returns {number} Stride, ie amount of values for each vertex in the vertex buffer\n * @api\n */\nexport function computeAttributesStride(attributes) {\n    var stride = 0;\n    for (var i = 0; i < attributes.length; i++) {\n        var attr = attributes[i];\n        stride += attr.size * getByteSizeFromType(attr.type);\n    }\n    return stride;\n}\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @returns {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n    switch (type) {\n        case AttributeType.UNSIGNED_BYTE:\n            return Uint8Array.BYTES_PER_ELEMENT;\n        case AttributeType.UNSIGNED_SHORT:\n            return Uint16Array.BYTES_PER_ELEMENT;\n        case AttributeType.UNSIGNED_INT:\n            return Uint32Array.BYTES_PER_ELEMENT;\n        case AttributeType.FLOAT:\n        default:\n            return Float32Array.BYTES_PER_ELEMENT;\n    }\n}\nexport default WebGLHelper;\n//# sourceMappingURL=Helper.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\n/**\n * @enum {string}\n */\nexport var WebGLWorkerMessageType = {\n    GENERATE_BUFFERS: 'GENERATE_BUFFERS',\n};\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions Render instructions raw binary buffer.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {number} [customAttributesCount] Amount of custom attributes count in the render instructions.\n */\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar WebGLLayerRenderer = /** @class */ (function (_super) {\n    __extends(WebGLLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     * @param {Options=} [opt_options] Options.\n     */\n    function WebGLLayerRenderer(layer, opt_options) {\n        var _this = _super.call(this, layer) || this;\n        var options = opt_options || {};\n        /**\n         * @type {WebGLHelper}\n         * @protected\n         */\n        _this.helper = new WebGLHelper({\n            postProcesses: options.postProcesses,\n            uniforms: options.uniforms,\n        });\n        if (options.className !== undefined) {\n            _this.helper.getCanvas().className = options.className;\n        }\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    WebGLLayerRenderer.prototype.disposeInternal = function () {\n        this.helper.dispose();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Will return the last shader compilation errors. If no error happened, will return null;\n     * @return {string|null} Errors, or null if last compilation was successful\n     * @api\n     */\n    WebGLLayerRenderer.prototype.getShaderCompileErrors = function () {\n        return this.helper.getShaderCompileErrors();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLLayerRenderer.prototype.dispatchRenderEvent_ = function (type, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            // RenderEvent does not get a context or an inversePixelTransform, because WebGL allows much less direct editing than Canvas2d does.\n            var event_1 = new RenderEvent(type, null, frameState, null);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    WebGLLayerRenderer.prototype.preRender = function (frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, frameState);\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    WebGLLayerRenderer.prototype.postRender = function (frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, frameState);\n    };\n    return WebGLLayerRenderer;\n}(LayerRenderer));\nvar tmpArray_ = [];\nvar bufferPositions_ = { vertexPosition: 0, indexPosition: 0 };\nfunction writePointVertex(buffer, pos, x, y, index) {\n    buffer[pos + 0] = x;\n    buffer[pos + 1] = y;\n    buffer[pos + 2] = index;\n}\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesCount Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(instructions, elementIndex, vertexBuffer, indexBuffer, customAttributesCount, bufferPositions) {\n    // This is for x, y and index\n    var baseVertexAttrsCount = 3;\n    var baseInstructionsCount = 2;\n    var stride = baseVertexAttrsCount + customAttributesCount;\n    var x = instructions[elementIndex + 0];\n    var y = instructions[elementIndex + 1];\n    // read custom numerical attributes on the feature\n    var customAttrs = tmpArray_;\n    customAttrs.length = customAttributesCount;\n    for (var i = 0; i < customAttrs.length; i++) {\n        customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n    }\n    var vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n    var iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n    var baseIndex = vPos / stride;\n    // push vertices for each of the four quad corners (first standard then custom attributes)\n    writePointVertex(vertexBuffer, vPos, x, y, 0);\n    customAttrs.length &&\n        vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n    vPos += stride;\n    writePointVertex(vertexBuffer, vPos, x, y, 1);\n    customAttrs.length &&\n        vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n    vPos += stride;\n    writePointVertex(vertexBuffer, vPos, x, y, 2);\n    customAttrs.length &&\n        vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n    vPos += stride;\n    writePointVertex(vertexBuffer, vPos, x, y, 3);\n    customAttrs.length &&\n        vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n    vPos += stride;\n    indexBuffer[iPos++] = baseIndex;\n    indexBuffer[iPos++] = baseIndex + 1;\n    indexBuffer[iPos++] = baseIndex + 3;\n    indexBuffer[iPos++] = baseIndex + 1;\n    indexBuffer[iPos++] = baseIndex + 2;\n    indexBuffer[iPos++] = baseIndex + 3;\n    bufferPositions_.vertexPosition = vPos;\n    bufferPositions_.indexPosition = iPos;\n    return bufferPositions_;\n}\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n    var canvas = document.createElement('canvas');\n    var image = canvas.getContext('2d').createImageData(1, 1);\n    image.data[0] = 255;\n    image.data[1] = 255;\n    image.data[2] = 255;\n    image.data[3] = 255;\n    return image;\n}\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [opt_array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, opt_array) {\n    var array = opt_array || [];\n    var radix = 256;\n    var divide = radix - 1;\n    array[0] = Math.floor(id / radix / radix / radix) / divide;\n    array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n    array[2] = (Math.floor(id / radix) % radix) / divide;\n    array[3] = (id % radix) / divide;\n    return array;\n}\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n    var id = 0;\n    var radix = 256;\n    var mult = radix - 1;\n    id += Math.round(color[0] * radix * radix * radix * mult);\n    id += Math.round(color[1] * radix * radix * mult);\n    id += Math.round(color[2] * radix * mult);\n    id += Math.round(color[3] * mult);\n    return id;\n}\nexport default WebGLLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport { equals } from '../array.js';\n// for pixel color reading\nvar tmpArray4 = new Uint8Array(4);\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n * @api\n */\nvar WebGLRenderTarget = /** @class */ (function () {\n    /**\n     * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n     * @param {Array<number>} [opt_size] Expected size of the render target texture; note: this can be changed later on.\n     */\n    function WebGLRenderTarget(helper, opt_size) {\n        /**\n         * @private\n         * @type {import(\"./Helper.js\").default}\n         */\n        this.helper_ = helper;\n        var gl = helper.getGL();\n        /**\n         * @private\n         * @type {WebGLTexture}\n         */\n        this.texture_ = gl.createTexture();\n        /**\n         * @private\n         * @type {WebGLFramebuffer}\n         */\n        this.framebuffer_ = gl.createFramebuffer();\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.size_ = opt_size || [1, 1];\n        /**\n         * @type {Uint8Array}\n         * @private\n         */\n        this.data_ = new Uint8Array(0);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.dataCacheDirty_ = true;\n        this.updateSize_();\n    }\n    /**\n     * Changes the size of the render target texture. Note: will do nothing if the size\n     * is already the same.\n     * @param {Array<number>} size Expected size of the render target texture\n     * @api\n     */\n    WebGLRenderTarget.prototype.setSize = function (size) {\n        if (equals(size, this.size_)) {\n            return;\n        }\n        this.size_[0] = size[0];\n        this.size_[1] = size[1];\n        this.updateSize_();\n    };\n    /**\n     * Returns the size of the render target texture\n     * @return {Array<number>} Size of the render target texture\n     * @api\n     */\n    WebGLRenderTarget.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n     * render target into memory, which is an expensive operation.\n     * This content will be kept in cache but should be cleared after each new render.\n     * @api\n     */\n    WebGLRenderTarget.prototype.clearCachedData = function () {\n        this.dataCacheDirty_ = true;\n    };\n    /**\n     * Returns the full content of the frame buffer as a series of r, g, b, a components\n     * in the 0-255 range (unsigned byte).\n     * @return {Uint8Array} Integer array of color values\n     * @api\n     */\n    WebGLRenderTarget.prototype.readAll = function () {\n        if (this.dataCacheDirty_) {\n            var size = this.size_;\n            var gl = this.helper_.getGL();\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n            gl.readPixels(0, 0, size[0], size[1], gl.RGBA, gl.UNSIGNED_BYTE, this.data_);\n            this.dataCacheDirty_ = false;\n        }\n        return this.data_;\n    };\n    /**\n     * Reads one pixel of the frame buffer as an array of r, g, b, a components\n     * in the 0-255 range (unsigned byte).\n     * If x and/or y are outside of existing data, an array filled with 0 is returned.\n     * @param {number} x Pixel coordinate\n     * @param {number} y Pixel coordinate\n     * @returns {Uint8Array} Integer array with one color value (4 components)\n     * @api\n     */\n    WebGLRenderTarget.prototype.readPixel = function (x, y) {\n        if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n            tmpArray4[0] = 0;\n            tmpArray4[1] = 0;\n            tmpArray4[2] = 0;\n            tmpArray4[3] = 0;\n            return tmpArray4;\n        }\n        this.readAll();\n        var index = Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n        tmpArray4[0] = this.data_[index * 4];\n        tmpArray4[1] = this.data_[index * 4 + 1];\n        tmpArray4[2] = this.data_[index * 4 + 2];\n        tmpArray4[3] = this.data_[index * 4 + 3];\n        return tmpArray4;\n    };\n    /**\n     * @return {WebGLTexture} Texture to render to\n     */\n    WebGLRenderTarget.prototype.getTexture = function () {\n        return this.texture_;\n    };\n    /**\n     * @return {WebGLFramebuffer} Frame buffer of the render target\n     */\n    WebGLRenderTarget.prototype.getFramebuffer = function () {\n        return this.framebuffer_;\n    };\n    /**\n     * @private\n     */\n    WebGLRenderTarget.prototype.updateSize_ = function () {\n        var size = this.size_;\n        var gl = this.helper_.getGL();\n        this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n        gl.viewport(0, 0, size[0], size[1]);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture_, 0);\n        this.data_ = new Uint8Array(size[0] * size[1] * 4);\n    };\n    return WebGLRenderTarget;\n}());\nexport default WebGLRenderTarget;\n//# sourceMappingURL=RenderTarget.js.map","var source = \"var e=\\\"function\\\"==typeof Object.assign?Object.assign:function(e,n){if(null==e)throw new TypeError(\\\"Cannot convert undefined or null to object\\\");for(var t=Object(e),r=1,o=arguments.length;r<o;++r){var i=arguments[r];if(null!=i)for(var f in i)i.hasOwnProperty(f)&&(t[f]=i[f])}return t},n=\\\"GENERATE_BUFFERS\\\",t=[],r={vertexPosition:0,indexPosition:0};function o(e,n,t,r,o){e[n+0]=t,e[n+1]=r,e[n+2]=o}function i(e,n,i,f,s,u){var a=3+s,l=e[n+0],v=e[n+1],c=t;c.length=s;for(var g=0;g<c.length;g++)c[g]=e[n+2+g];var b=u?u.vertexPosition:0,h=u?u.indexPosition:0,d=b/a;return o(i,b,l,v,0),c.length&&i.set(c,b+3),o(i,b+=a,l,v,1),c.length&&i.set(c,b+3),o(i,b+=a,l,v,2),c.length&&i.set(c,b+3),o(i,b+=a,l,v,3),c.length&&i.set(c,b+3),b+=a,f[h++]=d,f[h++]=d+1,f[h++]=d+3,f[h++]=d+1,f[h++]=d+2,f[h++]=d+3,r.vertexPosition=b,r.indexPosition=h,r}var f=self;f.onmessage=function(t){var r=t.data;if(r.type===n){for(var o=r.customAttributesCount,s=2+o,u=new Float32Array(r.renderInstructions),a=u.length/s,l=4*a*(o+3),v=new Uint32Array(6*a),c=new Float32Array(l),g=null,b=0;b<u.length;b+=s)g=i(u,b,c,v,o,g);var h=e({vertexBuffer:c.buffer,indexBuffer:v.buffer,renderInstructions:u.buffer},r);f.postMessage(h,[c.buffer,v.buffer,u.buffer])}};\";\nvar blob = new Blob([source], { type: 'application/javascript' });\nvar url = URL.createObjectURL(blob);\nexport function create() {\n    return new Worker(url);\n}\n//# sourceMappingURL=webgl.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer, { WebGLWorkerMessageType, colorDecodeId, colorEncodeId, } from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport { ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER } from '../../webgl.js';\nimport { AttributeType, DefaultUniform } from '../../webgl/Helper.js';\nimport { apply as applyTransform, create as createTransform, makeInverse as makeInverseTransform, multiply as multiplyTransform, } from '../../transform.js';\nimport { assert } from '../../asserts.js';\nimport { buffer, createEmpty, equals } from '../../extent.js';\nimport { create as createWebGLWorker } from '../../worker/webgl.js';\nimport { getUid } from '../../util.js';\nimport { listen, unlistenByKey } from '../../events.js';\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {string} [hitVertexShader] Vertex shader source for hit detection rendering.\n * @property {string} [hitFragmentShader] Fragment shader source for hit detection rendering.\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nvar WebGLPointsLayerRenderer = /** @class */ (function (_super) {\n    __extends(WebGLPointsLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n     * @param {Options} options Options.\n     */\n    function WebGLPointsLayerRenderer(layer, options) {\n        var _this = this;\n        var uniforms = options.uniforms || {};\n        var projectionMatrixTransform = createTransform();\n        uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n        _this = _super.call(this, layer, {\n            className: options.className,\n            uniforms: uniforms,\n            postProcesses: options.postProcesses,\n        }) || this;\n        _this.sourceRevision_ = -1;\n        _this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n        _this.hitVerticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n        _this.indicesBuffer_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, DYNAMIC_DRAW);\n        _this.program_ = _this.helper.getProgram(options.fragmentShader, options.vertexShader);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.hitDetectionEnabled_ =\n            options.hitFragmentShader && options.hitVertexShader ? true : false;\n        _this.hitProgram_ =\n            _this.hitDetectionEnabled_ &&\n                _this.helper.getProgram(options.hitFragmentShader, options.hitVertexShader);\n        var customAttributes = options.attributes\n            ? options.attributes.map(function (attribute) {\n                return {\n                    name: 'a_' + attribute.name,\n                    size: 1,\n                    type: AttributeType.FLOAT,\n                };\n            })\n            : [];\n        /**\n         * A list of attributes used by the renderer. By default only the position and\n         * index of the vertex (0 to 3) are required.\n         * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n         */\n        _this.attributes = [\n            {\n                name: 'a_position',\n                size: 2,\n                type: AttributeType.FLOAT,\n            },\n            {\n                name: 'a_index',\n                size: 1,\n                type: AttributeType.FLOAT,\n            },\n        ].concat(customAttributes);\n        /**\n         * A list of attributes used for hit detection.\n         * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n         */\n        _this.hitDetectionAttributes = [\n            {\n                name: 'a_position',\n                size: 2,\n                type: AttributeType.FLOAT,\n            },\n            {\n                name: 'a_index',\n                size: 1,\n                type: AttributeType.FLOAT,\n            },\n            {\n                name: 'a_hitColor',\n                size: 4,\n                type: AttributeType.FLOAT,\n            },\n            {\n                name: 'a_featureUid',\n                size: 1,\n                type: AttributeType.FLOAT,\n            },\n        ].concat(customAttributes);\n        _this.customAttributes = options.attributes ? options.attributes : [];\n        _this.previousExtent_ = createEmpty();\n        /**\n         * This transform is updated on every frame and is the composition of:\n         * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n         * - current world->screen transform\n         * @type {import(\"../../transform.js\").Transform}\n         * @private\n         */\n        _this.currentTransform_ = projectionMatrixTransform;\n        /**\n         * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n         * @type {import(\"../../transform.js\").Transform}\n         * @private\n         */\n        _this.renderTransform_ = createTransform();\n        /**\n         * @type {import(\"../../transform.js\").Transform}\n         * @private\n         */\n        _this.invertRenderTransform_ = createTransform();\n        /**\n         * @type {Float32Array}\n         * @private\n         */\n        _this.renderInstructions_ = new Float32Array(0);\n        /**\n         * These instructions are used for hit detection\n         * @type {Float32Array}\n         * @private\n         */\n        _this.hitRenderInstructions_ = new Float32Array(0);\n        /**\n         * @type {WebGLRenderTarget}\n         * @private\n         */\n        _this.hitRenderTarget_ =\n            _this.hitDetectionEnabled_ && new WebGLRenderTarget(_this.helper);\n        _this.worker_ = createWebGLWorker();\n        _this.worker_.addEventListener('message', \n        /**\n         * @param {*} event Event.\n         * @this {WebGLPointsLayerRenderer}\n         */\n        function (event) {\n            var received = event.data;\n            if (received.type === WebGLWorkerMessageType.GENERATE_BUFFERS) {\n                var projectionTransform = received.projectionTransform;\n                if (received.hitDetection) {\n                    this.hitVerticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n                    this.helper.flushBufferData(this.hitVerticesBuffer_);\n                }\n                else {\n                    this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n                    this.helper.flushBufferData(this.verticesBuffer_);\n                }\n                this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n                this.helper.flushBufferData(this.indicesBuffer_);\n                this.renderTransform_ = projectionTransform;\n                makeInverseTransform(this.invertRenderTransform_, this.renderTransform_);\n                if (received.hitDetection) {\n                    this.hitRenderInstructions_ = new Float32Array(event.data.renderInstructions);\n                }\n                else {\n                    this.renderInstructions_ = new Float32Array(event.data.renderInstructions);\n                }\n                this.getLayer().changed();\n            }\n        }.bind(_this));\n        /**\n         * This object will be updated when the source changes. Key is uid.\n         * @type {Object<string, FeatureCacheItem>}\n         * @private\n         */\n        _this.featureCache_ = {};\n        /**\n         * Amount of features in the cache.\n         * @type {number}\n         * @private\n         */\n        _this.featureCount_ = 0;\n        var source = _this.getLayer().getSource();\n        _this.sourceListenKeys_ = [\n            listen(source, VectorEventType.ADDFEATURE, _this.handleSourceFeatureAdded_, _this),\n            listen(source, VectorEventType.CHANGEFEATURE, _this.handleSourceFeatureChanged_, _this),\n            listen(source, VectorEventType.REMOVEFEATURE, _this.handleSourceFeatureDelete_, _this),\n            listen(source, VectorEventType.CLEAR, _this.handleSourceFeatureClear_, _this),\n        ];\n        source.forEachFeature(function (feature) {\n            this.featureCache_[getUid(feature)] = {\n                feature: feature,\n                properties: feature.getProperties(),\n                geometry: feature.getGeometry(),\n            };\n            this.featureCount_++;\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    WebGLPointsLayerRenderer.prototype.handleSourceFeatureAdded_ = function (event) {\n        var feature = event.feature;\n        this.featureCache_[getUid(feature)] = {\n            feature: feature,\n            properties: feature.getProperties(),\n            geometry: feature.getGeometry(),\n        };\n        this.featureCount_++;\n    };\n    /**\n     * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    WebGLPointsLayerRenderer.prototype.handleSourceFeatureChanged_ = function (event) {\n        var feature = event.feature;\n        this.featureCache_[getUid(feature)] = {\n            feature: feature,\n            properties: feature.getProperties(),\n            geometry: feature.getGeometry(),\n        };\n    };\n    /**\n     * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    WebGLPointsLayerRenderer.prototype.handleSourceFeatureDelete_ = function (event) {\n        var feature = event.feature;\n        delete this.featureCache_[getUid(feature)];\n        this.featureCount_--;\n    };\n    /**\n     * @private\n     */\n    WebGLPointsLayerRenderer.prototype.handleSourceFeatureClear_ = function () {\n        this.featureCache_ = {};\n        this.featureCount_ = 0;\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {HTMLElement} The rendered element.\n     */\n    WebGLPointsLayerRenderer.prototype.renderFrame = function (frameState) {\n        this.preRender(frameState);\n        var renderCount = this.indicesBuffer_.getSize();\n        this.helper.drawElements(0, renderCount);\n        this.helper.finalizeDraw(frameState);\n        var canvas = this.helper.getCanvas();\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = String(opacity);\n        }\n        if (this.hitDetectionEnabled_) {\n            this.renderHitDetection(frameState);\n            this.hitRenderTarget_.clearCachedData();\n        }\n        this.postRender(frameState);\n        return canvas;\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    WebGLPointsLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var layer = this.getLayer();\n        var vectorSource = layer.getSource();\n        var viewState = frameState.viewState;\n        var viewNotMoving = !frameState.viewHints[ViewHint.ANIMATING] &&\n            !frameState.viewHints[ViewHint.INTERACTING];\n        var extentChanged = !equals(this.previousExtent_, frameState.extent);\n        var sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n        if (sourceChanged) {\n            this.sourceRevision_ = vectorSource.getRevision();\n        }\n        if (viewNotMoving && (extentChanged || sourceChanged)) {\n            var projection = viewState.projection;\n            var resolution = viewState.resolution;\n            var renderBuffer = layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n            var extent = buffer(frameState.extent, renderBuffer * resolution);\n            vectorSource.loadFeatures(extent, resolution, projection);\n            this.rebuildBuffers_(frameState);\n            this.previousExtent_ = frameState.extent.slice();\n        }\n        // apply the current projection transform with the invert of the one used to fill buffers\n        this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n        multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n        this.helper.useProgram(this.program_);\n        this.helper.prepareDraw(frameState);\n        // write new data\n        this.helper.bindBuffer(this.verticesBuffer_);\n        this.helper.bindBuffer(this.indicesBuffer_);\n        this.helper.enableAttributes(this.attributes);\n        return true;\n    };\n    /**\n     * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n     * @param {import(\"../../PluggableMap\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLPointsLayerRenderer.prototype.rebuildBuffers_ = function (frameState) {\n        // saves the projection transform for the current frame state\n        var projectionTransform = createTransform();\n        this.helper.makeProjectionTransform(frameState, projectionTransform);\n        // here we anticipate the amount of render instructions that we well generate\n        // this can be done since we know that for normal render we only have x, y as base instructions,\n        // and x, y, r, g, b, a and featureUid for hit render instructions\n        // and we also know the amount of custom attributes to append to these\n        var totalInstructionsCount = (2 + this.customAttributes.length) * this.featureCount_;\n        if (!this.renderInstructions_ ||\n            this.renderInstructions_.length !== totalInstructionsCount) {\n            this.renderInstructions_ = new Float32Array(totalInstructionsCount);\n        }\n        if (this.hitDetectionEnabled_) {\n            var totalHitInstructionsCount = (7 + this.customAttributes.length) * this.featureCount_;\n            if (!this.hitRenderInstructions_ ||\n                this.hitRenderInstructions_.length !== totalHitInstructionsCount) {\n                this.hitRenderInstructions_ = new Float32Array(totalHitInstructionsCount);\n            }\n        }\n        // loop on features to fill the buffer\n        var featureCache, geometry;\n        var tmpCoords = [];\n        var tmpColor = [];\n        var renderIndex = 0;\n        var hitIndex = 0;\n        var hitColor;\n        for (var featureUid in this.featureCache_) {\n            featureCache = this.featureCache_[featureUid];\n            geometry = /** @type {import(\"../../geom\").Point} */ (featureCache.geometry);\n            if (!geometry || geometry.getType() !== GeometryType.POINT) {\n                continue;\n            }\n            tmpCoords[0] = geometry.getFlatCoordinates()[0];\n            tmpCoords[1] = geometry.getFlatCoordinates()[1];\n            applyTransform(projectionTransform, tmpCoords);\n            hitColor = colorEncodeId(hitIndex + 6, tmpColor);\n            this.renderInstructions_[renderIndex++] = tmpCoords[0];\n            this.renderInstructions_[renderIndex++] = tmpCoords[1];\n            // for hit detection, the feature uid is saved in the opacity value\n            // and the index of the opacity value is encoded in the color values\n            if (this.hitDetectionEnabled_) {\n                this.hitRenderInstructions_[hitIndex++] = tmpCoords[0];\n                this.hitRenderInstructions_[hitIndex++] = tmpCoords[1];\n                this.hitRenderInstructions_[hitIndex++] = hitColor[0];\n                this.hitRenderInstructions_[hitIndex++] = hitColor[1];\n                this.hitRenderInstructions_[hitIndex++] = hitColor[2];\n                this.hitRenderInstructions_[hitIndex++] = hitColor[3];\n                this.hitRenderInstructions_[hitIndex++] = Number(featureUid);\n            }\n            // pushing custom attributes\n            var value = void 0;\n            for (var j = 0; j < this.customAttributes.length; j++) {\n                value = this.customAttributes[j].callback(featureCache.feature, featureCache.properties);\n                this.renderInstructions_[renderIndex++] = value;\n                if (this.hitDetectionEnabled_) {\n                    this.hitRenderInstructions_[hitIndex++] = value;\n                }\n            }\n        }\n        /** @type {import('./Layer').WebGLWorkerGenerateBuffersMessage} */\n        var message = {\n            type: WebGLWorkerMessageType.GENERATE_BUFFERS,\n            renderInstructions: this.renderInstructions_.buffer,\n            customAttributesCount: this.customAttributes.length,\n        };\n        // additional properties will be sent back as-is by the worker\n        message['projectionTransform'] = projectionTransform;\n        this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n        this.renderInstructions_ = null;\n        /** @type {import('./Layer').WebGLWorkerGenerateBuffersMessage} */\n        if (this.hitDetectionEnabled_) {\n            var hitMessage = {\n                type: WebGLWorkerMessageType.GENERATE_BUFFERS,\n                renderInstructions: this.hitRenderInstructions_.buffer,\n                customAttributesCount: 5 + this.customAttributes.length,\n            };\n            hitMessage['projectionTransform'] = projectionTransform;\n            hitMessage['hitDetection'] = true;\n            this.worker_.postMessage(hitMessage, [\n                this.hitRenderInstructions_.buffer,\n            ]);\n            this.hitRenderInstructions_ = null;\n        }\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    WebGLPointsLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        assert(this.hitDetectionEnabled_, 66);\n        if (!this.hitRenderInstructions_) {\n            return undefined;\n        }\n        var pixel = applyTransform(frameState.coordinateToPixelTransform, coordinate.slice());\n        var data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n        var color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n        var index = colorDecodeId(color);\n        var opacity = this.hitRenderInstructions_[index];\n        var uid = Math.floor(opacity).toString();\n        var source = this.getLayer().getSource();\n        var feature = source.getFeatureByUid(uid);\n        if (feature) {\n            return callback(feature, this.getLayer(), null);\n        }\n        return undefined;\n    };\n    /**\n     * Render the hit detection data to the corresponding render target\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState current frame state\n     */\n    WebGLPointsLayerRenderer.prototype.renderHitDetection = function (frameState) {\n        // skip render entirely if vertex buffers not ready/generated yet\n        if (!this.hitVerticesBuffer_.getSize()) {\n            return;\n        }\n        this.hitRenderTarget_.setSize([\n            Math.floor(frameState.size[0] / 2),\n            Math.floor(frameState.size[1] / 2),\n        ]);\n        this.helper.useProgram(this.hitProgram_);\n        this.helper.prepareDrawToRenderTarget(frameState, this.hitRenderTarget_, true);\n        this.helper.bindBuffer(this.hitVerticesBuffer_);\n        this.helper.bindBuffer(this.indicesBuffer_);\n        this.helper.enableAttributes(this.hitDetectionAttributes);\n        var renderCount = this.indicesBuffer_.getSize();\n        this.helper.drawElements(0, renderCount);\n    };\n    /**\n     * Clean up.\n     */\n    WebGLPointsLayerRenderer.prototype.disposeInternal = function () {\n        this.worker_.terminate();\n        this.layer_ = null;\n        this.sourceListenKeys_.forEach(function (key) {\n            unlistenByKey(key);\n        });\n        this.sourceListenKeys_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return WebGLPointsLayerRenderer;\n}(WebGLLayerRenderer));\nexport default WebGLPointsLayerRenderer;\n//# sourceMappingURL=PointsLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Heatmap\n */\nimport VectorLayer from './Vector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getChangeEventType } from '../Object.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    BLUR: 'blur',\n    GRADIENT: 'gradient',\n    RADIUS: 'radius',\n};\n/**\n * @const\n * @type {Array<string>}\n */\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar Heatmap = /** @class */ (function (_super) {\n    __extends(Heatmap, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Heatmap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.gradient;\n        delete baseOptions.radius;\n        delete baseOptions.blur;\n        delete baseOptions.weight;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.gradient_ = null;\n        _this.addEventListener(getChangeEventType(Property.GRADIENT), _this.handleGradientChanged_);\n        _this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n        _this.setBlur(options.blur !== undefined ? options.blur : 15);\n        _this.setRadius(options.radius !== undefined ? options.radius : 8);\n        var weight = options.weight ? options.weight : 'weight';\n        if (typeof weight === 'string') {\n            _this.weightFunction_ = function (feature) {\n                return feature.get(weight);\n            };\n        }\n        else {\n            _this.weightFunction_ = weight;\n        }\n        // For performance reasons, don't sort the features before rendering.\n        // The render order is not relevant for a heatmap representation.\n        _this.setRenderOrder(null);\n        return _this;\n    }\n    /**\n     * Return the blur size in pixels.\n     * @return {number} Blur size in pixels.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getBlur = function () {\n        return /** @type {number} */ (this.get(Property.BLUR));\n    };\n    /**\n     * Return the gradient colors as array of strings.\n     * @return {Array<string>} Colors.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getGradient = function () {\n        return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n    };\n    /**\n     * Return the size of the radius in pixels.\n     * @return {number} Radius size in pixel.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getRadius = function () {\n        return /** @type {number} */ (this.get(Property.RADIUS));\n    };\n    /**\n     * @private\n     */\n    Heatmap.prototype.handleGradientChanged_ = function () {\n        this.gradient_ = createGradient(this.getGradient());\n    };\n    /**\n     * Set the blur size in pixels.\n     * @param {number} blur Blur size in pixels.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setBlur = function (blur) {\n        this.set(Property.BLUR, blur);\n    };\n    /**\n     * Set the gradient colors as array of strings.\n     * @param {Array<string>} colors Gradient.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setGradient = function (colors) {\n        this.set(Property.GRADIENT, colors);\n    };\n    /**\n     * Set the size of the radius in pixels.\n     * @param {number} radius Radius size in pixel.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setRadius = function (radius) {\n        this.set(Property.RADIUS, radius);\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {WebGLPointsLayerRenderer} A layer renderer.\n     */\n    Heatmap.prototype.createRenderer = function () {\n        return new WebGLPointsLayerRenderer(this, {\n            className: this.getClassName(),\n            attributes: [\n                {\n                    name: 'weight',\n                    callback: function (feature) {\n                        var weight = this.weightFunction_(feature);\n                        return weight !== undefined ? clamp(weight, 0, 1) : 1;\n                    }.bind(this),\n                },\n            ],\n            vertexShader: \"\\n        precision mediump float;\\n        uniform mat4 u_projectionMatrix;\\n        uniform mat4 u_offsetScaleMatrix;\\n        uniform float u_size;\\n        attribute vec2 a_position;\\n        attribute float a_index;\\n        attribute float a_weight;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_weight;\\n\\n        void main(void) {\\n          mat4 offsetMatrix = u_offsetScaleMatrix;\\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\\n          v_texCoord = vec2(u, v);\\n          v_weight = a_weight;\\n        }\",\n            fragmentShader: \"\\n        precision mediump float;\\n        uniform float u_blurSlope;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_weight;\\n\\n        void main(void) {\\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\\n        }\",\n            hitVertexShader: \"\\n        precision mediump float;\\n        uniform mat4 u_projectionMatrix;\\n        uniform mat4 u_offsetScaleMatrix;\\n        uniform float u_size;\\n        attribute vec2 a_position;\\n        attribute float a_index;\\n        attribute float a_weight;\\n        attribute vec4 a_hitColor;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_weight;\\n        varying vec4 v_hitColor;\\n\\n        void main(void) {\\n          mat4 offsetMatrix = u_offsetScaleMatrix;\\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\\n          v_texCoord = vec2(u, v);\\n          v_hitColor = a_hitColor;\\n          v_weight = a_weight;\\n        }\",\n            hitFragmentShader: \"\\n        precision mediump float;\\n        uniform float u_blurSlope;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_weight;\\n        varying vec4 v_hitColor;\\n\\n        void main(void) {\\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\\n          if (alpha < 0.05) {\\n            discard;\\n          }\\n\\n          gl_FragColor = v_hitColor;\\n        }\",\n            uniforms: {\n                u_size: function () {\n                    return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n                }.bind(this),\n                u_blurSlope: function () {\n                    return (this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR)));\n                }.bind(this),\n            },\n            postProcesses: [\n                {\n                    fragmentShader: \"\\n            precision mediump float;\\n\\n            uniform sampler2D u_image;\\n            uniform sampler2D u_gradientTexture;\\n\\n            varying vec2 v_texCoord;\\n\\n            void main() {\\n              vec4 color = texture2D(u_image, v_texCoord);\\n              gl_FragColor.a = color.a;\\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\\n              gl_FragColor.rgb *= gl_FragColor.a;\\n            }\",\n                    uniforms: {\n                        u_gradientTexture: function () {\n                            return this.gradient_;\n                        }.bind(this),\n                    },\n                },\n            ],\n        });\n    };\n    Heatmap.prototype.renderDeclutter = function () { };\n    return Heatmap;\n}(VectorLayer));\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n    var width = 1;\n    var height = 256;\n    var context = createCanvasContext2D(width, height);\n    var gradient = context.createLinearGradient(0, 0, width, height);\n    var step = 1 / (colors.length - 1);\n    for (var i = 0, ii = colors.length; i < ii; ++i) {\n        gradient.addColorStop(i * step, colors[i]);\n    }\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, width, height);\n    return context.canvas;\n}\nexport default Heatmap;\n//# sourceMappingURL=Heatmap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Image.js\").default>}\n * @api\n */\nvar BaseImageLayer = /** @class */ (function (_super) {\n    __extends(BaseImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function BaseImageLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    return BaseImageLayer;\n}(Layer));\nexport default BaseImageLayer;\n//# sourceMappingURL=BaseImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ViewHint from '../../ViewHint.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport { assign } from '../../obj.js';\nimport { compose as composeTransform, makeInverse } from '../../transform.js';\nimport { containsExtent, intersects } from '../../extent.js';\nimport { createTransformString } from '../../render/canvas.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getIntersection, isEmpty } from '../../extent.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n     */\n    function CanvasImageLayerRenderer(imageLayer) {\n        var _this = _super.call(this, imageLayer) || this;\n        /**\n         * @protected\n         * @type {?import(\"../../ImageBase.js\").default}\n         */\n        _this.image_ = null;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    CanvasImageLayerRenderer.prototype.getImage = function () {\n        return !this.image_ ? null : this.image_.getImage();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasImageLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var imageSource = this.getLayer().getSource();\n        var hints = frameState.viewHints;\n        var renderedExtent = frameState.extent;\n        if (layerState.extent !== undefined) {\n            renderedExtent = getIntersection(renderedExtent, fromUserExtent(layerState.extent, viewState.projection));\n        }\n        if (!hints[ViewHint.ANIMATING] &&\n            !hints[ViewHint.INTERACTING] &&\n            !isEmpty(renderedExtent)) {\n            if (imageSource) {\n                var projection = viewState.projection;\n                if (!ENABLE_RASTER_REPROJECTION) {\n                    var sourceProjection = imageSource.getProjection();\n                    if (sourceProjection) {\n                        projection = sourceProjection;\n                    }\n                }\n                var image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n                if (image && this.loadImage(image)) {\n                    this.image_ = image;\n                }\n            }\n            else {\n                this.image_ = null;\n            }\n        }\n        return !!this.image_;\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasImageLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var image = this.image_;\n        var imageExtent = image.getExtent();\n        var imageResolution = image.getResolution();\n        var imagePixelRatio = image.getPixelRatio();\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewCenter = viewState.center;\n        var viewResolution = viewState.resolution;\n        var size = frameState.size;\n        var scale = (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        var rotation = viewState.rotation;\n        if (rotation) {\n            var size_1 = Math.round(Math.sqrt(width * width + height * height));\n            width = size_1;\n            height = size_1;\n        }\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / pixelRatio, 1 / pixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = createTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        if (layerState.extent) {\n            var layerExtent = fromUserExtent(layerState.extent, viewState.projection);\n            clipped =\n                !containsExtent(layerExtent, frameState.extent) &&\n                    intersects(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        var img = image.getImage();\n        var transform = composeTransform(this.tempTransform, width / 2, height / 2, scale, scale, 0, (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution, (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution);\n        this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n        var dx = transform[4];\n        var dy = transform[5];\n        var dw = img.width * transform[0];\n        var dh = img.height * transform[3];\n        assign(context, this.getLayer().getSource().getContextOptions());\n        this.preRender(context, frameState);\n        if (dw >= 0.5 && dh >= 0.5) {\n            var opacity = layerState.opacity;\n            var previousAlpha = void 0;\n            if (opacity !== 1) {\n                previousAlpha = this.context.globalAlpha;\n                this.context.globalAlpha = opacity;\n            }\n            this.context.drawImage(img, 0, 0, +img.width, +img.height, Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n            if (opacity !== 1) {\n                this.context.globalAlpha = previousAlpha;\n            }\n        }\n        this.postRender(context, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    return CanvasImageLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasImageLayerRenderer;\n//# sourceMappingURL=ImageLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar ImageLayer = /** @class */ (function (_super) {\n    __extends(ImageLayer, _super);\n    /**\n     * @param {import(\"./BaseImage.js\").Options=} opt_options Layer options.\n     */\n    function ImageLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     */\n    ImageLayer.prototype.createRenderer = function () {\n        return new CanvasImageLayerRenderer(this);\n    };\n    return ImageLayer;\n}(BaseImageLayer));\nexport default ImageLayer;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, } from '../../transform.js';\nimport { assign } from '../../obj.js';\nimport { createEmpty, equals, getIntersection, getTopLeft, } from '../../extent.js';\nimport { createTransformString } from '../../render/canvas.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {?import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedPixelRatio;\n        /**\n         * @protected\n         * @type {import(\"../../proj/Projection.js\").default}\n         */\n        _this.renderedProjection = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return (tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            (tileState == TileState.ERROR && !useInterimTilesOnError));\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return !!this.getLayer().getSource();\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n        if (layerExtent) {\n            extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = size;\n            height = size;\n        }\n        var dx = (tileResolution * width) / 2 / tilePixelRatio;\n        var dy = (tileResolution * height) / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy,\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ &&\n                            (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        var canvasTransform = createTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerExtent) {\n            this.clipUnrotated(context, frameState, layerExtent);\n        }\n        assign(context, tileSource.getContextOptions());\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 &&\n            (!this.containerReused ||\n                tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform, [\n                (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n                    tileResolution,\n                (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n                    tileResolution,\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1;\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1;\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n                if (!inTransition) {\n                    if (clips) {\n                        // Clip mask for regions in this tile that already filled by a higher z tile\n                        context.save();\n                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                            if (z !== currentZ && currentZ < clipZs[i_1]) {\n                                var clip = clips[i_1];\n                                context.beginPath();\n                                // counter-clockwise (outer ring) for current tile\n                                context.moveTo(currentClip[0], currentClip[1]);\n                                context.lineTo(currentClip[2], currentClip[3]);\n                                context.lineTo(currentClip[4], currentClip[5]);\n                                context.lineTo(currentClip[6], currentClip[7]);\n                                // clockwise (inner ring) for higher z tile\n                                context.moveTo(clip[6], clip[7]);\n                                context.lineTo(clip[4], clip[5]);\n                                context.lineTo(clip[2], clip[3]);\n                                context.lineTo(clip[0], clip[1]);\n                                context.clip();\n                            }\n                        }\n                        clips.push(currentClip);\n                        clipZs.push(currentZ);\n                    }\n                    else {\n                        context.clearRect(x, y, w, h);\n                    }\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);\n                if (clips && !inTransition) {\n                    context.restore();\n                }\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged =\n            !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.renderedPixelRatio = pixelRatio;\n        this.renderedProjection = projection;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     * @param {number} opacity Opacity.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition, opacity) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var alpha = opacity * tileAlpha;\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (tileAlpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Image\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tileCount = 0;\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        ++tileCount;\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([\n                                    tile,\n                                    tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord),\n                                    tileResolution,\n                                ]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n        tileSource.updateCacheSize(tileCount, projection);\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror',\n};\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, { createOrUpdate as createOrUpdateTileRange, } from '../TileRange.js';\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport { clamp } from '../math.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { toSize } from '../size.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined && !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ =\n            options.tileSize !== undefined\n                ? options.tileSize\n                : !this.tileSizes_\n                    ? DEFAULT_TILE_SIZE\n                    : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                if (extent) {\n                    var restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n                    tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n                    tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n                    tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n                    tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n                }\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = (scale * xFromOrigin) / tileSize[0];\n        var tileCoordY = (scale * yFromOrigin) / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return this.extent_\n                ? this.getTileRangeForExtentAndZ(this.extent_, z)\n                : null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, get as getProjection } from './proj.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth, } from './extent.js';\nimport { toSize } from './size.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize,\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize, xyzOptions.maxResolution),\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number=} opt_maxResolution Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize, opt_maxResolution) {\n    var maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = opt_maxResolution > 0\n        ? opt_maxResolution\n        : Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { equivalent } from '../proj.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection, wrapX, } from '../tilegrid.js';\nimport { scale as scaleSize, toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ =\n            options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var tileSize = [256, 256];\n        var tileGrid = options.tileGrid;\n        if (tileGrid) {\n            toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(options.cacheSize || 0);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = callback(tile) !== false;\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @return {Array<number>} Resolutions.\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        assert(equivalent(this.getProjection(), projection), 68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n        );\n        return this.tileCache;\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ? opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Increases the cache size if needed\n     * @param {number} tileCount Minimum number of tiles needed.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.updateCacheSize = function (tileCount, projection) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCount > tileCache.highWaterMark) {\n            tileCache.highWaterMark = tileCount;\n        }\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template\n                .replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, expandUrl } from '../tileurlfunction.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ =\n            _this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        if (options.tileUrlFunction) {\n            _this.tileUrlFunction = options.tileUrlFunction;\n        }\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n            ? this.tileUrlFunction.bind(this)\n            : this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type =\n                tileState == TileState.ERROR\n                    ? TileEventType.TILELOADERROR\n                    : tileState == TileState.LOADED\n                        ? TileEventType.TILELOADEND\n                        : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = expandUrl(url);\n        this.urls = urls;\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    UrlTile.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        return undefined;\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/reproj\n */\nimport { IMAGE_SMOOTHING_DISABLED } from './source/common.js';\nimport { assign } from './obj.js';\nimport { containsCoordinate, createEmpty, extend, forEachCorner, getCenter, getHeight, getTopLeft, getWidth, } from './extent.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { getPointResolution, transform } from './proj.js';\nimport { solveLinearSystem } from './math.js';\nvar brokenDiagonalRendering_;\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(u1, v1);\n    ctx.lineTo(u2, v2);\n    ctx.closePath();\n    ctx.save();\n    ctx.clip();\n    ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n    ctx.restore();\n}\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n    // the values ought to be close to the rgba(210, 0, 0, 0.75)\n    return (Math.abs(data[offset * 4] - 210) > 2 ||\n        Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2);\n}\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n    if (brokenDiagonalRendering_ === undefined) {\n        var ctx = document.createElement('canvas').getContext('2d');\n        ctx.globalCompositeOperation = 'lighter';\n        ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n        drawTestTriangle(ctx, 4, 5, 4, 0);\n        drawTestTriangle(ctx, 4, 5, 0, 5);\n        var data = ctx.getImageData(0, 0, 3, 3).data;\n        brokenDiagonalRendering_ =\n            verifyBrokenDiagonalRendering(data, 0) ||\n                verifyBrokenDiagonalRendering(data, 4) ||\n                verifyBrokenDiagonalRendering(data, 8);\n    }\n    return brokenDiagonalRendering_;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(sourceProj, targetProj, targetExtent, targetResolution) {\n    var targetCenter = getCenter(targetExtent);\n    var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n        forEachCorner(targetExtent, function (corner) {\n            sourceResolution = calculateSourceResolution(sourceProj, targetProj, corner, targetResolution);\n            return isFinite(sourceResolution) && sourceResolution > 0;\n        });\n    }\n    return sourceResolution;\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @param {object=} opt_contextOptions Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges, opt_contextOptions) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    assign(context, opt_contextOptions);\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    function pixelRound(value) {\n        return Math.round(value * pixelRatio) / pixelRatio;\n    }\n    context.globalCompositeOperation = 'lighter';\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution), Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution));\n    assign(stitchContext, opt_contextOptions);\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        // This test should never fail -- but it does. Need to find a fix the upstream condition\n        if (src.image.width > 0 && src.image.height > 0) {\n            stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n        }\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        // Make sure that everything is on pixel boundaries\n        var u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n        var v0 = pixelRound(-(target[0][1] - targetTopLeft[1]) / targetResolution);\n        var u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n        var v1 = pixelRound(-(target[1][1] - targetTopLeft[1]) / targetResolution);\n        var u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n        var v2 = pixelRound(-(target[2][1] - targetTopLeft[1]) / targetResolution);\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0],\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        if (isBrokenDiagonalRendering() ||\n            opt_contextOptions === IMAGE_SMOOTHING_DISABLED) {\n            // Make sure that all lines are horizontal or vertical\n            context.moveTo(u1, v1);\n            // This is the diagonal line. Do it in 4 steps\n            var steps = 4;\n            var ud = u0 - u1;\n            var vd = v0 - v1;\n            for (var step = 0; step < steps; step++) {\n                // Go horizontally\n                context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound((step * vd) / (steps - 1)));\n                // Go vertically\n                if (step != steps - 1) {\n                    context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound(((step + 1) * vd) / (steps - 1)));\n                }\n            }\n            // We are almost at u0r, v0r\n            context.lineTo(u2, v2);\n        }\n        else {\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n        }\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.globalCompositeOperation = 'source-over';\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined\n            ? options.useInterimTilesOnError\n            : true);\n        return _this;\n    }\n    /**\n     * Return the level as number to which we will preload tiles up to.\n     * @return {number} The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n     * Set the level as number to which we will preload tiles up to.\n     * @param {number} preload The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n     * Whether we use interim tiles on error.\n     * @return {boolean} Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n     * Set whether we use interim tiles on error.\n     * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getArea, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects, } from '../extent.js';\nimport { getTransform } from '../proj.js';\nimport { log2, modulo } from '../math.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold, opt_destinationResolution) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ =\n            this.sourceProj_.canWrapX() &&\n                !!maxSourceExtent &&\n                !!this.sourceProj_.getExtent() &&\n                getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n            ? getWidth(this.sourceProj_.getExtent())\n            : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent()\n            ? getWidth(this.targetProj_.getExtent())\n            : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        /*\n         * The maxSubdivision controls how many splittings of the target area can\n         * be done. The idea here is to do a linear mapping of the target areas\n         * but the actual overal reprojection (can be) extremely non-linear. The\n         * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n         * tile size. However this function is also called to remap canvas rendered\n         * layers which can be much larger. This calculation increases the maxSubdivision\n         * value by the right factor so that each 256x256 pixel area has\n         * MAX_SUBDIVISION divisions.\n         */\n        var maxSubdivision = MAX_SUBDIVISION +\n            (opt_destinationResolution\n                ? Math.max(0, Math.ceil(log2(getArea(targetExtent) /\n                    (opt_destinationResolution *\n                        opt_destinationResolution *\n                        256 *\n                        256))))\n                : 0);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, maxSubdivision);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) -\n                    leftBound_1 >\n                    this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [\n                        [triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]],\n                    ];\n                    if (newTriangle[0][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[1][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[2][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if (maxX - minX < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c],\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_\n            ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n            : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 &&\n            sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision =\n                    targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision =\n                    sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (isFinite(sourceQuadExtent[0]) &&\n                isFinite(sourceQuadExtent[1]) &&\n                isFinite(sourceQuadExtent[2]) &&\n                isFinite(sourceQuadExtent[3])) {\n                if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                    // whole quad outside source projection extent -> ignore\n                    return;\n                }\n            }\n        }\n        var isNotFinite = 0;\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) ||\n                !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) ||\n                !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) ||\n                !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) ||\n                !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    // It might be the case that only 1 of the points is infinite. In this case\n                    // we can draw a single triangle with the other three points\n                    isNotFinite =\n                        (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n                            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n                            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n                            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n                    if (isNotFinite != 1 &&\n                        isNotFinite != 2 &&\n                        isNotFinite != 4 &&\n                        isNotFinite != 8) {\n                        return;\n                    }\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) /\n                        2;\n                    dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        // Exactly zero or one of *Src is not finite\n        // The triangles must have the diagonal line as the first side\n        // This is to allow easy code in reproj.s to make it straight for broken\n        // browsers that can't handle diagonal clipping\n        if ((isNotFinite & 0xb) == 0) {\n            this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        }\n        if ((isNotFinite & 0xe) == 0) {\n            this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n        }\n        if (isNotFinite) {\n            // Try the other two triangles\n            if ((isNotFinite & 0xd) == 0) {\n                this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n            }\n            if ((isNotFinite & 0x7) == 0) {\n                this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n            }\n        }\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/source/common\n */\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport var IMAGE_SMOOTHING_DISABLED = {\n    imageSmoothingEnabled: false,\n    msImageSmoothingEnabled: false,\n};\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceExtentResolution, render as renderReprojected, } from '../reproj.js';\nimport { clamp } from '../math.js';\nimport { getArea, getIntersection } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     * @param {object=} opt_contextOptions Properties to set on the canvas context.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges, opt_contextOptions) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {object}\n         */\n        _this.contextOptions_ = opt_contextOptions;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {?Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent\n            ? getIntersection(targetExtent, maxTargetExtent)\n            : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var sourceResolution = calculateSourceExtentResolution(sourceProj, targetProj, limitedTargetExtent, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage(),\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_, this.contextOptions_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED } from './common.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction\n                ? options.tileLoadFunction\n                : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass =\n            options.tileClass !== undefined ? options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {object|undefined}\n         */\n        _this.contextOptions_ =\n            options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    TileImage.prototype.getContextOptions = function () {\n        return this.contextOptions_;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileImage.prototype.getKey = function () {\n        return (_super.prototype.getKey.call(this) +\n            (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : ''));\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return this.tileGridForProjection[projKey];\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord\n            ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n            : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = cache.get(tileCoordKey);\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_, this.contextOptions_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * Operators and utilities used for style expressions\n * @module ol/style/expressions\n */\nimport { asArray, isStringColor } from '../color.js';\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['get', 'attributeName']` fetches a feature attribute (it will be prefixed by `a_` in the shader)\n *     Note: those will be taken from the attributes provided to the renderer\n *   * `['var', 'varName']` fetches a value from the style variables, or 0 if undefined\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['zoom']` returns the current zoom level\n *   * `['resolution']` returns the current resolution\n *\n * * Math operators:\n *   * `['*', value1, value2]` multiplies `value1` by `value2`\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2]` adds `value1` and `value2`\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n */\n/**\n * Possible inferred types from a given value or expression.\n * Note: these are binary flags.\n * @enum {number}\n */\nexport var ValueTypes = {\n    NUMBER: 1,\n    STRING: 2,\n    COLOR: 4,\n    BOOLEAN: 8,\n    NUMBER_ARRAY: 16,\n    ANY: 31,\n    NONE: 0,\n};\n/**\n * An operator declaration must contain two methods: `getReturnType` which returns a type based on\n * the operator arguments, and `toGlsl` which returns a GLSL-compatible string.\n * Note: both methods can process arguments recursively.\n * @typedef {Object} Operator\n * @property {function(Array<ExpressionValue>): ValueTypes|number} getReturnType Returns one or several types\n * @property {function(ParsingContext, Array<ExpressionValue>, ValueTypes=): string} toGlsl Returns a GLSL-compatible string\n * Note: takes in an optional type hint as 3rd parameter\n */\n/**\n * Operator declarations\n * @type {Object<string, Operator>}\n */\nexport var Operators = {};\n/**\n * Returns the possible types for a given value (each type being a binary flag)\n * To test a value use e.g. `getValueType(v) & ValueTypes.BOOLEAN`\n * @param {ExpressionValue} value Value\n * @returns {ValueTypes|number} Type or types inferred from the value\n */\nexport function getValueType(value) {\n    if (typeof value === 'number') {\n        return ValueTypes.NUMBER;\n    }\n    if (typeof value === 'boolean') {\n        return ValueTypes.BOOLEAN;\n    }\n    if (typeof value === 'string') {\n        if (isStringColor(value)) {\n            return ValueTypes.COLOR | ValueTypes.STRING;\n        }\n        return ValueTypes.STRING;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Unhandled value type: \" + JSON.stringify(value));\n    }\n    var valueArr = /** @type {Array<*>} */ (value);\n    var onlyNumbers = valueArr.every(function (v) {\n        return typeof v === 'number';\n    });\n    if (onlyNumbers) {\n        if (valueArr.length === 3 || valueArr.length === 4) {\n            return ValueTypes.COLOR | ValueTypes.NUMBER_ARRAY;\n        }\n        return ValueTypes.NUMBER_ARRAY;\n    }\n    if (typeof valueArr[0] !== 'string') {\n        throw new Error(\"Expected an expression operator but received: \" + JSON.stringify(valueArr));\n    }\n    var operator = Operators[valueArr[0]];\n    if (operator === undefined) {\n        throw new Error(\"Unrecognized expression operator: \" + JSON.stringify(valueArr));\n    }\n    return operator.getReturnType(valueArr.slice(1));\n}\n/**\n * Checks if only one value type is enabled in the input number.\n * @param {ValueTypes|number} valueType Number containing value type binary flags\n * @return {boolean} True if only one type flag is enabled, false if zero or multiple\n */\nexport function isTypeUnique(valueType) {\n    return Math.log2(valueType) % 1 === 0;\n}\n/**\n * Context available during the parsing of an expression.\n * @typedef {Object} ParsingContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Array<string>} variables List of variables used in the expression; contains **unprefixed names**\n * @property {Array<string>} attributes List of attributes used in the expression; contains **unprefixed names**\n * @property {Object<string, number>} stringLiteralsMap This object maps all encountered string values to a number\n */\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @returns {string} The value as string.\n */\nexport function numberToGlsl(v) {\n    var s = v.toString();\n    return s.indexOf('.') === -1 ? s + '.0' : s;\n}\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @returns {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n    if (array.length < 2 || array.length > 4) {\n        throw new Error('`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.');\n    }\n    return \"vec\" + array.length + \"(\" + array.map(numberToGlsl).join(', ') + \")\";\n}\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @returns {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n    var array = asArray(color).slice();\n    if (array.length < 4) {\n        array.push(1);\n    }\n    return arrayToGlsl(array.map(function (c, i) {\n        return i < 3 ? c / 255 : c;\n    }));\n}\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @returns {number} Number equivalent\n */\nexport function getStringNumberEquivalent(context, string) {\n    if (context.stringLiteralsMap[string] === undefined) {\n        context.stringLiteralsMap[string] = Object.keys(context.stringLiteralsMap).length;\n    }\n    return context.stringLiteralsMap[string];\n}\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @returns {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(context, string) {\n    return numberToGlsl(getStringNumberEquivalent(context, string));\n}\n/**\n * Recursively parses a style expression and outputs a GLSL-compatible string. Takes in a parsing context that\n * will be read and modified during the parsing operation.\n * @param {ParsingContext} context Parsing context\n * @param {ExpressionValue} value Value\n * @param {ValueTypes|number} [typeHint] Hint for the expected final type (can be several types combined)\n * @returns {string} GLSL-compatible output\n */\nexport function expressionToGlsl(context, value, typeHint) {\n    // operator\n    if (Array.isArray(value) && typeof value[0] === 'string') {\n        var operator = Operators[value[0]];\n        if (operator === undefined) {\n            throw new Error(\"Unrecognized expression operator: \" + JSON.stringify(value));\n        }\n        return operator.toGlsl(context, value.slice(1), typeHint);\n    }\n    var valueType = getValueType(value);\n    if ((valueType & ValueTypes.NUMBER) > 0) {\n        return numberToGlsl(/** @type {number} */ (value));\n    }\n    else if ((valueType & ValueTypes.BOOLEAN) > 0) {\n        return value.toString();\n    }\n    else if ((valueType & ValueTypes.STRING) > 0 &&\n        (typeHint === undefined || typeHint == ValueTypes.STRING)) {\n        return stringToGlsl(context, value.toString());\n    }\n    else if ((valueType & ValueTypes.COLOR) > 0 &&\n        (typeHint === undefined || typeHint == ValueTypes.COLOR)) {\n        return colorToGlsl(/** @type {number[]|string} */ (value));\n    }\n    else if ((valueType & ValueTypes.NUMBER_ARRAY) > 0) {\n        return arrayToGlsl(/** @type {number[]} */ (value));\n    }\n}\nfunction assertNumber(value) {\n    if (!(getValueType(value) & ValueTypes.NUMBER)) {\n        throw new Error(\"A numeric value was expected, got \" + JSON.stringify(value) + \" instead\");\n    }\n}\nfunction assertNumbers(values) {\n    for (var i = 0; i < values.length; i++) {\n        assertNumber(values[i]);\n    }\n}\nfunction assertString(value) {\n    if (!(getValueType(value) & ValueTypes.STRING)) {\n        throw new Error(\"A string value was expected, got \" + JSON.stringify(value) + \" instead\");\n    }\n}\nfunction assertBoolean(value) {\n    if (!(getValueType(value) & ValueTypes.BOOLEAN)) {\n        throw new Error(\"A boolean value was expected, got \" + JSON.stringify(value) + \" instead\");\n    }\n}\nfunction assertArgsCount(args, count) {\n    if (args.length !== count) {\n        throw new Error(\"Exactly \" + count + \" arguments were expected, got \" + args.length + \" instead\");\n    }\n}\nfunction assertArgsMinCount(args, count) {\n    if (args.length < count) {\n        throw new Error(\"At least \" + count + \" arguments were expected, got \" + args.length + \" instead\");\n    }\n}\nfunction assertArgsMaxCount(args, count) {\n    if (args.length > count) {\n        throw new Error(\"At most \" + count + \" arguments were expected, got \" + args.length + \" instead\");\n    }\n}\nfunction assertArgsEven(args) {\n    if (args.length % 2 !== 0) {\n        throw new Error(\"An even amount of arguments was expected, got \" + args + \" instead\");\n    }\n}\nfunction assertArgsOdd(args) {\n    if (args.length % 2 === 0) {\n        throw new Error(\"An odd amount of arguments was expected, got \" + args + \" instead\");\n    }\n}\nfunction assertUniqueInferredType(args, types) {\n    if (!isTypeUnique(types)) {\n        throw new Error(\"Could not infer only one type from the following expression: \" + JSON.stringify(args));\n    }\n}\nOperators['get'] = {\n    getReturnType: function (args) {\n        return ValueTypes.ANY;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertString(args[0]);\n        var value = args[0].toString();\n        if (context.attributes.indexOf(value) === -1) {\n            context.attributes.push(value);\n        }\n        var prefix = context.inFragmentShader ? 'v_' : 'a_';\n        return prefix + value;\n    },\n};\nOperators['var'] = {\n    getReturnType: function (args) {\n        return ValueTypes.ANY;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertString(args[0]);\n        var value = args[0].toString();\n        if (context.variables.indexOf(value) === -1) {\n            context.variables.push(value);\n        }\n        return \"u_\" + value;\n    },\n};\nOperators['time'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 0);\n        return 'u_time';\n    },\n};\nOperators['zoom'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 0);\n        return 'u_zoom';\n    },\n};\nOperators['resolution'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 0);\n        return 'u_resolution';\n    },\n};\nOperators['*'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" * \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['/'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" / \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['+'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" + \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['-'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" - \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['clamp'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 3);\n        assertNumbers(args);\n        var min = expressionToGlsl(context, args[1]);\n        var max = expressionToGlsl(context, args[2]);\n        return \"clamp(\" + expressionToGlsl(context, args[0]) + \", \" + min + \", \" + max + \")\";\n    },\n};\nOperators['%'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"mod(\" + expressionToGlsl(context, args[0]) + \", \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['^'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"pow(\" + expressionToGlsl(context, args[0]) + \", \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['>'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" > \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['>='] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" >= \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['<'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" < \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['<='] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" <= \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nfunction getEqualOperator(operator) {\n    return {\n        getReturnType: function (args) {\n            return ValueTypes.BOOLEAN;\n        },\n        toGlsl: function (context, args) {\n            assertArgsCount(args, 2);\n            // find common type\n            var type = ValueTypes.ANY;\n            for (var i = 0; i < args.length; i++) {\n                type = type & getValueType(args[i]);\n            }\n            if (type === 0) {\n                throw new Error(\"All arguments should be of compatible type, got \" + JSON.stringify(args) + \" instead\");\n            }\n            return \"(\" + expressionToGlsl(context, args[0], type) + \" \" + operator + \" \" + expressionToGlsl(context, args[1], type) + \")\";\n        },\n    };\n}\nOperators['=='] = getEqualOperator('==');\nOperators['!='] = getEqualOperator('!=');\nOperators['!'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertBoolean(args[0]);\n        return \"(!\" + expressionToGlsl(context, args[0]) + \")\";\n    },\n};\nfunction getDecisionOperator(operator) {\n    return {\n        getReturnType: function (args) {\n            return ValueTypes.BOOLEAN;\n        },\n        toGlsl: function (context, args) {\n            assertArgsMinCount(args, 2);\n            for (var i = 0; i < args.length; i++) {\n                assertBoolean(args[i]);\n            }\n            var result = '';\n            result = args\n                .map(function (arg) { return expressionToGlsl(context, arg); })\n                .join(\" \" + operator + \" \");\n            result = \"(\" + result + \")\";\n            return result;\n        },\n    };\n}\nOperators['all'] = getDecisionOperator('&&');\nOperators['any'] = getDecisionOperator('||');\nOperators['between'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 3);\n        assertNumbers(args);\n        var min = expressionToGlsl(context, args[1]);\n        var max = expressionToGlsl(context, args[2]);\n        var value = expressionToGlsl(context, args[0]);\n        return \"(\" + value + \" >= \" + min + \" && \" + value + \" <= \" + max + \")\";\n    },\n};\nOperators['array'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER_ARRAY;\n    },\n    toGlsl: function (context, args) {\n        assertArgsMinCount(args, 2);\n        assertArgsMaxCount(args, 4);\n        assertNumbers(args);\n        var parsedArgs = args.map(function (val) {\n            return expressionToGlsl(context, val, ValueTypes.NUMBER);\n        });\n        return \"vec\" + args.length + \"(\" + parsedArgs.join(', ') + \")\";\n    },\n};\nOperators['color'] = {\n    getReturnType: function (args) {\n        return ValueTypes.COLOR;\n    },\n    toGlsl: function (context, args) {\n        assertArgsMinCount(args, 3);\n        assertArgsMaxCount(args, 4);\n        assertNumbers(args);\n        var array = /** @type {number[]} */ (args);\n        if (args.length === 3) {\n            array.push(1);\n        }\n        var parsedArgs = args.map(function (val, i) {\n            return (expressionToGlsl(context, val, ValueTypes.NUMBER) +\n                (i < 3 ? ' / 255.0' : ''));\n        });\n        return \"vec\" + args.length + \"(\" + parsedArgs.join(', ') + \")\";\n    },\n};\nOperators['interpolate'] = {\n    getReturnType: function (args) {\n        var type = ValueTypes.COLOR | ValueTypes.NUMBER;\n        for (var i = 3; i < args.length; i += 2) {\n            type = type & getValueType(args[i]);\n        }\n        return type;\n    },\n    toGlsl: function (context, args, opt_typeHint) {\n        assertArgsEven(args);\n        assertArgsMinCount(args, 6);\n        // validate interpolation type\n        var type = args[0];\n        var interpolation;\n        switch (type[0]) {\n            case 'linear':\n                interpolation = 1;\n                break;\n            case 'exponential':\n                interpolation = type[1];\n                break;\n            default:\n                interpolation = null;\n        }\n        if (!interpolation) {\n            throw new Error(\"Invalid interpolation type for \\\"interpolate\\\" operator, received: \" + JSON.stringify(type));\n        }\n        // compute input/output types\n        var typeHint = opt_typeHint !== undefined ? opt_typeHint : ValueTypes.ANY;\n        var outputType = Operators['interpolate'].getReturnType(args) & typeHint;\n        assertUniqueInferredType(args, outputType);\n        var input = expressionToGlsl(context, args[1]);\n        var result = null;\n        for (var i = 2; i < args.length - 2; i += 2) {\n            var stop1 = expressionToGlsl(context, args[i]);\n            var output1 = expressionToGlsl(context, args[i + 1], outputType);\n            var stop2 = expressionToGlsl(context, args[i + 2]);\n            var output2 = expressionToGlsl(context, args[i + 3], outputType);\n            result = \"mix(\" + (result || output1) + \", \" + output2 + \", pow(clamp((\" + input + \" - \" + stop1 + \") / (\" + stop2 + \" - \" + stop1 + \"), 0.0, 1.0), \" + numberToGlsl(interpolation) + \"))\";\n        }\n        return result;\n    },\n};\nOperators['match'] = {\n    getReturnType: function (args) {\n        var type = ValueTypes.ANY;\n        for (var i = 2; i < args.length; i += 2) {\n            type = type & getValueType(args[i]);\n        }\n        type = type & getValueType(args[args.length - 1]);\n        return type;\n    },\n    toGlsl: function (context, args, opt_typeHint) {\n        assertArgsEven(args);\n        assertArgsMinCount(args, 4);\n        var typeHint = opt_typeHint !== undefined ? opt_typeHint : ValueTypes.ANY;\n        var outputType = Operators['match'].getReturnType(args) & typeHint;\n        assertUniqueInferredType(args, outputType);\n        var input = expressionToGlsl(context, args[0]);\n        var fallback = expressionToGlsl(context, args[args.length - 1], outputType);\n        var result = null;\n        for (var i = args.length - 3; i >= 1; i -= 2) {\n            var match = expressionToGlsl(context, args[i]);\n            var output = expressionToGlsl(context, args[i + 1], outputType);\n            result = \"(\" + input + \" == \" + match + \" ? \" + output + \" : \" + (result || fallback) + \")\";\n        }\n        return result;\n    },\n};\nOperators['case'] = {\n    getReturnType: function (args) {\n        var type = ValueTypes.ANY;\n        for (var i = 1; i < args.length; i += 2) {\n            type = type & getValueType(args[i]);\n        }\n        type = type & getValueType(args[args.length - 1]);\n        return type;\n    },\n    toGlsl: function (context, args, opt_typeHint) {\n        assertArgsOdd(args);\n        assertArgsMinCount(args, 3);\n        var typeHint = opt_typeHint !== undefined ? opt_typeHint : ValueTypes.ANY;\n        var outputType = Operators['case'].getReturnType(args) & typeHint;\n        assertUniqueInferredType(args, outputType);\n        for (var i = 0; i < args.length - 1; i += 2) {\n            assertBoolean(args[i]);\n        }\n        var fallback = expressionToGlsl(context, args[args.length - 1], outputType);\n        var result = null;\n        for (var i = args.length - 3; i >= 0; i -= 2) {\n            var condition = expressionToGlsl(context, args[i]);\n            var output = expressionToGlsl(context, args[i + 1], outputType);\n            result = \"(\" + condition + \" ? \" + output + \" : \" + (result || fallback) + \")\";\n        }\n        return result;\n    },\n};\n//# sourceMappingURL=expressions.js.map","/**\n * Classes and utilities for generating shaders from literal style objects\n * @module ol/webgl/ShaderBuilder\n */\nimport { ValueTypes, expressionToGlsl, getStringNumberEquivalent, } from '../style/expressions.js';\n/**\n * @typedef {Object} VaryingDescription\n * @property {string} name Varying name, as will be declared in the header.\n * @property {string} type Varying type, either `float`, `vec2`, `vec4`...\n * @property {string} expression Expression which will be assigned to the varying in the vertex shader, and\n * passed on to the fragment shader.\n */\n/**\n * @classdesc\n * This class implements a classic builder pattern for generating many different types of shaders.\n * Methods can be chained, e. g.:\n *\n * ```js\n * const shader = new ShaderBuilder()\n *   .addVarying('v_width', 'float', 'a_width')\n *   .addUniform('u_time')\n *   .setColorExpression('...')\n *   .setSizeExpression('...')\n *   .outputSymbolFragmentShader();\n * ```\n */\nvar ShaderBuilder = /** @class */ (function () {\n    function ShaderBuilder() {\n        /**\n         * Uniforms; these will be declared in the header (should include the type).\n         * @type {Array<string>}\n         * @private\n         */\n        this.uniforms = [];\n        /**\n         * Attributes; these will be declared in the header (should include the type).\n         * @type {Array<string>}\n         * @private\n         */\n        this.attributes = [];\n        /**\n         * Varyings with a name, a type and an expression.\n         * @type {Array<VaryingDescription>}\n         * @private\n         */\n        this.varyings = [];\n        /**\n         * @type {string}\n         * @private\n         */\n        this.sizeExpression = 'vec2(1.0)';\n        /**\n         * @type {string}\n         * @private\n         */\n        this.rotationExpression = '0.0';\n        /**\n         * @type {string}\n         * @private\n         */\n        this.offsetExpression = 'vec2(0.0)';\n        /**\n         * @type {string}\n         * @private\n         */\n        this.colorExpression = 'vec4(1.0)';\n        /**\n         * @type {string}\n         * @private\n         */\n        this.texCoordExpression = 'vec4(0.0, 0.0, 1.0, 1.0)';\n        /**\n         * @type {string}\n         * @private\n         */\n        this.discardExpression = 'false';\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.rotateWithView = false;\n    }\n    /**\n     * Adds a uniform accessible in both fragment and vertex shaders.\n     * The given name should include a type, such as `sampler2D u_texture`.\n     * @param {string} name Uniform name\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.addUniform = function (name) {\n        this.uniforms.push(name);\n        return this;\n    };\n    /**\n     * Adds an attribute accessible in the vertex shader, read from the geometry buffer.\n     * The given name should include a type, such as `vec2 a_position`.\n     * @param {string} name Attribute name\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.addAttribute = function (name) {\n        this.attributes.push(name);\n        return this;\n    };\n    /**\n     * Adds a varying defined in the vertex shader and accessible from the fragment shader.\n     * The type and expression of the varying have to be specified separately.\n     * @param {string} name Varying name\n     * @param {'float'|'vec2'|'vec3'|'vec4'} type Type\n     * @param {string} expression Expression used to assign a value to the varying.\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.addVarying = function (name, type, expression) {\n        this.varyings.push({\n            name: name,\n            type: type,\n            expression: expression,\n        });\n        return this;\n    };\n    /**\n     * Sets an expression to compute the size of the shape.\n     * This expression can use all the uniforms and attributes available\n     * in the vertex shader, and should evaluate to a `vec2` value.\n     * @param {string} expression Size expression\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.setSizeExpression = function (expression) {\n        this.sizeExpression = expression;\n        return this;\n    };\n    /**\n     * Sets an expression to compute the rotation of the shape.\n     * This expression can use all the uniforms and attributes available\n     * in the vertex shader, and should evaluate to a `float` value in radians.\n     * @param {string} expression Size expression\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.setRotationExpression = function (expression) {\n        this.rotationExpression = expression;\n        return this;\n    };\n    /**\n     * Sets an expression to compute the offset of the symbol from the point center.\n     * This expression can use all the uniforms and attributes available\n     * in the vertex shader, and should evaluate to a `vec2` value.\n     * Note: will only be used for point geometry shaders.\n     * @param {string} expression Offset expression\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.setSymbolOffsetExpression = function (expression) {\n        this.offsetExpression = expression;\n        return this;\n    };\n    /**\n     * Sets an expression to compute the color of the shape.\n     * This expression can use all the uniforms, varyings and attributes available\n     * in the fragment shader, and should evaluate to a `vec4` value.\n     * @param {string} expression Color expression\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.setColorExpression = function (expression) {\n        this.colorExpression = expression;\n        return this;\n    };\n    /**\n     * Sets an expression to compute the texture coordinates of the vertices.\n     * This expression can use all the uniforms and attributes available\n     * in the vertex shader, and should evaluate to a `vec4` value.\n     * @param {string} expression Texture coordinate expression\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.setTextureCoordinateExpression = function (expression) {\n        this.texCoordExpression = expression;\n        return this;\n    };\n    /**\n     * Sets an expression to determine whether a fragment (pixel) should be discarded,\n     * i.e. not drawn at all.\n     * This expression can use all the uniforms, varyings and attributes available\n     * in the fragment shader, and should evaluate to a `bool` value (it will be\n     * used in an `if` statement)\n     * @param {string} expression Fragment discard expression\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.setFragmentDiscardExpression = function (expression) {\n        this.discardExpression = expression;\n        return this;\n    };\n    /**\n     * Sets whether the symbols should rotate with the view or stay aligned with the map.\n     * Note: will only be used for point geometry shaders.\n     * @param {boolean} rotateWithView Rotate with view\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.setSymbolRotateWithView = function (rotateWithView) {\n        this.rotateWithView = rotateWithView;\n        return this;\n    };\n    /**\n     * @returns {string} Previously set size expression\n     */\n    ShaderBuilder.prototype.getSizeExpression = function () {\n        return this.sizeExpression;\n    };\n    /**\n     * @returns {string} Previously set symbol offset expression\n     */\n    ShaderBuilder.prototype.getOffsetExpression = function () {\n        return this.offsetExpression;\n    };\n    /**\n     * @returns {string} Previously set color expression\n     */\n    ShaderBuilder.prototype.getColorExpression = function () {\n        return this.colorExpression;\n    };\n    /**\n     * @returns {string} Previously set texture coordinate expression\n     */\n    ShaderBuilder.prototype.getTextureCoordinateExpression = function () {\n        return this.texCoordExpression;\n    };\n    /**\n     * @returns {string} Previously set fragment discard expression\n     */\n    ShaderBuilder.prototype.getFragmentDiscardExpression = function () {\n        return this.discardExpression;\n    };\n    /**\n     * Generates a symbol vertex shader from the builder parameters,\n     * intended to be used on point geometries.\n     *\n     * Three uniforms are hardcoded in all shaders: `u_projectionMatrix`, `u_offsetScaleMatrix`,\n     * `u_offsetRotateMatrix`, `u_time`.\n     *\n     * The following attributes are hardcoded and expected to be present in the vertex buffers:\n     * `vec2 a_position`, `float a_index` (being the index of the vertex in the quad, 0 to 3).\n     *\n     * The following varyings are hardcoded and gives the coordinate of the pixel both in the quad and on the texture:\n     * `vec2 v_quadCoord`, `vec2 v_texCoord`\n     *\n     * @param {boolean} [forHitDetection] If true, the shader will be modified to include hit detection variables\n     * (namely, hit color with encoded feature id).\n     * @returns {string} The full shader as a string.\n     */\n    ShaderBuilder.prototype.getSymbolVertexShader = function (forHitDetection) {\n        var offsetMatrix = this.rotateWithView\n            ? 'u_offsetScaleMatrix * u_offsetRotateMatrix'\n            : 'u_offsetScaleMatrix';\n        var attributes = this.attributes;\n        var varyings = this.varyings;\n        if (forHitDetection) {\n            attributes = attributes.concat('vec4 a_hitColor');\n            varyings = varyings.concat({\n                name: 'v_hitColor',\n                type: 'vec4',\n                expression: 'a_hitColor',\n            });\n        }\n        return \"precision mediump float;\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_time;\\nuniform float u_zoom;\\nuniform float u_resolution;\\n\" + this.uniforms\n            .map(function (uniform) {\n            return 'uniform ' + uniform + ';';\n        })\n            .join('\\n') + \"\\nattribute vec2 a_position;\\nattribute float a_index;\\n\" + attributes\n            .map(function (attribute) {\n            return 'attribute ' + attribute + ';';\n        })\n            .join('\\n') + \"\\nvarying vec2 v_texCoord;\\nvarying vec2 v_quadCoord;\\n\" + varyings\n            .map(function (varying) {\n            return 'varying ' + varying.type + ' ' + varying.name + ';';\n        })\n            .join('\\n') + \"\\nvoid main(void) {\\n  mat4 offsetMatrix = \" + offsetMatrix + \";\\n  vec2 halfSize = \" + this.sizeExpression + \" * 0.5;\\n  vec2 offset = \" + this.offsetExpression + \";\\n  float angle = \" + this.rotationExpression + \";\\n  float offsetX;\\n  float offsetY;\\n  if (a_index == 0.0) {\\n    offsetX = (offset.x - halfSize.x) * cos(angle) + (offset.y - halfSize.y) * sin(angle);\\n    offsetY = (offset.y - halfSize.y) * cos(angle) - (offset.x - halfSize.x) * sin(angle);\\n  } else if (a_index == 1.0) {\\n    offsetX = (offset.x + halfSize.x) * cos(angle) + (offset.y - halfSize.y) * sin(angle);\\n    offsetY = (offset.y - halfSize.y) * cos(angle) - (offset.x + halfSize.x) * sin(angle);\\n  } else if (a_index == 2.0) {\\n    offsetX = (offset.x + halfSize.x) * cos(angle) + (offset.y + halfSize.y) * sin(angle);\\n    offsetY = (offset.y + halfSize.y) * cos(angle) - (offset.x + halfSize.x) * sin(angle);\\n  } else {\\n    offsetX = (offset.x - halfSize.x) * cos(angle) + (offset.y + halfSize.y) * sin(angle);\\n    offsetY = (offset.y + halfSize.y) * cos(angle) - (offset.x - halfSize.x) * sin(angle);\\n  }\\n  vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n  vec4 texCoord = \" + this.texCoordExpression + \";\\n  float u = a_index == 0.0 || a_index == 3.0 ? texCoord.s : texCoord.p;\\n  float v = a_index == 2.0 || a_index == 3.0 ? texCoord.t : texCoord.q;\\n  v_texCoord = vec2(u, v);\\n  u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\\n  v = a_index == 2.0 || a_index == 3.0 ? 0.0 : 1.0;\\n  v_quadCoord = vec2(u, v);\\n\" + varyings\n            .map(function (varying) {\n            return '  ' + varying.name + ' = ' + varying.expression + ';';\n        })\n            .join('\\n') + \"\\n}\";\n    };\n    /**\n     * Generates a symbol fragment shader from the builder parameters,\n     * intended to be used on point geometries.\n     *\n     * Expects the following varyings to be transmitted by the vertex shader:\n     * `vec2 v_quadCoord`, `vec2 v_texCoord`\n     *\n     * @param {boolean} [forHitDetection] If true, the shader will be modified to include hit detection variables\n     * (namely, hit color with encoded feature id).\n     * @returns {string} The full shader as a string.\n     */\n    ShaderBuilder.prototype.getSymbolFragmentShader = function (forHitDetection) {\n        var hitDetectionBypass = forHitDetection\n            ? '  if (gl_FragColor.a < 0.1) { discard; } gl_FragColor = v_hitColor;'\n            : '';\n        var varyings = this.varyings;\n        if (forHitDetection) {\n            varyings = varyings.concat({\n                name: 'v_hitColor',\n                type: 'vec4',\n                expression: 'a_hitColor',\n            });\n        }\n        return \"precision mediump float;\\nuniform float u_time;\\nuniform float u_zoom;\\nuniform float u_resolution;\\n\" + this.uniforms\n            .map(function (uniform) {\n            return 'uniform ' + uniform + ';';\n        })\n            .join('\\n') + \"\\nvarying vec2 v_texCoord;\\nvarying vec2 v_quadCoord;\\n\" + varyings\n            .map(function (varying) {\n            return 'varying ' + varying.type + ' ' + varying.name + ';';\n        })\n            .join('\\n') + \"\\nvoid main(void) {\\n  if (\" + this.discardExpression + \") { discard; }\\n  gl_FragColor = \" + this.colorExpression + \";\\n  gl_FragColor.rgb *= gl_FragColor.a;\\n\" + hitDetectionBypass + \"\\n}\";\n    };\n    return ShaderBuilder;\n}());\nexport { ShaderBuilder };\n/**\n * @typedef {Object} StyleParseResult\n * @property {ShaderBuilder} builder Shader builder pre-configured according to a given style\n * @property {Object.<string,import(\"./Helper\").UniformValue>} uniforms Uniform definitions.\n * @property {Array<import(\"../renderer/webgl/PointsLayer\").CustomAttribute>} attributes Attribute descriptions.\n */\n/**\n * Parses a {@link import(\"../style/LiteralStyle\").LiteralStyle} object and returns a {@link ShaderBuilder}\n * object that has been configured according to the given style, as well as `attributes` and `uniforms`\n * arrays to be fed to the `WebGLPointsRenderer` class.\n *\n * Also returns `uniforms` and `attributes` properties as expected by the\n * {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n * @param {import(\"../style/LiteralStyle\").LiteralStyle} style Literal style.\n * @returns {StyleParseResult} Result containing shader params, attributes and uniforms.\n */\nexport function parseLiteralStyle(style) {\n    var symbStyle = style.symbol;\n    var size = symbStyle.size !== undefined ? symbStyle.size : 1;\n    var color = symbStyle.color || 'white';\n    var texCoord = symbStyle.textureCoord || [0, 0, 1, 1];\n    var offset = symbStyle.offset || [0, 0];\n    var opacity = symbStyle.opacity !== undefined ? symbStyle.opacity : 1;\n    var rotation = symbStyle.rotation !== undefined ? symbStyle.rotation : 0;\n    /**\n     * @type {import(\"../style/expressions.js\").ParsingContext}\n     */\n    var vertContext = {\n        inFragmentShader: false,\n        variables: [],\n        attributes: [],\n        stringLiteralsMap: {},\n    };\n    var parsedSize = expressionToGlsl(vertContext, size, ValueTypes.NUMBER_ARRAY | ValueTypes.NUMBER);\n    var parsedOffset = expressionToGlsl(vertContext, offset, ValueTypes.NUMBER_ARRAY);\n    var parsedTexCoord = expressionToGlsl(vertContext, texCoord, ValueTypes.NUMBER_ARRAY);\n    var parsedRotation = expressionToGlsl(vertContext, rotation, ValueTypes.NUMBER);\n    /**\n     * @type {import(\"../style/expressions.js\").ParsingContext}\n     */\n    var fragContext = {\n        inFragmentShader: true,\n        variables: vertContext.variables,\n        attributes: [],\n        stringLiteralsMap: vertContext.stringLiteralsMap,\n    };\n    var parsedColor = expressionToGlsl(fragContext, color, ValueTypes.COLOR);\n    var parsedOpacity = expressionToGlsl(fragContext, opacity, ValueTypes.NUMBER);\n    var opacityFilter = '1.0';\n    var visibleSize = \"vec2(\" + expressionToGlsl(fragContext, size, ValueTypes.NUMBER_ARRAY | ValueTypes.NUMBER) + \").x\";\n    switch (symbStyle.symbolType) {\n        case 'square':\n            break;\n        case 'image':\n            break;\n        // taken from https://thebookofshaders.com/07/\n        case 'circle':\n            opacityFilter = \"(1.0-smoothstep(1.-4./\" + visibleSize + \",1.,dot(v_quadCoord-.5,v_quadCoord-.5)*4.))\";\n            break;\n        case 'triangle':\n            var st = '(v_quadCoord*2.-1.)';\n            var a = \"(atan(\" + st + \".x,\" + st + \".y))\";\n            opacityFilter = \"(1.0-smoothstep(.5-3./\" + visibleSize + \",.5,cos(floor(.5+\" + a + \"/2.094395102)*2.094395102-\" + a + \")*length(\" + st + \")))\";\n            break;\n        default:\n            throw new Error('Unexpected symbol type: ' + symbStyle.symbolType);\n    }\n    var builder = new ShaderBuilder()\n        .setSizeExpression(\"vec2(\" + parsedSize + \")\")\n        .setRotationExpression(parsedRotation)\n        .setSymbolOffsetExpression(parsedOffset)\n        .setTextureCoordinateExpression(parsedTexCoord)\n        .setSymbolRotateWithView(!!symbStyle.rotateWithView)\n        .setColorExpression(\"vec4(\" + parsedColor + \".rgb, \" + parsedColor + \".a * \" + parsedOpacity + \" * \" + opacityFilter + \")\");\n    if (style.filter) {\n        var parsedFilter = expressionToGlsl(fragContext, style.filter, ValueTypes.BOOLEAN);\n        builder.setFragmentDiscardExpression(\"!\" + parsedFilter);\n    }\n    /** @type {Object.<string,import(\"../webgl/Helper\").UniformValue>} */\n    var uniforms = {};\n    // define one uniform per variable\n    fragContext.variables.forEach(function (varName) {\n        builder.addUniform(\"float u_\" + varName);\n        uniforms[\"u_\" + varName] = function () {\n            if (!style.variables || style.variables[varName] === undefined) {\n                throw new Error(\"The following variable is missing from the style: \" + varName);\n            }\n            var value = style.variables[varName];\n            if (typeof value === 'string') {\n                value = getStringNumberEquivalent(vertContext, value);\n            }\n            return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n        };\n    });\n    if (symbStyle.symbolType === 'image' && symbStyle.src) {\n        var texture = new Image();\n        texture.src = symbStyle.src;\n        builder\n            .addUniform('sampler2D u_texture')\n            .setColorExpression(builder.getColorExpression() + ' * texture2D(u_texture, v_texCoord)');\n        uniforms['u_texture'] = texture;\n    }\n    // for each feature attribute used in the fragment shader, define a varying that will be used to pass data\n    // from the vertex to the fragment shader, as well as an attribute in the vertex shader (if not already present)\n    fragContext.attributes.forEach(function (attrName) {\n        if (vertContext.attributes.indexOf(attrName) === -1) {\n            vertContext.attributes.push(attrName);\n        }\n        builder.addVarying(\"v_\" + attrName, 'float', \"a_\" + attrName);\n    });\n    // for each feature attribute used in the vertex shader, define an attribute in the vertex shader.\n    vertContext.attributes.forEach(function (attrName) {\n        builder.addAttribute(\"float a_\" + attrName);\n    });\n    return {\n        builder: builder,\n        attributes: vertContext.attributes.map(function (attributeName) {\n            return {\n                name: attributeName,\n                callback: function (feature, props) {\n                    var value = props[attributeName];\n                    if (typeof value === 'string') {\n                        value = getStringNumberEquivalent(vertContext, value);\n                    }\n                    return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n                },\n            };\n        }),\n        uniforms: uniforms,\n    };\n}\n//# sourceMappingURL=ShaderBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/WebGLPoints\n */\nimport Layer from './Layer.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport { assign } from '../obj.js';\nimport { parseLiteralStyle } from '../webgl/ShaderBuilder.js';\n/**\n * @typedef {Object} Options\n * @property {import('../style/LiteralStyle.js').LiteralStyle} style Literal style to apply to the layer features.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {boolean} [disableHitDetection=false] Setting this to true will provide a slight performance boost, but will\n * prevent all hit detection on the layer.\n */\n/**\n * @classdesc\n * Layer optimized for rendering large point datasets. Takes a `style` property which\n * is a serializable JSON object describing how the layer should be rendered.\n *\n * Here are a few samples of literal style objects:\n * ```js\n * const style = {\n *   symbol: {\n *     symbolType: 'circle',\n *     size: 8,\n *     color: '#33AAFF',\n *     opacity: 0.9\n *   }\n * }\n * ```\n *\n * ```js\n * const style = {\n *   symbol: {\n *     symbolType: 'image',\n *     offset: [0, 12],\n *     size: [4, 8],\n *     src: '../static/exclamation-mark.png'\n *   }\n * }\n * ```\n *\n * **Important: a `WebGLPoints` layer must be manually disposed when removed, otherwise the underlying WebGL context\n * will not be garbage collected.**\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar WebGLPointsLayer = /** @class */ (function (_super) {\n    __extends(WebGLPointsLayer, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function WebGLPointsLayer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {import('../webgl/ShaderBuilder.js').StyleParseResult}\n         */\n        _this.parseResult_ = parseLiteralStyle(options.style);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hitDetectionDisabled_ = !!options.disableHitDetection;\n        return _this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {WebGLPointsLayerRenderer} A layer renderer.\n     */\n    WebGLPointsLayer.prototype.createRenderer = function () {\n        return new WebGLPointsLayerRenderer(this, {\n            className: this.getClassName(),\n            vertexShader: this.parseResult_.builder.getSymbolVertexShader(),\n            fragmentShader: this.parseResult_.builder.getSymbolFragmentShader(),\n            hitVertexShader: !this.hitDetectionDisabled_ &&\n                this.parseResult_.builder.getSymbolVertexShader(true),\n            hitFragmentShader: !this.hitDetectionDisabled_ &&\n                this.parseResult_.builder.getSymbolFragmentShader(true),\n            uniforms: this.parseResult_.uniforms,\n            attributes: this.parseResult_.attributes,\n        });\n    };\n    /**\n     * Clean up.\n     */\n    WebGLPointsLayer.prototype.disposeInternal = function () {\n        this.getRenderer().disposeInternal();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return WebGLPointsLayer;\n}(Layer));\nexport default WebGLPointsLayer;\n//# sourceMappingURL=WebGLPoints.js.map","/**\n * @module ol/source/BingMaps\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { createFromTileUrlFunctions } from '../tileurlfunction.js';\nimport { createOrUpdate } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport { jsonp as requestJSONP } from '../net.js';\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n    var z = tileCoord[0];\n    var digits = new Array(z);\n    var mask = 1 << (z - 1);\n    var i, charCode;\n    for (i = 0; i < z; ++i) {\n        // 48 is charCode for 0 - '0'.charCodeAt(0)\n        charCode = 48;\n        if (tileCoord[1] & mask) {\n            charCode += 1;\n        }\n        if (tileCoord[2] & mask) {\n            charCode += 2;\n        }\n        digits[i] = String.fromCharCode(charCode);\n        mask >>= 1;\n    }\n    return digits.join('');\n}\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n    'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n    'Terms of Use</a>';\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources\n */\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nvar BingMaps = /** @class */ (function (_super) {\n    __extends(BingMaps, _super);\n    /**\n     * @param {Options} options Bing Maps options.\n     */\n    function BingMaps(options) {\n        var _this = this;\n        var hidpi = options.hidpi !== undefined ? options.hidpi : false;\n        _this = _super.call(this, {\n            cacheSize: options.cacheSize,\n            crossOrigin: 'anonymous',\n            imageSmoothing: options.imageSmoothing,\n            opaque: true,\n            projection: getProjection('EPSG:3857'),\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: SourceState.LOADING,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: hidpi ? 2 : 1,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = hidpi;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.apiKey_ = options.key;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.imagerySet_ = options.imagerySet;\n        var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n            _this.imagerySet_ +\n            '?uriScheme=https&include=ImageryProviders&key=' +\n            _this.apiKey_ +\n            '&c=' +\n            _this.culture_;\n        requestJSONP(url, _this.handleImageryMetadataResponse.bind(_this), undefined, 'jsonp');\n        return _this;\n    }\n    /**\n     * Get the api key used for this source.\n     *\n     * @return {string} The api key.\n     * @api\n     */\n    BingMaps.prototype.getApiKey = function () {\n        return this.apiKey_;\n    };\n    /**\n     * Get the imagery set associated with this source.\n     *\n     * @return {string} The imagery set.\n     * @api\n     */\n    BingMaps.prototype.getImagerySet = function () {\n        return this.imagerySet_;\n    };\n    /**\n     * @param {BingMapsImageryMetadataResponse} response Response.\n     */\n    BingMaps.prototype.handleImageryMetadataResponse = function (response) {\n        if (response.statusCode != 200 ||\n            response.statusDescription != 'OK' ||\n            response.authenticationResultCode != 'ValidCredentials' ||\n            response.resourceSets.length != 1 ||\n            response.resourceSets[0].resources.length != 1) {\n            this.setState(SourceState.ERROR);\n            return;\n        }\n        var resource = response.resourceSets[0].resources[0];\n        var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n        var sourceProjection = this.getProjection();\n        var extent = extentFromProjection(sourceProjection);\n        var scale = this.hidpi_ ? 2 : 1;\n        var tileSize = resource.imageWidth == resource.imageHeight\n            ? resource.imageWidth / scale\n            : [resource.imageWidth / scale, resource.imageHeight / scale];\n        var tileGrid = createXYZ({\n            extent: extent,\n            minZoom: resource.zoomMin,\n            maxZoom: maxZoom,\n            tileSize: tileSize,\n        });\n        this.tileGrid = tileGrid;\n        var culture = this.culture_;\n        var hidpi = this.hidpi_;\n        this.tileUrlFunction = createFromTileUrlFunctions(resource.imageUrlSubdomains.map(function (subdomain) {\n            /** @type {import('../tilecoord.js').TileCoord} */\n            var quadKeyTileCoord = [0, 0, 0];\n            var imageUrl = resource.imageUrl\n                .replace('{subdomain}', subdomain)\n                .replace('{culture}', culture);\n            return (\n            /**\n             * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n             * @param {number} pixelRatio Pixel ratio.\n             * @param {import(\"../proj/Projection.js\").default} projection Projection.\n             * @return {string|undefined} Tile URL.\n             */\n            function (tileCoord, pixelRatio, projection) {\n                if (!tileCoord) {\n                    return undefined;\n                }\n                else {\n                    createOrUpdate(tileCoord[0], tileCoord[1], tileCoord[2], quadKeyTileCoord);\n                    var url = imageUrl;\n                    if (hidpi) {\n                        url += '&dpi=d1&device=mobile';\n                    }\n                    return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n                }\n            });\n        }));\n        if (resource.imageryProviders) {\n            var transform_1 = getTransformFromProjections(getProjection('EPSG:4326'), this.getProjection());\n            this.setAttributions(function (frameState) {\n                var attributions = [];\n                var viewState = frameState.viewState;\n                var tileGrid = this.getTileGrid();\n                var z = tileGrid.getZForResolution(viewState.resolution, this.zDirection);\n                var tileCoord = tileGrid.getTileCoordForCoordAndZ(viewState.center, z);\n                var zoom = tileCoord[0];\n                resource.imageryProviders.map(function (imageryProvider) {\n                    var intersecting = false;\n                    var coverageAreas = imageryProvider.coverageAreas;\n                    for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\n                        var coverageArea = coverageAreas[i];\n                        if (zoom >= coverageArea.zoomMin &&\n                            zoom <= coverageArea.zoomMax) {\n                            var bbox = coverageArea.bbox;\n                            var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n                            var extent_1 = applyTransform(epsg4326Extent, transform_1);\n                            if (intersects(extent_1, frameState.extent)) {\n                                intersecting = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (intersecting) {\n                        attributions.push(imageryProvider.attribution);\n                    }\n                });\n                attributions.push(TOS_ATTRIBUTION);\n                return attributions;\n            }.bind(this));\n        }\n        this.setState(SourceState.READY);\n    };\n    return BingMaps;\n}(TileImage));\nexport default BingMaps;\n//# sourceMappingURL=BingMaps.js.map","/**\n * @module ol/net\n */\nimport { getUid } from './util.js';\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n    var script = document.createElement('script');\n    var key = 'olc_' + getUid(callback);\n    function cleanup() {\n        delete window[key];\n        script.parentNode.removeChild(script);\n    }\n    script.async = true;\n    script.src =\n        url +\n            (url.indexOf('?') == -1 ? '?' : '&') +\n            (opt_callbackParam || 'callback') +\n            '=' +\n            key;\n    var timer = setTimeout(function () {\n        cleanup();\n        if (opt_errback) {\n            opt_errback();\n        }\n    }, 10000);\n    window[key] = function (data) {\n        clearTimeout(timer);\n        cleanup();\n        callback(data);\n    };\n    document.getElementsByTagName('head')[0].appendChild(script);\n}\n//# sourceMappingURL=net.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined\n            ? options.tileGrid\n            : createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Image\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceResolution, render as renderReprojected, } from '../reproj.js';\nimport { getCenter, getHeight, getIntersection, getWidth } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = /** @class */ (function (_super) {\n    __extends(ReprojImage, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n     * @param {number} targetResolution Target resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {FunctionType} getImageFunction\n     *     Function returning source images (extent, resolution, pixelRatio).\n     * @param {object=} opt_contextOptions Properties to set on the canvas context.\n     */\n    function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction, opt_contextOptions) {\n        var _this = this;\n        var maxSourceExtent = sourceProj.getExtent();\n        var maxTargetExtent = targetProj.getExtent();\n        var limitedTargetExtent = maxTargetExtent\n            ? getIntersection(targetExtent, maxTargetExtent)\n            : targetExtent;\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        var errorThresholdInPixels = ERROR_THRESHOLD;\n        var triangulation = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        var sourceExtent = triangulation.calculateSourceExtent();\n        var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n        var state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n        var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n        _this = _super.call(this, targetExtent, targetResolution, sourcePixelRatio, state) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.targetProj_ = targetProj;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = triangulation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.targetResolution_ = targetResolution;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.targetExtent_ = targetExtent;\n        /**\n         * @private\n         * @type {import(\"../ImageBase.js\").default}\n         */\n        _this.sourceImage_ = sourceImage;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourcePixelRatio_ = sourcePixelRatio;\n        /**\n         * @private\n         * @type {object}\n         */\n        _this.contextOptions_ = opt_contextOptions;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceListenerKey_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    ReprojImage.prototype.disposeInternal = function () {\n        if (this.state == ImageState.LOADING) {\n            this.unlistenSource_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @return {HTMLCanvasElement} Image.\n     */\n    ReprojImage.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    ReprojImage.prototype.getProjection = function () {\n        return this.targetProj_;\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.reproject_ = function () {\n        var sourceState = this.sourceImage_.getState();\n        if (sourceState == ImageState.LOADED) {\n            var width = getWidth(this.targetExtent_) / this.targetResolution_;\n            var height = getHeight(this.targetExtent_) / this.targetResolution_;\n            this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_, this.sourceImage_.getResolution(), this.maxSourceExtent_, this.targetResolution_, this.targetExtent_, this.triangulation_, [\n                {\n                    extent: this.sourceImage_.getExtent(),\n                    image: this.sourceImage_.getImage(),\n                },\n            ], 0, undefined, this.contextOptions_);\n        }\n        this.state = sourceState;\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ReprojImage.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                this.reproject_();\n            }\n            else {\n                this.sourceListenerKey_ = listen(this.sourceImage_, EventType.CHANGE, function (e) {\n                    var sourceState = this.sourceImage_.getState();\n                    if (sourceState == ImageState.LOADED ||\n                        sourceState == ImageState.ERROR) {\n                        this.unlistenSource_();\n                        this.reproject_();\n                    }\n                }, this);\n                this.sourceImage_.load();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.unlistenSource_ = function () {\n        unlistenByKey(\n        /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n        this.sourceListenerKey_ = null;\n    };\n    return ReprojImage;\n}(ImageBase));\nexport default ReprojImage;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED } from './common.js';\nimport { abstract } from '../util.js';\nimport { equals } from '../extent.js';\nimport { equivalent } from '../proj.js';\nimport { linearFindNearest } from '../array.js';\n/**\n * @enum {string}\n */\nexport var ImageSourceEventType = {\n    /**\n     * Triggered when an image starts loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n     * @api\n     */\n    IMAGELOADSTART: 'imageloadstart',\n    /**\n     * Triggered when an image finishes loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n     * @api\n     */\n    IMAGELOADEND: 'imageloadend',\n    /**\n     * Triggered if image loading results in an error.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n     * @api\n     */\n    IMAGELOADERROR: 'imageloaderror',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = /** @class */ (function (_super) {\n    __extends(ImageSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Image.js\").default} image The image.\n     */\n    function ImageSourceEvent(type, image) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The image related to the event.\n         * @type {import(\"../Image.js\").default}\n         * @api\n         */\n        _this.image = image;\n        return _this;\n    }\n    return ImageSourceEvent;\n}(Event));\nexport { ImageSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageSource = /** @class */ (function (_super) {\n    __extends(ImageSource, _super);\n    /**\n     * @param {Options} options Single image source options.\n     */\n    function ImageSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            state: options.state,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.resolutions_ =\n            options.resolutions !== undefined ? options.resolutions : null;\n        /**\n         * @private\n         * @type {import(\"../reproj/Image.js\").default}\n         */\n        _this.reprojectedImage_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.reprojectedRevision_ = 0;\n        /**\n         * @private\n         * @type {object|undefined}\n         */\n        _this.contextOptions_ =\n            options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n        return _this;\n    }\n    /**\n     * @return {Array<number>} Resolutions.\n     */\n    ImageSource.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    ImageSource.prototype.getContextOptions = function () {\n        return this.contextOptions_;\n    };\n    /**\n     * @protected\n     * @param {number} resolution Resolution.\n     * @return {number} Resolution.\n     */\n    ImageSource.prototype.findNearestResolution = function (resolution) {\n        if (this.resolutions_) {\n            var idx = linearFindNearest(this.resolutions_, resolution, 0);\n            resolution = this.resolutions_[idx];\n        }\n        return resolution;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     */\n    ImageSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            if (sourceProjection) {\n                projection = sourceProjection;\n            }\n            return this.getImageInternal(extent, resolution, pixelRatio, projection);\n        }\n        else {\n            if (this.reprojectedImage_) {\n                if (this.reprojectedRevision_ == this.getRevision() &&\n                    equivalent(this.reprojectedImage_.getProjection(), projection) &&\n                    this.reprojectedImage_.getResolution() == resolution &&\n                    equals(this.reprojectedImage_.getExtent(), extent)) {\n                    return this.reprojectedImage_;\n                }\n                this.reprojectedImage_.dispose();\n                this.reprojectedImage_ = null;\n            }\n            this.reprojectedImage_ = new ReprojImage(sourceProjection, projection, extent, resolution, pixelRatio, function (extent, resolution, pixelRatio) {\n                return this.getImageInternal(extent, resolution, pixelRatio, sourceProjection);\n            }.bind(this), this.contextOptions_);\n            this.reprojectedRevision_ = this.getRevision();\n            return this.reprojectedImage_;\n        }\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     * @protected\n     */\n    ImageSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Handle image change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    ImageSource.prototype.handleImageChange = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        switch (image.getState()) {\n            case ImageState.LOADING:\n                this.loading = true;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART, image));\n                break;\n            case ImageState.LOADED:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND, image));\n                break;\n            case ImageState.ERROR:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR, image));\n                break;\n            default:\n            // pass\n        }\n    };\n    return ImageSource;\n}(Source));\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\nexport default ImageSource;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/uri\n */\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n    var keyParams = [];\n    // Skip any null or undefined parameter values\n    Object.keys(params).forEach(function (k) {\n        if (params[k] !== null && params[k] !== undefined) {\n            keyParams.push(k + '=' + encodeURIComponent(params[k]));\n        }\n    });\n    var qs = keyParams.join('&');\n    // remove any trailing ? or &\n    uri = uri.replace(/[?&]$/, '');\n    // append ? or & depending on whether uri has existing parameters\n    uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n    return uri + qs;\n}\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/source/WMSServerType\n */\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n    /**\n     * HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n     * @api\n     */\n    CARMENTA_SERVER: 'carmentaserver',\n    /**\n     * HiDPI support for [GeoServer](https://geoserver.org/)\n     * @api\n     */\n    GEOSERVER: 'geoserver',\n    /**\n     * HiDPI support for [MapServer](https://mapserver.org/)\n     * @api\n     */\n    MAPSERVER: 'mapserver',\n    /**\n     * HiDPI support for [QGIS](https://qgis.org/)\n     * @api\n     */\n    QGIS: 'qgis',\n};\n//# sourceMappingURL=WMSServerType.js.map","/**\n * @module ol/source/ImageWMS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_WMS_VERSION } from './common.js';\nimport EventType from '../events/EventType.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport { appendParams } from '../uri.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { calculateSourceResolution } from '../reproj.js';\nimport { compareVersions } from '../string.js';\nimport { containsExtent, getCenter, getForViewAndSize, getHeight, getWidth, } from '../extent.js';\nimport { get as getProjection, transform } from '../proj.js';\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageWMS = /** @class */ (function (_super) {\n    __extends(ImageWMS, _super);\n    /**\n     * @param {Options=} [opt_options] ImageWMS options.\n     */\n    function ImageWMS(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            imageSmoothing: options.imageSmoothing,\n            projection: options.projection,\n            resolutions: options.resolutions,\n        }) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").LoadFunction}\n         */\n        _this.imageLoadFunction_ =\n            options.imageLoadFunction !== undefined\n                ? options.imageLoadFunction\n                : defaultImageLoadFunction;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.v13_ = true;\n        _this.updateV13_();\n        /**\n         * @private\n         * @type {import(\"./WMSServerType.js\").default|undefined}\n         */\n        _this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n        return _this;\n    }\n    /**\n     * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n     * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n     * constructed.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n     *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n     *     in the `LAYERS` parameter will be used. `VERSION` should not be\n     *     specified here.\n     * @return {string|undefined} GetFeatureInfo URL.\n     * @api\n     */\n    ImageWMS.prototype.getFeatureInfoUrl = function (coordinate, resolution, projection, params) {\n        if (this.url_ === undefined) {\n            return undefined;\n        }\n        var projectionObj = getProjection(projection);\n        var sourceProjectionObj = this.getProjection();\n        if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n            resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n            coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n        }\n        var extent = getForViewAndSize(coordinate, resolution, 0, GETFEATUREINFO_IMAGE_SIZE);\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetFeatureInfo',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n            'QUERY_LAYERS': this.params_['LAYERS'],\n        };\n        assign(baseParams, this.params_, params);\n        var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n        var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n        baseParams[this.v13_ ? 'I' : 'X'] = x;\n        baseParams[this.v13_ ? 'J' : 'Y'] = y;\n        return this.getRequestUrl_(extent, GETFEATUREINFO_IMAGE_SIZE, 1, sourceProjectionObj || projectionObj, baseParams);\n    };\n    /**\n     * Return the GetLegendGraphic URL, optionally optimized for the passed\n     * resolution and possibly including any passed specific parameters. Returns\n     * `undefined` if the GetLegendGraphic URL cannot be constructed.\n     *\n     * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n     *     will not be calculated and included in URL.\n     * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n     *     request is generated for this wms layer, else it will try to use the\n     *     configured wms layer. Default `FORMAT` is `image/png`.\n     *     `VERSION` should not be specified here.\n     * @return {string|undefined} GetLegendGraphic URL.\n     * @api\n     */\n    ImageWMS.prototype.getLegendUrl = function (resolution, params) {\n        if (this.url_ === undefined) {\n            return undefined;\n        }\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetLegendGraphic',\n            'FORMAT': 'image/png',\n        };\n        if (params === undefined || params['LAYER'] === undefined) {\n            var layers = this.params_.LAYERS;\n            var isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n            if (!isSingleLayer) {\n                return undefined;\n            }\n            baseParams['LAYER'] = layers;\n        }\n        if (resolution !== undefined) {\n            var mpu = this.getProjection()\n                ? this.getProjection().getMetersPerUnit()\n                : 1;\n            var pixelSize = 0.00028;\n            baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n        }\n        assign(baseParams, params);\n        return appendParams(/** @type {string} */ (this.url_), baseParams);\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    ImageWMS.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../Image.js\").default} Single image.\n     */\n    ImageWMS.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (this.url_ === undefined) {\n            return null;\n        }\n        resolution = this.findNearestResolution(resolution);\n        if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n            pixelRatio = 1;\n        }\n        var imageResolution = resolution / pixelRatio;\n        var center = getCenter(extent);\n        var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n        var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n        var viewExtent = getForViewAndSize(center, imageResolution, 0, [\n            viewWidth,\n            viewHeight,\n        ]);\n        var requestWidth = Math.ceil((this.ratio_ * getWidth(extent)) / imageResolution);\n        var requestHeight = Math.ceil((this.ratio_ * getHeight(extent)) / imageResolution);\n        var requestExtent = getForViewAndSize(center, imageResolution, 0, [\n            requestWidth,\n            requestHeight,\n        ]);\n        var image = this.image_;\n        if (image &&\n            this.renderedRevision_ == this.getRevision() &&\n            image.getResolution() == resolution &&\n            image.getPixelRatio() == pixelRatio &&\n            containsExtent(image.getExtent(), viewExtent)) {\n            return image;\n        }\n        var params = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetMap',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n        };\n        assign(params, this.params_);\n        this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n        this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n        var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio, projection, params);\n        this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio, url, this.crossOrigin_, this.imageLoadFunction_);\n        this.renderedRevision_ = this.getRevision();\n        this.image_.addEventListener(EventType.CHANGE, this.handleImageChange.bind(this));\n        return this.image_;\n    };\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n    ImageWMS.prototype.getImageLoadFunction = function () {\n        return this.imageLoadFunction_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string} Request URL.\n     * @private\n     */\n    ImageWMS.prototype.getRequestUrl_ = function (extent, size, pixelRatio, projection, params) {\n        assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n        params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n        if (!('STYLES' in this.params_)) {\n            params['STYLES'] = '';\n        }\n        if (pixelRatio != 1) {\n            switch (this.serverType_) {\n                case WMSServerType.GEOSERVER:\n                    var dpi = (90 * pixelRatio + 0.5) | 0;\n                    if ('FORMAT_OPTIONS' in params) {\n                        params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n                    }\n                    else {\n                        params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n                    }\n                    break;\n                case WMSServerType.MAPSERVER:\n                    params['MAP_RESOLUTION'] = 90 * pixelRatio;\n                    break;\n                case WMSServerType.CARMENTA_SERVER:\n                case WMSServerType.QGIS:\n                    params['DPI'] = 90 * pixelRatio;\n                    break;\n                default:\n                    assert(false, 8); // Unknown `serverType` configured\n                    break;\n            }\n        }\n        params['WIDTH'] = size[0];\n        params['HEIGHT'] = size[1];\n        var axisOrientation = projection.getAxisOrientation();\n        var bbox;\n        if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n            bbox = [extent[1], extent[0], extent[3], extent[2]];\n        }\n        else {\n            bbox = extent;\n        }\n        params['BBOX'] = bbox.join(',');\n        return appendParams(/** @type {string} */ (this.url_), params);\n    };\n    /**\n     * Return the URL used for this WMS source.\n     * @return {string|undefined} URL.\n     * @api\n     */\n    ImageWMS.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * Set the image load function of the source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n    ImageWMS.prototype.setImageLoadFunction = function (imageLoadFunction) {\n        this.image_ = null;\n        this.imageLoadFunction_ = imageLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string|undefined} url URL.\n     * @api\n     */\n    ImageWMS.prototype.setUrl = function (url) {\n        if (url != this.url_) {\n            this.url_ = url;\n            this.image_ = null;\n            this.changed();\n        }\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    ImageWMS.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.updateV13_();\n        this.image_ = null;\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    ImageWMS.prototype.updateV13_ = function () {\n        var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n        this.v13_ = compareVersions(version, '1.3') >= 0;\n    };\n    return ImageWMS;\n}(ImageSource));\nexport default ImageWMS;\n//# sourceMappingURL=ImageWMS.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options=} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined\n            ? options.url\n            : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            attributionsCollapsible: false,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            transition: options.transition,\n            url: url,\n            wrapX: options.wrapX,\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/source/TileWMS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_WMS_VERSION } from './common.js';\nimport TileImage from './TileImage.js';\nimport WMSServerType from './WMSServerType.js';\nimport { appendParams } from '../uri.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { buffer, createEmpty } from '../extent.js';\nimport { buffer as bufferSize, scale as scaleSize, toSize } from '../size.js';\nimport { calculateSourceResolution } from '../reproj.js';\nimport { compareVersions } from '../string.js';\nimport { get as getProjection, transform, transformExtent } from '../proj.js';\nimport { modulo } from '../math.js';\nimport { hash as tileCoordHash } from '../tilecoord.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nvar TileWMS = /** @class */ (function (_super) {\n    __extends(TileWMS, _super);\n    /**\n     * @param {Options=} [opt_options] Tile WMS options.\n     */\n    function TileWMS(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : /** @type {Options} */ ({});\n        var params = options.params || {};\n        var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            opaque: !transparent,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: options.tileClass,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = params;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.v13_ = true;\n        /**\n         * @private\n         * @type {import(\"./WMSServerType.js\").default|undefined}\n         */\n        _this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.tmpExtent_ = createEmpty();\n        _this.updateV13_();\n        _this.setKey(_this.getKeyForParams_());\n        return _this;\n    }\n    /**\n     * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n     * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n     * constructed.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n     *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n     *     in the `LAYERS` parameter will be used. `VERSION` should not be\n     *     specified here.\n     * @return {string|undefined} GetFeatureInfo URL.\n     * @api\n     */\n    TileWMS.prototype.getFeatureInfoUrl = function (coordinate, resolution, projection, params) {\n        var projectionObj = getProjection(projection);\n        var sourceProjectionObj = this.getProjection();\n        var tileGrid = this.getTileGrid();\n        if (!tileGrid) {\n            tileGrid = this.getTileGridForProjection(projectionObj);\n        }\n        var z = tileGrid.getZForResolution(resolution, this.zDirection);\n        var tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n        if (tileGrid.getResolutions().length <= tileCoord[0]) {\n            return undefined;\n        }\n        var tileResolution = tileGrid.getResolution(tileCoord[0]);\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n        var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n        var gutter = this.gutter_;\n        if (gutter !== 0) {\n            tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n            tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n        }\n        if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n            tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n            tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n            coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n        }\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetFeatureInfo',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n            'QUERY_LAYERS': this.params_['LAYERS'],\n        };\n        assign(baseParams, this.params_, params);\n        var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n        var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n        baseParams[this.v13_ ? 'I' : 'X'] = x;\n        baseParams[this.v13_ ? 'J' : 'Y'] = y;\n        return this.getRequestUrl_(tileCoord, tileSize, tileExtent, 1, sourceProjectionObj || projectionObj, baseParams);\n    };\n    /**\n     * Return the GetLegendGraphic URL, optionally optimized for the passed\n     * resolution and possibly including any passed specific parameters. Returns\n     * `undefined` if the GetLegendGraphic URL cannot be constructed.\n     *\n     * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n     *     will not be calculated and included in URL.\n     * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n     *     request is generated for this wms layer, else it will try to use the\n     *     configured wms layer. Default `FORMAT` is `image/png`.\n     *     `VERSION` should not be specified here.\n     * @return {string|undefined} GetLegendGraphic URL.\n     * @api\n     */\n    TileWMS.prototype.getLegendUrl = function (resolution, params) {\n        if (this.urls[0] === undefined) {\n            return undefined;\n        }\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetLegendGraphic',\n            'FORMAT': 'image/png',\n        };\n        if (params === undefined || params['LAYER'] === undefined) {\n            var layers = this.params_.LAYERS;\n            var isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n            if (!isSingleLayer) {\n                return undefined;\n            }\n            baseParams['LAYER'] = layers;\n        }\n        if (resolution !== undefined) {\n            var mpu = this.getProjection()\n                ? this.getProjection().getMetersPerUnit()\n                : 1;\n            var pixelSize = 0.00028;\n            baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n        }\n        assign(baseParams, params);\n        return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileWMS.prototype.getGutter = function () {\n        return this.gutter_;\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    TileWMS.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\n     * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string|undefined} Request URL.\n     * @private\n     */\n    TileWMS.prototype.getRequestUrl_ = function (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n        var urls = this.urls;\n        if (!urls) {\n            return undefined;\n        }\n        params['WIDTH'] = tileSize[0];\n        params['HEIGHT'] = tileSize[1];\n        params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n        if (!('STYLES' in this.params_)) {\n            params['STYLES'] = '';\n        }\n        if (pixelRatio != 1) {\n            switch (this.serverType_) {\n                case WMSServerType.GEOSERVER:\n                    var dpi = (90 * pixelRatio + 0.5) | 0;\n                    if ('FORMAT_OPTIONS' in params) {\n                        params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n                    }\n                    else {\n                        params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n                    }\n                    break;\n                case WMSServerType.MAPSERVER:\n                    params['MAP_RESOLUTION'] = 90 * pixelRatio;\n                    break;\n                case WMSServerType.CARMENTA_SERVER:\n                case WMSServerType.QGIS:\n                    params['DPI'] = 90 * pixelRatio;\n                    break;\n                default:\n                    assert(false, 52); // Unknown `serverType` configured\n                    break;\n            }\n        }\n        var axisOrientation = projection.getAxisOrientation();\n        var bbox = tileExtent;\n        if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n            var tmp = void 0;\n            tmp = tileExtent[0];\n            bbox[0] = tileExtent[1];\n            bbox[1] = tmp;\n            tmp = tileExtent[2];\n            bbox[2] = tileExtent[3];\n            bbox[3] = tmp;\n        }\n        params['BBOX'] = bbox.join(',');\n        var url;\n        if (urls.length == 1) {\n            url = urls[0];\n        }\n        else {\n            var index = modulo(tileCoordHash(tileCoord), urls.length);\n            url = urls[index];\n        }\n        return appendParams(url, params);\n    };\n    /**\n     * Get the tile pixel ratio for this source.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileWMS.prototype.getTilePixelRatio = function (pixelRatio) {\n        return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n    };\n    /**\n     * @private\n     * @return {string} The key for the current params.\n     */\n    TileWMS.prototype.getKeyForParams_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.params_) {\n            res[i++] = key + '-' + this.params_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    TileWMS.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.updateV13_();\n        this.setKey(this.getKeyForParams_());\n    };\n    /**\n     * @private\n     */\n    TileWMS.prototype.updateV13_ = function () {\n        var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n        this.v13_ = compareVersions(version, '1.3') >= 0;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n     * @param {number} pixelRatio The pixel ratio\n     * @param {import(\"../proj/Projection.js\").default} projection The projection\n     * @return {string|undefined} The tile URL\n     * @override\n     */\n    TileWMS.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        var tileGrid = this.getTileGrid();\n        if (!tileGrid) {\n            tileGrid = this.getTileGridForProjection(projection);\n        }\n        if (tileGrid.getResolutions().length <= tileCoord[0]) {\n            return undefined;\n        }\n        if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n            pixelRatio = 1;\n        }\n        var tileResolution = tileGrid.getResolution(tileCoord[0]);\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n        var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n        var gutter = this.gutter_;\n        if (gutter !== 0) {\n            tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n            tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n        }\n        if (pixelRatio != 1) {\n            tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n        }\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetMap',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n        };\n        assign(baseParams, this.params_);\n        return this.getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, baseParams);\n    };\n    return TileWMS;\n}(TileImage));\nexport default TileWMS;\n//# sourceMappingURL=TileWMS.js.map","export {Collection, Map, View, Feature } from 'ol';\n\n\nimport { unByKey } from 'ol/Observable';\nimport { Observable } from 'ol';\nObservable.unByKey = unByKey;\n\nexport { Observable };\n\nimport { Control, Zoom, Attribution, ScaleLine} from 'ol/control';\nimport LayerSwitcher from 'ol-layerswitcher';\nlet control = { Control, Zoom, Attribution, ScaleLine, LayerSwitcher };\nexport { control };\n\nimport * as interaction from 'ol/interaction';\nexport { interaction };\n\nimport * as sphere from 'ol/sphere';\nexport { sphere };\n\nimport { GeoJSON, KML } from 'ol/format';\nlet format = {\n\tGeoJSON: GeoJSON,\n\tKML: KML,\n};\nexport { format };\n\nimport { Tile, Group, Vector as VectorLayer, WebGLPoints, Heatmap, Image } from 'ol/layer';\nlet layer = {\n\tGroup: Group,\n\tTile: Tile,\n\tVector: VectorLayer,\n\tWebGLPoints: WebGLPoints,\n\tHeatmap: Heatmap,\n\tImage: Image,\n};\nexport { layer };\n\nimport { toLonLat, fromLonLat } from 'ol/proj';\nlet proj = {\n\ttoLonLat: toLonLat,\n\tfromLonLat: fromLonLat,\n};\nexport { proj };\n\nimport { LineString, Point, MultiPoint } from 'ol/geom';\nlet geom = {\n\tLineString: LineString,\n\tPoint: Point,\n\tMultiPoint: MultiPoint,\n};\nexport { geom };\n\n//import $Style from 'ol/style/Style';\n//\nimport { Style, Text, Stroke, Fill, Circle, Icon } from 'ol/style';\nlet style = {\n\tIcon: Icon,\n\tStyle: Style,\n\tText: Text,\n\tStroke: Stroke,\n\tFill: Fill,\n\tCircle: Circle,\n};\nexport { style };\n\nimport { OSM, XYZ, TileWMS, BingMaps, Vector as VectorSource, ImageWMS} from 'ol/source';\nlet source = {\n\tOSM: OSM,\n\tXYZ: XYZ,\n\tTileWMS: TileWMS,\n\tBingMaps: BingMaps,\n\tVector: VectorSource,\n\tImageWMS: ImageWMS,\n};\nexport {source};\n\n"],"names":["abstract","Error","uidCounter_","getUid","obj","ol_uid","String","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","this","constructor","create","AssertionError","_super","code","_this","message","split","name","BaseEvent","type","propagationStopped","target","preventDefault","stopPropagation","Disposable","disposed","dispose","disposeInternal","numberSafeCompareFunction","a","includes","arr","indexOf","linearFindNearest","direction","n","length","i","reverseSubArray","begin","end","tmp","extend","data","extension","isArray","equals","arr1","arr2","len1","TRUE","FALSE","VOID","assign","var_sources","TypeError","output","ii","arguments","source","key","clear","object","property","getValues","values","push","isEmpty","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","dispatchEvent","event","evt","Event","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","listen","opt_this","opt_once","bind","originalListener_1","apply","eventsKey","listenOnce","unlistenByKey","Observable","revision_","changed","EventType","getRevision","on","len","once","ol_key","un","unByKey","EventTarget","ObjectEvent","oldValue","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","hasProperties","notify","eventType","getChangeEventType","ObjectEventType","set","opt_silent","applyProperties","unset","changeEventTypeCache","Property","CollectionEvent","opt_element","opt_index","element","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","array","getArray","item","insertAt","elem","CollectionEventType","removeAt","remove","prev","setAt","j","opt_except","assert","assertion","errorCode","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","opt_style","styles_1","createStyleFunction","setId","id","Units","METERS_PER_UNIT","Math","PI","tmp_","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","e","coordinate","x","y","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","makeInverse","mat","det","toString","join","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","opt_extent","slice","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","Corner","getForViewAndSize","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","intersects","applyTransform","transformFn","opt_stops","width","height","xs","ys","l","_boundingExtentXYs","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","clamp","cosh","exp","log2","log","LOG2E","squaredSegmentDistance","t","squaredDistance","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","r","lerp","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","toEPSG4326","atan","EPSG4326Projection","opt_axisOrientation","cache","transforms","add","destination","sourceCode","destinationCode","getDistance","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","getLengthInternal","getAreaInternal","projection","getType","GeometryType","coords","jj","getCoordinates","geometries","getGeometries","abs","distance","bearing","lon1","dByR","lat","asin","compareVersions","v1","v2","s1","s2","n1","parseInt","n2","closestOnSegment","segment","start","along","coordinate1","coordinate2","rotate","cosAngle","sinAngle","coord1","coord2","squaredDistanceToSegment","wrapX","worldWidth","worldsAway","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","getWorldsAway","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","projectionLike","replace","opt_units","pointResolution","getter","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","projections2","forwardTransform","inverseTransform","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","transform2D","opt_dest","dest","anchor","anchorX","anchorY","deltaX","deltaY","k","translate","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","tmpTransform","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","nextArgs","arrayEquals","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","returnOrUpdate","scale","opt_sy","opt_anchor","simplify","tolerance","intersectsExtent","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","SimpleGeometry","layout","GeometryLayout","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","snap","round","quantize","quantizeArray","simplifiedEnds","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","linearRing","twiceArea","linearRings","LinearRing","maxDelta_","maxDeltaRevision_","linearRingArea","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","ret","point1","point2","intersectsLineString","coordinatesExtent","forEachSegment","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","right","isClockwise","orientLinearRings","reverseCoordinates","orientLinearRingsArray","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","arrayLength","startAngle","makeRegular","getRadius","Fill","color_","color","getColor","setColor","interpolatePoint","fraction","o","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","binarySearch","lineStringCoordinateAtM","m","extrapolate","lo","hi","m0","lineStringLength","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","Stroke","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","setLineCap","setLineDash","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","num","opt_size","ratio","toSize","ImageStyle","opacity_","opacity","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","getScale","getOpacity","getRotation","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","getSize","setOpacity","setRotateWithView","setRotation","setScale","listenImageChange","load","unlistenImageChange","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","fromNamed","el","document","createElement","body","appendChild","rgb","getComputedStyle","removeChild","fromString","cacheSize","s","g","exec","hasAlpha","substr","normalize","map","Number","fromStringInternal_","asArray","asColorLike","ua","navigator","userAgent","toLowerCase","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","createCanvasContext2D","opt_width","opt_height","opt_canvasPool","canvas","shift","getContext","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","defaultLineDash","defaultPadding","checkedFonts","setSize","console","warn","measureFont","div","measureContext","textHeights","registerFont","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","margin","padding","position","left","offsetHeight","measureAndCacheTextWidth","rotateAtOffset","context","offsetX","offsetY","drawImageOrLabel","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","label","executeLabelInstructions","drawImage","restore","createTransformStringCanvas","createTransformString","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius1","radius2_","radius2","angle_","stroke_","stroke","anchor_","size_","imageSize_","hitDetectionImageSize_","render","getFill","getPoints","getRadius2","getAngle","getStroke","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","ImageState","strokeStyle","strokeWidth","imageSize","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","closePath","drawHitDetectionCanvas_","CircleStyle","setRadius","Style","geometry_","geometryFunction_","defaultGeometryFunction","image_","image","renderer_","renderer","text_","zIndex_","zIndex","getText","getZIndex","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","feature","setZIndex","defaultStyles","createDefaultStyle","createEditingStyle","styles","white","blue","concat","Text","font_","textAlign_","textAlign","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","TextPlacement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getFont","getPlacement","getMaxAngle","getOverflow","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","BaseLayer","LayerProperty","visible","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getClassName","getLayerState","opt_managed","state","layer","managed","sourceState","getSourceState","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setVisible","zindex","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","setMap","handleSourcePropertyChange_","setSource","states","getSource","getState","SourceState","handleSourceChange_","getFeatures","pixel","frameState","layerRenderer","prepareFrame","renderFrame","RenderEventType","layerStatesArray","layerState","some","arrayLayerState","createRenderer","hasRenderer","inView","viewState","zoom","quickselect","compare","quickselectStep","z","sd","newLeft","newRight","swap","defaultCompare","RBush","[object Object]","maxEntries","_maxEntries","_minEntries","ceil","_all","bbox","result","toBBox","nodesToSearch","children","child","childBBox","leaf","contains","insert","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","indexes","goingUp","findItem","_condense","items","N","M","calcBBox","pow","N2","N1","multiSelect","compareMinX","right2","compareMinY","right3","level","targetNode","minArea","minEnlargement","bboxArea","enlargement","isNode","insertPath","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","bboxMargin","siblings","destNode","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","renderDeclutter","declutterTree","setRenderOrder","renderOrder","styleFunction","toStyleFunction","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","CanvasBuilder","maxExtent","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","opt_sharedData","hitDetectionImage","origin","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TEXT_ALIGN","top","middle","hanging","alphabetic","ideographic","bottom","BATCH_CONSTRUCTORS","Circle","PolygonBuilder","Default","Builder","ImageBuilder","LineStringBuilder","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","saveTextStates_","p0","p1","p2","p3","pixelRatio_1","flatOffset","flatEnd","oo","range","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BuilderGroup","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tile","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","forEachFeatureAtCoordinate","hitTolerance","matches","getDataAtPixel","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","imageState","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","CanvasLayerRenderer","container","renderedResolution","tempTransform","pixelTransform","containerReused","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clip","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","moveTo","clipUnrotated","inverted","dispatchRenderEvent_","event_1","preRender","postRender","getRenderTransform","renderPixel","layerExtent","pixelToCoordinateTransform","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","drawTextOnPath","startM","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","delta","iStart","charLength","chars","substring","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","test","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","measureTextWidths","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","centerX","centerY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","origin_1","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","args","imageArgs","imageDeclutterBox","collides","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","i_1","ii_1","execute","executeHitDetection","ORDER","BuilderType","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","pixelIndex","getPixelIndexArray","featureCallback","imageData","idx","result_1","executor","zs","opt_builderTypes","builderTypes","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","alpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","getKey","src","crossOrigin","shared","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","maxCacheSize","ImageBase","getResolution","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","listenImage","loadHandler","errorHandler","img","promise","listening_1","then","catch","listenerKeys","taintedTestContext","IconImage","imageState_","tainted_","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","ctx","globalCompositeOperation","imgData","putImageData","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","anchorXUnits","IconAnchorUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","iconImageCache","getIconImage","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getTolerance","renderFeature","loading","renderGeometry","renderFeatureInternal","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","renderWorlds","executorGroup","vectorSource","viewHints","ViewHint","multiWorld","getWrapX","endWorld","world","layerIndex","makeScale","transformToString","clipped","parseFloat","Promise","resolve","features","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","canvas_1","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","lastIndexOf","executorGroups","all","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","declutterBuilderGroup","CanvasBuilderGroup","getRenderTolerance","loadFeatures","getSquaredRenderTolerance","dirty","userTransform","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","VectorLayer","opt_maxEntries","rbush_","RBush_","items_","extents","uid","update","getAll","getInExtent","search","forEach_","forEachInExtent","toJSON","rbush","Source","projection_","attributions_","adaptAttributions","attributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","getAttributions","getAttributionsCollapsible","getResolutions","getContextOptions","refresh","setAttributions","setState","attributionLike","xhr","url","format","success","failure","XMLHttpRequest","open","FormatType","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","VectorSourceEvent","opt_feature","opt_features","VectorSource","loader_","format_","url_","loader","strategy_","strategy","allStrategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","filter","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","easeIn","easeOut","inAndOut","linear","Tile","interimTile","hifi","transition_","transition","transitionStarts_","release","getInterimTile","TileState","refreshInterimChain","getTileCoord","getAlpha","time","inTransition","endTransition","ImageTile","tileLoadFunction","tileLoadFunction_","naturalWidth","naturalHeight","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","Date","now","lastIndex","firstIndex","duration","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","checkWrapped","thisArg","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","callback_1","order","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","expireIconCache","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","CLASS_UNSELECTABLE","getViewport","insertBefore","firstChild","children_","renderedVisible_","declutterLayers","previousElement","oldChildren","childNodes","oldChild","newChild","replaceChildren","display","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","MapEvent","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","getEventPixel","enumerable","configurable","getCoordinateFromPixel","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","defaultPrevented","clientX","clientY","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","createExtent","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","none","getViewportClampedResolution","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","disable","View","hints_","animations_","updateAnimationKey_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","rotationNone","theta","createRotationConstraint","constraints_","setCenterInternal","setResolution","setZoom","options_","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","animate","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","animationCallback","series","animation","complete","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","currentResolution","opt_rotation","setViewportSize","ViewProperty","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getZoomForResolution","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","getViewportSizeMinusPadding_","reducedSize","calculateCenterOn","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRotX","centerRotY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","coordinatesEqual","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","MapProperty","view","createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","getTarget","getTargetElement","getView","getOverlayById","getLoading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getOverlayContainer","getOverlayContainerStopEvent","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","elementFromPoint","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","lowOnFrameBudget","targetElement","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","hasArea","usedTiles","MapEventType","setLayerGroup","setView","computedStyle","offsetWidth","Control","target_","mapEvent","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","updateElement_","lastChild","removeChildren","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","LEADING_DIGITS","ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","steps","scaleBarText_","dpi_","dpi","setDpi","pointResolutionUnits","ProjUnits","nominalCount","suffix","metersPerDegree","decimalCount","html","decimal","createScaleBar","toFixed","mapScale","getScaleForResolution","toLocaleString","scaleSteps","stepWidth","backgroundColor","createMarker","createStepText","isLast","lengthString","mpu","Interaction","setActive","InteractionProperty","active","zoomByDelta","DoubleClickZoom","delta_","stopEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","centroid","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","hasAttribute","activeElement","focus","always","mouseActionButton","never","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","centerpx","DragRotate","lastAngle_","RenderBox","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","DragBox","box_","minArea_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","mapExtent","boxPixelExtent","scaleFromCenter","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","KeyCode","mapUnitsDelta","pan","KeyboardZoom","charCode","charCodeAt","Mode","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","DragAndDropEventType","DragAndDropEvent","file","opt_projection","DragAndDrop","readAsBuffer_","formats_","formatConstructors","dropListenKeys_","source_","handleResult_","formats","TextDecoder","tryReadFeatures_","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","files","dataTransfer","reader","FileReader","readAsArrayBuffer","readAsText","dropEffect","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","setCenterAndRadius","getRadiusSquared_","lineStrings","appendLineString","multiLineString","opt_interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","douglasPeuckerArray","intersectsLineStringArray","appendPoint","multiPoint","getPoint","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingssArea","linearRingssCenter","getInteriorPointsOfMultiArray","getInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","DrawEventType","DrawEvent","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","features_","snapTolerance_","snapTolerance","type_","mode","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","Constructor_1","mode_1","squaredLength","squaredCoordinateDistance","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","move","addToDrawing_","startDrawing_","atFinish_","finishDrawing","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","createOrUpdateCustomSketchLine_","ring","sketchLineGeom","removeLastPoint","sketchFeature","abortDrawing_","appendCoordinates","newDrawing","ending","sketchFeatures","overlaySource","ExtentEventType","ExtentEvent","Extent","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","getDefaultExtentStyleFunction","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","snapToVertex_","pixelCoordinate","getExtentInternal","segments","getSegments","closestSegment","vertex","vertexPixel","coordinateDistance","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","fixedPoint","fixedP1","fixedP2","tempExtent","tempSegment","ModifyEventType","ModifyEvent","Modify","boundHandleFeatureChange_","defaultDeleteCondition_","altKeyOnly","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","changingFeature_","dragSegments_","getDefaultStyleFunction","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","handleSourceAdd_","handleSourceRemove_","hitDetection","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","writer","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","segmentData","depth","rings","centerSegmentData","circumferenceSegmentData","featureSegments","geometry_1","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","compareIndexes","segmentDataMatch","closestOnSegmentData","insertVertex_","opt_coordinate","nodes","hitPointGeometry","bufferExtent","projectedDistanceToSegmentDataSquared","vertexSegments","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","component","newIndex","dragSegments","segmentsByFeature","deleted","pointCoordinates","distanceToCenterSquared","distanceToCircumference","SelectEventType","SelectEvent","selected","deselected","originalFeatureStyles","Select","boundAddFeature_","boundRemoveFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","layers_1","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","removeFeatureLayerAssociation_","getFeatureFromEvent","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","snapped","updateFeature_","featuresToUpdate","opt_unlisten","unregister","nodesToRemove_1","currentMap","closestSegmentData","projectedCoordinate","isCircle","closestOnCircle","TranslateEventType","TranslateEvent","startCoordinate","Translate","lastCoordinate_","startCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","deltaX_1","deltaY_1","geom","oldMap","defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","Map","zoomOptions","rotateOptions","attribution","attributionOptions","defaultControls","defaultInteractions","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","opt_tileCoord","getKeyZXY","hash","TileCache","expireCache","pruneExceptNewestZ","fromKey","TileRange","containsTileRange","module","ol_Observable","createClass","defineProperties","props","descriptor","writable","protoProps","staticProps","CSS_PREFIX","LayerSwitcher","_Control","instance","classCallCheck","collapseTipLabel","ReferenceError","possibleConstructorReturn","getPrototypeOf","activationMode","startActive","groupSelectStyle","getGroupSelectStyle","mapListeners","hiddenClassName","isTouchDevice_","shownClassName","panel","enableTouchScroll_","onclick","hidePanel","showPanel","onmouseover","onmouseout","relatedTarget","subClass","superClass","inherits","_this2","receiver","Function","desc","getOwnPropertyDescriptor","renderPanel","render_event","ensureTopVisibleBaseLayerShown","forEachRecursive","_idx","_a","setGroupVisibility","setChildVisibility","ul","renderLayers_","_changedLyr","rendercomplete_event","grp","lyrs","getGroupsAndLayers","isBaseGroup","descendantVisibility","every","v","group","groupVisible","groupIndeterminate","lastVisibleBaseLyr","lyr","_arr","setVisible_","filterFn","_lyr","li","lyrTitle","checkboxId","uuid","btn","toggleFold_","checked","indeterminate","onchange","htmlFor","_input","rsl","elm","renderLayer_","random","scrollStartPos","scrollTop","touches","pageY","createEvent","factory","require$$0","require$$1","require$$2","FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","transformed","equivalentProjection","decimals","power_1","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","JSON","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","cloneGeometries","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","objects","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","createElementNS","namespaceURI","qualifiedName","getDocument","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertySetter","opt_property","localName","makeChildAppender","nodeWriter","makeSimpleNodeFactory","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","nextElementSibling","parsers","parser","pushParseAndPop","pushSerializeAndPop","serializersNS","nodeFactory","opt_keys","serialize","xmlSerializer_","document_","implementation","createDocument","XMLFeature","XMLSerializer","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","readBoolean","readDecimal","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeDecimalTextNode","string","toPrecision","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","DEFAULT_NO_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","TEXTAREA","GX_NAMESPACE_URIS","NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","pixels","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readLineString","readLinearRing","readPoint","readPolygon","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readStyleURL","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","LINK_PARSERS","href","readURI","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_FILL_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","defaultIconUrlFunction","KML","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","iconUrlFunction_","iconUrlFunction","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","getAttribute","sharedStyles","drawName","multiGeometryPoints","featureStyle","findStyle","styleValue","nameStyle","foundStyle","textOffset","createNameStyleFunction","createFeatureStyleFunction","styleUri","baseURI","location","URL","fs","readName","readNameFromDocument","readNameFromNode","name_1","name_2","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","setAttributeNS","readColor","hexColor","readFlatCoordinates","re","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","heading","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","gxTrackObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","altitudeMode","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIs","flatLinearRing","INNER_BOUNDARY_IS_PARSERS","outerBoundaryIs","OUTER_BOUNDARY_IS_PARSERS","flatLinearRings","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","LabelStyle","LineStyle","PolyStyle","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","createCDATASection","writeCDATASection","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","pointStyles","lineStyles","polyStyles","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","styleArray","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","outerRing","POLY_STYLE_SERIALIZERS","iconProperties","supportedExtensions","CONTEXT_IDS","opt_attributes","BufferUsage","WebGLArrayBuffer","opt_usage","usage","ofSize","getArrayClassForType","fromArray","from","fromArrayBuffer","getUsage","Float32Array","Uint32Array","WebGLPostProcessingPass","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetTextureLocation_","uniforms_","uniforms","getGL","init","textureSize","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","viewport","internalFormat","RGBA","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","activeTexture","TEXTURE0","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","ImageData","texture","uniform3f","uniform4f","uniform1f","fromTransform","mat4","DefaultUniform","AttributeType","UNSIGNED_SHORT","UNSIGNED_INT","WebGLHelper","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","bufferCache_","currentProgram_","getSupportedExtensions","getExtension","ContextEventType","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","postProcessPasses_","postProcesses","shaderCompileErrors_","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","buf","bufferCacheEntry","isContextLost","prepareDraw","getCanvas","applyFrameState","prepareDrawToRenderTarget","renderTarget","opt_disableAlphaBlend","getFramebuffer","getTexture","ZERO","drawElements","elementType","numItems","offsetInBytes","finalizeDraw","offsetScaleMatrix","resetTransform","scaleTransform","offsetRotateMatrix","rotateTransform","setUniformMatrixValue","setUniformFloatValue","HTMLImageElement","prevValue","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderInfoLog","getShaderCompileErrors","getAttributeLocation","makeProjectionTransform","uniformMatrix4fv","enableAttributeArray_","attribName","enableAttributes","attributes","attr","getByteSizeFromType","computeAttributesStride","opt_data","opt_texture","BYTES_PER_ELEMENT","Uint16Array","WebGLWorkerMessageType","WebGLLayerRenderer","helper","tmpArray4","WebGLRenderTarget","helper_","texture_","framebuffer_","data_","dataCacheDirty_","updateSize_","clearCachedData","readAll","readPixels","readPixel","blob","Blob","createObjectURL","WebGLPointsLayerRenderer","projectionMatrixTransform","sourceRevision_","verticesBuffer_","hitVerticesBuffer_","indicesBuffer_","program_","hitDetectionEnabled_","hitFragmentShader","hitVertexShader","hitProgram_","customAttributes","attribute","hitDetectionAttributes","currentTransform_","renderTransform_","invertRenderTransform_","renderInstructions_","hitRenderInstructions_","hitRenderTarget_","worker_","Worker","received","projectionTransform","vertexBuffer","indexBuffer","makeInverseTransform","renderInstructions","featureCache_","featureCount_","sourceListenKeys_","handleSourceFeatureAdded_","handleSourceFeatureChanged_","handleSourceFeatureDelete_","handleSourceFeatureClear_","renderCount","renderHitDetection","viewNotMoving","extentChanged","sourceChanged","BaseVector","rebuildBuffers_","multiplyTransform","featureCache","totalInstructionsCount","totalHitInstructionsCount","hitColor","tmpCoords","tmpColor","renderIndex","hitIndex","featureUid","radix","customAttributesCount","postMessage","hitMessage","colorDecodeId","terminate","DEFAULT_GRADIENT","Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","getBlur","getGradient","colors","createLinearGradient","step","addColorStop","createGradient","u_size","u_blurSlope","u_gradientTexture","BaseImageLayer","CanvasImageLayerRenderer","imageLayer","viewResolution","imageSource","renderedExtent","imageExtent","imageResolution","imagePixelRatio","viewCenter","size_1","dw","dh","previousAlpha","ImageLayer","CanvasTileLayerRenderer","tileLayer","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpTileRange_","isDrawableTile","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getTile","getPreload","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","drawTileImage","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alphaChanged","postRenderFunction","preload","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","tmpTileCoord","TileGrid","opt_strict","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","createOrUpdateTileRange","getTileRangeExtent","getTileSize","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","createOrUpdateTileCoord","getTileCoordResolution","getFullTileRange","fullTileRanges","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","createXYZ","xyzOptions","gridOptions","opt_maxResolution","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","getTileGrid","scaleSize","getTileCoordForTileUrlFunction","withinExtentAndZ","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTileUrlFunctions","tileUrlFunctions","tileCoordHash","brokenDiagonalRendering_","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","stop_1","expandUrl","templates","createFromTemplates","BaseTileLayer","setPreload","setUseInterimTilesOnError","TileProperty","TileLayer","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","IMAGE_SMOOTHING_DISABLED","msImageSmoothingEnabled","drawTestTriangle","u1","u2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","ud","vd","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","reproject_","renderReprojected","leftToLoad_1","sourceListenKey_1","unlistenSources_","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","ValueTypes","Operators","getValueType","valueArr","operator","getReturnType","numberToGlsl","arrayToGlsl","getStringNumberEquivalent","stringLiteralsMap","expressionToGlsl","typeHint","toGlsl","valueType","stringToGlsl","assertNumber","assertNumbers","assertString","assertBoolean","assertArgsCount","assertArgsMinCount","assertArgsMaxCount","assertArgsEven","assertUniqueInferredType","types","getEqualOperator","getDecisionOperator","arg","inFragmentShader","variables","parsedArgs","opt_typeHint","interpolation","outputType","stop1","output1","stop2","fallback","assertArgsOdd","ShaderBuilder","varyings","sizeExpression","rotationExpression","offsetExpression","colorExpression","texCoordExpression","discardExpression","addUniform","addAttribute","addVarying","expression","setSizeExpression","setRotationExpression","setSymbolOffsetExpression","setColorExpression","setTextureCoordinateExpression","setFragmentDiscardExpression","setSymbolRotateWithView","getSizeExpression","getOffsetExpression","getColorExpression","getTextureCoordinateExpression","getFragmentDiscardExpression","getSymbolVertexShader","forHitDetection","offsetMatrix","varying","getSymbolFragmentShader","hitDetectionBypass","WebGLPointsLayer","parseResult_","symbStyle","symbol","texCoord","textureCoord","vertContext","parsedSize","parsedOffset","parsedTexCoord","parsedRotation","fragContext","parsedColor","parsedOpacity","opacityFilter","visibleSize","symbolType","st","builder","parsedFilter","varName","attrName","attributeName","parseLiteralStyle","hitDetectionDisabled_","disableHitDetection","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","opt_errback","opt_callbackParam","script","cleanup","async","timer","getElementsByTagName","requestJSONP","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","mask","quadKey","imageryProviders","transform_1","imageryProvider","intersecting","coverageAreas","coverageArea","XYZ","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEventType","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","getImageInternal","handleImageChange","defaultImageLoadFunction","appendParams","uri","params","keyParams","encodeURIComponent","qs","GETFEATUREINFO_IMAGE_SIZE","ImageWMS","params_","v13_","updateV13_","serverType_","ratio_","getFeatureInfoUrl","projectionObj","sourceProjectionObj","baseParams","SERVICE","VERSION","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","getRequestUrl_","getLegendUrl","LAYERS","getParams","viewExtent","requestExtent","getImageLoadFunction","WMSServerType","setImageLoadFunction","updateParams","version","OSM","TileWMS","transparent","tmpExtent_","getKeyForParams_","tileExtent","bufferSize","transformExtent","Group","Vector","WebGLPoints","toLonLat","lonLat","lon","fromLonLat"],"mappings":"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"}